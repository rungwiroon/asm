; This contents file was created with HelpScribble 3.5.2
; Registered to: COST Solutions Ltd.

:BASE ASMHELP.hlp
:TITLE Intel Pentium Instruction Set Reference
1 General Information
2 Introduction=Scribble10
2 Document Conventions=Scribble15
2 Documentation Format=Scribble12
2 Basic Architecture Overview=Scribble11
2 Pentium Optimisations=Scribble17
1 Instruction Set Reference
2 AAA - Ascii Adjust for Addition=Scribble20
2 AAD - Ascii Adjust AX Before Division=Scribble30
2 AAM - Ascii Adjust AX After Multiply=Scribble40
2 AAS - ASCII Adjust AL After Subtraction=Scribble50
2 ADC - Add with Carry=Scribble60
2 ADD - Add=Scribble70
2 AND - Logical AND=Scribble80
2 ARPL - Adjust RPL Field of Segment Selector=Scribble90
2 BOUND - Check Array Index Against Bounds=Scribble100
2 BSF - Bit Scan Forward=Scribble110
2 BSR - Bit Scan Reverse=Scribble120
2 BSWAP - Byte Swap=Scribble130
2 BT - Bit Test=Scribble140
2 BTC - Bit Test and Compliment=Scribble150
2 BTR - Bit Test and Reset=Scribble160
2 BTS - Bit Test and Set=Scribble170
2 CALL - Call Procedure=Scribble180
2 CBW - Convert Byte to Word=Scribble190
2 CWDE - Convert Word to Doubleword=Scribble195
2 CDQ - Convert Double to Quad=Scribble200
2 CWD - Convert Word to Doubleword=Scribble210
2 CLC - Clear Carry Flag=Scribble220
2 CLD - Clear Direction Flag=Scribble230
2 CLI - Clear Interrupt Flag=Scribble240
2 CLTS - Clear Task-Switched Flag in CR0=Scribble250
2 CMC - Complement Carry Flag=Scribble260
2 CMP - Compare Two Operands =Scribble280
2 CMPS/CMPSB/CMPSW/CMPSD - Compare String Operands =Scribble290
2 CMPXCHG - Compare and Exchange=Scribble300
2 CMPXCHG8B - Compare and Exchange 8 Bytes=Scribble310
2 CPUID - CPU Identification=Scribble320
2 DAA - Decimal Adjust AL after Addition=Scribble330
2 DAS - Decimal Adjust AL after Subtraction=Scribble340
2 DEC - Decrement by 1=Scribble350
2 DIV - Unsigned Divide =Scribble360
2 ENTER - Make Stack Frame for Procedure Parameters=Scribble380
2 HLT - Halt=Scribble390
2 IDIV - Signed Divide=Scribble400
2 IMUL - Signed Multiply=Scribble410
2 IN - Input from Port =Scribble420
2 INC - Increment by 1=Scribble430
2 INS/INSB/INSW/INSD - Input from Port to String=Scribble440
2 INT n/INTO/INT 3 - Call to Interrupt Procedure=Scribble450
2 INVD - Invalidate Internal Caches=Scribble460
2 INVLPG - Invalidate TLB Entry =Scribble470
2 IRET/IRETD - Interrupt Return=Scribble480
2 Jcc - Jump if Condition Is Met=Scribble490
2 JMP - Jump=Scribble500
2 JCXZ/JECXZ - Jump if CX/EAX = 0=Scribble505
2 LAHF - Load Status Flags into AH Register=Scribble510
2 LAR - Load Access Rights Byte=Scribble520
2 LDS - Load Far Pointer=Scribble530
2 LES - Load Far Pointer=Scribble540
2 LFS - Load Far Pointer=Scribble550
2 LGS - Load Far Pointer=Scribble560
2 LSS - Load Far Pointer=Scribble570
2 LEA - Load Effective Address =Scribble580
2 LEAVE - High Level Procedure Exit=Scribble590
2 LGDT/LIDT - Load Global/Interrupt Descriptor Table Register=Scribble600
2 LLDT - Load Local Descriptor Table Register=Scribble610
2 LIDT - Load Interrupt Descriptor Table Register=Scribble620
2 LMSW - Load Machine Status Word =Scribble630
2 LOCK - Assert LOCK# Signal Prefix=Scribble640
2 LODS/LODSB/LODSW/LODSD - Load String=Scribble650
2 LOOP - Loop According to ECX Counter =Scribble660
2 LOOPcc - Loop According to ECX Counter =Scribble670
2 LSL - Load Segment Limit=Scribble680
2 LTR - Load Task Register=Scribble690
2 MOV - Move =Scribble700
2 MOV - Move to/from Control Registers=Scribble710
2 MOV - Move to/from Debug Registers=Scribble720
2 MOVS/MOVSB/MOVSW/MOVSD - Move Data from String to String=Scribble750
2 MOVSX - Move with Sign-Extension =Scribble760
2 MOVZX - Move with Zero-Extend=Scribble770
2 MUL - Unsigned Multiply =Scribble780
2 NEG - Two's Complement Negation=Scribble790
2 NOP - No Operation =Scribble800
2 NOT - One's Complement Negation=Scribble810
2 OR - Logical Inclusive OR=Scribble820
2 OUT - Output to Port =Scribble830
2 OUTS/OUTSB/OUTSW/OUTSD - Output String to Port =Scribble840
2 POP - Pop a Value from the Stack =Scribble850
2 POPA/POPAD - Pop All General-Purpose Registers=Scribble860
2 POPF/POPFD - Pop Stack into EFLAGS Register=Scribble870
2 PUSH - Push Word or Doubleword Onto the Stack=Scribble880
2 PUSHA/PUSHAD - Push All General-Purpose Registers=Scribble890
2 PUSHF/PUSHFD - Push EFLAGS Register onto the Stack=Scribble900
2 RCL - Rotate Bits Left with CF=Scribble910
2 RCR - Rotate Bits Right with CF=Scribble915
2 ROL - Rotate Bits Left=Scribble917
2 ROR - Rotate Bits Right=Scribble919
2 RDMSR - Read from Model Specific Register=Scribble920
2 RDTSC - Read Time-Stamp Counter=Scribble925
2 REP/REPE/REPZ/REPNE/REPNZ - Repeat String Operation Prefix=Scribble930
2 RET - Return from Procedure=Scribble940
2 RSM - Resume from System Management Mode=Scribble950
2 SAHF - Store AH into Flags=Scribble960
2 SAL - Shift Arithmetic Left=Scribble970
2 SAR - Shift Arithmetic Right=Scribble975
2 SHL - Shift Left=Scribble977
2 SHR - Shift Right=Scribble979
2 SBB - Integer Subtraction with Borrow=Scribble980
2 SCAS/SCASB/SCASW/SCASD - Scan String=Scribble990
2 SETcc - Set Byte on Condition=Scribble1000
2 SGDT/SIDT - Store Global/Interrupt Descriptor Table Register =Scribble1010
2 SHLD - Double Precision Shift Left =Scribble1020
2 SHRD - Double Precision Shift Right=Scribble1030
2 SIDT - Store Interrupt Descriptor Table Register=Scribble1040
2 SLDT - Store Local Descriptor Table Register=Scribble1050
2 SMSW - Store Machine Status Word=Scribble1060
2 STC - Set Carry Flag=Scribble1070
2 STD - Set Direction Flag=Scribble1080
2 STI - Set Interrupt Flag=Scribble1090
2 STOS/STOSB/STOSW/STOSD - Store String=Scribble1100
2 STR - Store Task Register =Scribble1110
2 SUB - Subtract=Scribble1120
2 TEST - Logical Compare=Scribble1130
2 VERR/VERW - Verify a Segment for Reading or Writing=Scribble1140
2 WAIT - Wait=Scribble1150
2 WBINVD - Write Back and Invalidate Cache=Scribble1160
2 WRMSR - Write to Model Specific Register =Scribble1170
2 XADD - Exchange and Add=Scribble1180
2 XCHG - Exchange Register/Memory with Register=Scribble1190
2 XLAT/XLATB - Table Look-up Translation=Scribble1200
2 XOR - Logical Exclusive OR=Scribble1210
