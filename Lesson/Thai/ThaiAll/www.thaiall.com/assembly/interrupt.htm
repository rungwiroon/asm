<html>
<!-- Mirrored from www.thaiall.com/assembly/interrupt.htm by HTTrack Website Copier/3.x [XR&CO'2008], Mon, 21 Dec 2009 05:42:13 GMT -->
<head><title>อินเทอร์รัพท์ (DOS Interrupt)</title>
<meta http-equiv=content-type content="text/html; charset=windows-874">
<meta name="keywords" content="interrupt,assembly,computer,organization,programming,language,principles">
<meta name="description" content="คำสั่ง interrupt">
<style type="text/css">
body{font-family:microsoft sans serif;font-size:10pt}
a:link{color:red;}
a:visited{color:purple;}
textarea{font-family:microsoft sans serif;color:blue;background-color:#ddffdd}
td{font-size:10pt;font-family:microsoft sans serif;}
</style>
</head>
<body text=black bgcolor=white topmargin=0 leftmargin=0>
<table width=100% cellpadding=0 cellspacing=0 border=0 bgcolor=#808080><tr bgcolor=red height=1><td colspan=3> </td></tr>
<tr><td><a href=http://www.thaiall.com/me><img src=ta1.gif border=0></a></td><td align=center><font color=white>
อินเทอร์รัพท์ (DOS Interrupt)</td><td align=right><a href=http://www.thaiall.com/sponsor.htm><img src=ta2.gif border=0></a></td></tr><tr bgcolor=#dddddd height=3><td colspan=3> </td></tr>
</table>

<br>ปรับปรุง : 2551-06-30 (ปรับการแสดงผล)
<br>
<table width=760 align=center bgcolor=#f9f9f9><td>
<font size=4><b>อินเทอร์รัพท์ (Interrupt)</b> หมายถึง อะไร</font>
<div align=justify>
<dd>ทางเข้าโปรแกรมย่อยที่ BIOS หรือ DOS มีไว้บริการ เป็นการเข้าไปขัดจังหวะ
เพื่อขอกระทำการบางอย่าง เช่น ขอพิมพ์ ขออ่านข้อมูลบางอย่าง เป็นต้น
ผู้รู้บางท่านกล่าวว่า interrupt เหมือน call function ในภาษาคอมพิวเตอร์ คือ
เข้าไปเรียกโปรแกรมบางอย่างมาทำงานจนเสร็จ แล้วย้อนกลับมาทำบรรทัดต่อไป
<dd>อินเทอร์รัพท์เป็นกระบวนการในการส่งสัญญาณบอกให้ซีพียูรับรู้แล้วหยุดงานที่ทำอยู่
และหันมาตอบสนองต่ออินเทอร์รัพที่ร้องขอ เป็นวิธีที่เหมาะสมที่สุด
ในการติดต่อระหว่างอุปกรณ์และซีพียู มีลักษณะคล้ายการเรียกใช้ subroutine
<hr color=blue><b>Interrupt List</b> (<a href=http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/ralf/pub/WWW/files.html>http://www-2.cs.cmu.edu</a> <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61a.zip>#A</a> .. <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61f.zip>#F</a>)
<dd>The original interrupt list is from Ralph Brown, but I couldn't handle it on my computer (and I have a good one). This is why I adapted it. The interrupt page I have now has 85 files describing the interrupts, with in each file about 100 little (original) files. This has some advantages, like the saved disk space, but also disadvantages, like the longer waiting before getting a interrupt. Something positive about this is: when you once showed one page, you have 100 interrupts in your cache and when you search a lot of interrupts, you can easely scroll forward to the next interrupt.
</div>
<hr color=blue>
<b>อินเทอร์รัพท์ที่น่าสนใจ (Interested Interrupt)</b>
<dd>อินเทอร์รัพท์หมายเลข 0H : พิมพ์ข้อความ Divide Overflow และหยุดการทำงาน
<dd>อินเทอร์รัพท์หมายเลข 10H บริการที่ 0 : กำหนดสกรีนโหมด (Set Screen Mode)
<dd>อินเทอร์รัพท์หมายเลข 10H บริการที่ 1 : กำหนดชนิดของเคอร์เซอร์
<dd>อินเทอร์รัพท์หมายเลข 10H บริการที่ 6 : เลื่อนแอ็กทีฟเพจขึ้น [<a href=seqbasic.htm>ตัวอย่าง</a>]
<dd>อินเทอร์รัพท์หมายเลข 20H : เทอร์มิเนตโปรแกรม
<dd>อินเทอร์รัพท์หมายเลข 21H บริการที่ 0 : เทอร์มิเนตโปรแกรม
<dd>อินเทอร์รัพท์หมายเลข 21H บริการที่ 2 : ส่งอักขระไปยังจอภาพ
<dd>อินเทอร์รัพท์หมายเลข 21H บริการที่ 8 : รับข้อมูลจากคอนโทรลโดยไม่แสดงบนจอภาพให้เห็น แต่เพิ่มการตรวจสอบการกด &lt;Ctrl-C> หรือ &lt;Ctrl-Break>
<dd>อินเทอร์รัพท์หมายเลข 21H บริการที่ 9 : พิมพ์สตริงก์
<dd>อินเทอร์รัพท์หมายเลข 21H บริการที่ 4CH : เทอร์มิเนตโปรแกรม

</table>
<table width=760 bgcolor=black align=center>
<tr bgcolor=#000044><font size=6 color=white>Sample of using : int 0h</font>
<tr><td>
<font color=yellow size=4>:: สร้างโปรแกรมขนาด 4 byte ชื่อ test.com เพื่อหยุดการทำงานของโปรแกรม
<pre><font face="courier new" color=white>C:\>debug test.com
-a
11BD:0100 mov ah,0
11BD:0102 int 21
11BD:0104
-rcx
CX 0000
:4
-w
Writing 00004 bytes
-q
C:\>test.com
C:\>
</font></pre></table>
<br>
<table width=760 bgcolor=black align=center>
<tr bgcolor=#000044><font size=6 color=white>:: ตัวอย่างการใช้ interrupt ใน debug อย่างสั้น</font>
<tr><td valign=top><pre><font color=yellow>
// ex1 : รับค่าจากแป้นพิมพ์ส่งให้ errorlevel ใน DOS<font face="courier new" color=white>
mov ah,8
int 21
mov ah,4c
int 21
</font>
// ex2 : รับค่าจากแป้นพิมพ์ แล้วแสดงผล<font face="courier new" color=white>
mov ah,8
int 21
mov ah,2
mov dl,al
int 21
mov ah,4c
int 21
</font>
// ex3 : สั่ง Clear screen โดยกำหนด mode ของจอภาพ<font face="courier new" color=white>
mov ah,0
mov al,2
int 10
mov ah,0
int 21
</font>
// ex4 : กำหนด cursor ให้เป็นแถบทึบ<font face="courier new" color=white>
mov ah,1
mov ch,0
mov cl,7
int 10
mov ah,0
int 21
</font>
// ex5 : เปลี่ยน Mode การแสดงผล ด้วย int 10h<font face="courier new" color=white>
mov ah,0
mov al,12
int 10h
mov ah,4c
int 21h
<td valign=top><pre><font color=yellow>
// ex6 : พิมพ์อักษร AB และ ab คนละบรรทัด<font face="courier new" color=white>
mov ah,2
mov dl,41
int 21
mov ah,2
mov dl,42
int 21
mov ah,2
mov dl,0d
int 21
mov ah,2
mov dl,0a
int 21
mov ah,2
mov dl,61
int 21
mov ah,2
mov dl,62
int 21
mov ah,0
int 21
</font>
// ex7 : พิมพ์อักษร ABCDE โดยกำหนด ah = 2<font face="courier new" color=white>
mov ah,2
mov dl,41
int 21
mov dl,42
int 21
mov dl,43
int 21
mov dl,44
int 21
mov dl,45
int 21
mov ah,0
int 21
</font>
</pre></table>
<table width=760 align=center bgcolor=#f9f9f9><td>
<b>Download interrupt listing</b> from <a href=http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/ralf/pub/WWW/files.html>http://www-2.cs.cmu.edu</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61a.zip>http://www.cs.cmu.edu/~ralf/interrupt-list/inter61a.zip</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61b.zip>http://www.cs.cmu.edu/~ralf/interrupt-list/inter61b.zip</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61c.zip>http://www.cs.cmu.edu/~ralf/interrupt-list/inter61c.zip</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61d.zip>http://www.cs.cmu.edu/~ralf/interrupt-list/inter61d.zip</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61e.zip>http://www.cs.cmu.edu/~ralf/interrupt-list/inter61e.zip</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/interrupt-list/inter61f.zip>http://www.cs.cmu.edu/~ralf/interrupt-list/inter61f.zip</a>
<br># <a href=http://www.cs.cmu.edu/~ralf/interrupt-list/faq.lst>http://www.cs.cmu.edu/~ralf/interrupt-list/faq.lst</a>
<br># <a href=../../www.cs.cmu.edu/_ralf/pub-files/dvint43.zip>http://www.cs.cmu.edu/~ralf/pub-files/dvint43.zip</a>
<td valign=top width=350><b>ข้อมูลด้านล่างนี้ เรียบเรียงโดย</b>
<dd>สุรณัฐ  เกตุมณี, ฆนากร  อินนั่งแท่น, เกียรติศักดิ์  จันทน์เกษร, วัชรา  ผู้ผ่อง, ธิดารัตน์  มหายศ, เทวพงศ์  วงค์เขื่อนแก้ว, ฤทธิพงศ์  วงค์เขื่อนแก้ว, กัลยาณี  รุ่งวรรธนะ, อรวรรณ  เนตรประสาท, รัมม์  คำแก้ว
</table>
<table width=760 align=center bgcolor=#f9f9f9><td>
<font color=blue size=6>ไบออสและดอสอินเทอร์รัพท์</font>
<br><b>อินเทอร์รัพท์หมายเลข 0</b> :
<dd>พิมพ์ข้อความ Divide Overflow และหยุดการเอกซีคิวต์โปรแกรม ทำให้มีการหารด้วย 0 เกิดขึ้น
<br><b>อินเทอร์รัพท์หมายเลข 1</b> :
<dd>การเอกซีคิวต์ทีละคำสั่ง (Single Step) อินเทอร์รัพท์นี้มีไว้สำหรับโปรแกรมประเภทดีบักเกอร์โดยเฉพาะ การเรียกใช้อินเทอร์รัพท์นี้ในระหว่าง การเอกซีคิวต์โปแกรมจะทำให้เกิดการเอกซีคิวต์ทีละคำสั่ง
<br><b>อินเทอร์รัพท์หมายเลข 2</b> :
<dd>นอนมาส์อินเทอร์รัพท์ (Nonmaskble Interrupt,NMI)</font>
อินเทอร์รัพท์นี้เป็นฮาร์ดแวร์อินเทอร์รัพท์ อินเทอร์รัพท์นี้ไม่ถูกควบคุมด้วยคำสั่ง
STI และ CLI อินเทอร์รัพท์นี้จึงถูกเอกซีคิวต์เสนอเมื่อมันถูกเรียกใช้
<br><b>อินเทอร์รัพท์หมายเลข 3</b> :
<dd>จุดหยุดการเอกซีคิวต์ (Break point)
อินเทอร์รัพท์นี้เป็นอินเทอร์รัพท์หนึ่งที่มีไว้สำหรับโปรแกรมประเภทดีบักเกอร์โดย
เฉพาะหรือที่เรียกว่า ดีบักเกอร์อินเทอร์รัพท์ อินเทอร์รัพท์นี้ทำให้เราสามารถเอกซีคิวตืทุกคำสั่ง
ที่อยู่ก่อนหน้าแอสเดรสเฉพาะแอสเดรสหนึ่ง ๆ ได้ และเมื่อถึงแอสเดรสนี้แล้วให้หยุดการเอกซีคิวต์
ดีบักเองก็มีการใช้อินเทอร์รัพท์นี้ในคำสั่ง GO โดยแทรกคำสั่ง INT 3 ไว้ที่แอส
เดรสนั้นก่อนที่จะส่งความควบคุมไปยังโปรแกรมและเมื่อโปรแกรมถูกเอกซีคิวต์มาพบกับคำสั่ง
INT 3 แล้วการควบคุมก็จะถูกส่งกลับคืนมายังดีบักอีกครั้งหนึ่ง
<br><b>อินเทอร์รัพท์หมายเลข 4</b> : โอเวอร์โฟลว์ (Overflow)
<dd>อินเทอร์รัพท์นี้คล้ายกับอินเทอร์รัพท์หมายเลข 0 ตรงที่มันจะถูกเรียกใช้เมื่อเกิดเหตุการณ์ที่ไม่ปกติขึ้น
ซึ่งในกรณีนี้ก็คือ การเกิดโอเวอร์โฟลว์ โดยปกติแล้ว
อินเทอร์รัพท์นี้ไม่ได้ทำสั่งใดๆและไบออสก็เพียงแต่รีเทิร์นการควบคุบกลับมาเท่านั้น
<br><b>อินเทอร์รัพท์หมายเลข 5</b> : พิมพ์หน้าจอ (Print Screen)
<dd>อินเทอร์รัพท์นี้เป็นอินเทอร์รัพท์ที่ถูกเรียกใช้เมื่อมีการกดปุ่ม  &lt;Print Screen>
บนคีย์บอร์ดมีหน้าที่ในการพิมพ์ข้อมูลต่างๆที่ปรากฏ
บนหน้าจอออกทางพรินเตอร์ การใช้คำสั่ง INT5 ในโปแกรมจึงให้ผลเหมือนการกดปุ่ม
&lt;Print Screen> บนคีย์บอร์ด ไม่ต้องผ่านค่า
อาร์กิวเมนต์ใด ๆ ไปให้กับอินเทอร์รัพท์นี้
<br><b>อินเทอร์รัพท์หมายเลข 6 และ 7</b>  : สงวนไว้ (Reserved)</font>
<br><b>อินเทอร์รัพท์หมายเลข 8</b>  :
<dd>วันเวลา (Time Of Day) อินเทอร์รัพท์นี้เป็นอีกอินเทอร์รัพท์หนึ่งที่เป็นฮาร์ดแวร์อินเทอร์รัพท์
ถูกเรียกใช้เพื่อการอัปเดตเวลาภายในเครื่องที่เก็บไว้ในพื้นที่ของข้อมูลไบออส
ซึ่งใน 1 วินาทีเดิน 18.5 ครั้ง นอกจากนี้ยังอัปเดตวันที่ให้ถูกต้องอีกด้วย
อินเทอร์รัพท์นี้มีการเรียกใช้อินเทอร์รัพท์หมายเลข 1CH  ขึ้นมาทำงานด้วย ดังนั้น
หากเราต้องการอินเตอร์เซปไทเมอร์เพื่อทำบางสิ่งบางอย่าง 18.2 ครั้งใน
1 วินาที่แล้ว จึงเป็นการดีกว่าที่จะเลือกอินเตอร์เซปอินเทอร์รัพท์หมายเลข 1CH
แทนที่จะอินเตอร์เซปอินเทอร์รัพท์นี้
<br><b>อินเทอร์รัพท์หมายเลข 9</b> :
<dd>คีย์บอร์ด (Keyboard) อินเทอร์รัพท์นี้เป็นอีกอินเทอร์รัพท์หนึ่งที่เป็นฮาร์ดแวร์อินเทอร์รัพท์ที่ถูก
อินเตอร์เซปได้ ด้วยโปรแกรมประเภทฝังตัวในหน่วยความจำ
(terminate and stay resident program, TSR)
<br><b>อินเทอร์รัพท์หมายเลข 0AH</b>  : สงวนไว้ (Reserved)
<br><b>อินเทอร์รัพท์หมายเลข 0BH - 0FH</b> :
<dd>อินเตอร์รัพท์เหล่านี้ชี้ไปยังรูทีนของไบออสที่ชื่อ D_EOI (BIOS end of interrupt routine)
มีหน้าที่รีเซตและรีเทิร์นอินเทอร์รัพท์แฮนเดลอร์ (interrupt handler) ที่พอร์ต 20H
</table>
<table width=760 align=center bgcolor=#ffffdd><td>
<pre>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 0 : กำหนดสกรีนโหมด (Set Screen Mode)</font>
<u>อินพุต</u>
AH = 0
AL = โหมด
<table border=0 align=center bgcolor=white>
<tr bgcolor=#dddddd align=center>
<td>โหมดใน AL
<td>ขนาดของการแสดงผล
<td>จำนวนสี
<td>อะแดปเตอร์
<td>จำนวนหน้าสูงสุด
<tr bgcolor=99ccff>
<td>0H
<td>40 X 25
<td>B&W test
<td>CGA,EGA,VGA
<td>8
<tr bgcolor=99ccff>
<td>1H
<td>40 X 25
<td>Color test
<td>CGA,EGA,VGA
<td>8
<tr bgcolor=99ccff>
<td>2H
<td>80 X 25
<td>B&W test
<td>CGA,EGA,VGA
<td>4(CGA) 8(EGA,VGA)
<tr bgcolor=99ccff>
<td>3H
<td>80 X 25
<td>Color test
<td>CGA,EGA,VGA
<td>4(CGA) 8(EGA,VGA)
<tr bgcolor=99ccff>
<td>4H
<td>320 X 200
<td>4
<td>CGA,EGA,VGA
<td>1
<tr bgcolor=99ccff>
<td>5H
<td>320 X 200
<td>B&W
<td>CGA,EGA,VGA
<td>1
<tr bgcolor=99ccff>
<td>6H
<td>640 X 200
<td>2(on or off)
<td>CGA,EGA,VGA
<td>1
<tr bgcolor=99ccff>
<td>7H
<td>80 X 25
<td>Monochrome
<td>MDA,EGA,VGA
<td>1(MDA) 8(EGA,VGA)
<tr bgcolor=99ccff>
<td>8H
<td>160 X 200
<td>16
<td>PCjr
<td>1
<tr bgcolor=99ccff>
<td>9H
<td>320X200
<td>16
<td>PCjr
<td>1
<tr bgcolor=99ccff>
<td>AH
<td>640X200
<td>1
<td>PCjr
<td>1
<tr bgcolor=99ccff>
<td>DH
<td>320X200
<td>16
<td>EGA,VGA
<td>8
<tr bgcolor=99ccff>
<td>EH
<td>640X200
<td>16
<td>EGA,VGA
<td>4
<tr bgcolor=99ccff>
<td>FH
<td>640X350
<td>Monochrome
<td>EGA,VGA
<td>2
<tr bgcolor=99ccff>
<td>10H
<td>640X350
<td>16
<td>EGA,VGA
<td>2
<tr bgcolor=99ccff>
<td>11H
<td>640X480
<td>2
<td>VGA
<td>1
<tr bgcolor=99ccff>
<td>12H
<td>640X480
<td>16
<td>VGA
<td>1
<tr bgcolor=99ccff>
<td>13H
<td>320X200
<td>256
<td>VGA
<td>1</table>
<u>หมายเหตุ</u> โหมด B และ C สงวนไว้ใช้ในอนาคต
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 1 : กำหนดชนิดของเคอร์เซอร์</font>
<u>อินพุต</u>
AH = 1
CH = เส้นเริ่มต้นของเคอร์เซอร์
CL = เส้นสุดท้ายของเคอร์เซอร์
<u>เอาต์พุต</u>
เคอร์เซอร์ขนาดใหม่ตามที่กำหนด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 2 : กำหนดตำแหน่งของเคอร์เซอร์</font>
<u>อินพุต</u>
AH = 2
DH,Dl = แถว,คอลัมน์
BH = หมายเลขหน้า
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 3 : หาตำแหน่งคอร์เซอร์</font>
<u>อินพุต</u>
AH = 3
BH = หมายเลขหน้า
<u>เอาต์พุต</u>
DH,DL = แถว,คอลัมน์ของเคอร์เซอร์
CH,CL = ขนาดปัจจุบันของเคอร์เซอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 4 : อ่านตำแหน่งของไลต์เพน</font>
<u>อินพุต</u>
AH = 4
<u>เอาต์พุต</u>
AH = 0 --> ไม่มีการกดสวิตช์บนไลต์เพน
AL = 1 --> DH,DL = แถว,คอลัมน์ของตำแหน่งที่ไลต์เพนอยู่
CH เป็นราสเตอร์ไลน์ (แนวดิ่ง)มีค่า 0 ถึง 199
BX เป็นพิกเซลคอลัมน์ (แนวราบ) มีค่า 0 ถึง 319,639
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 5 : กำหนดแอ็กทีฟเพจ</font>
<u>อินพุต</u>
AH = 5
AL = 0 - 7(สกรีนโหมด 0,1) และ0 - 3(สกรีนโหมด 2,3)
<u>เอาต์พุต</u>
แอ็กทีฟเพจเปลี่ยนไปตามที่กำหนด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 6 : เลื่อนแอ็กทีฟเพจขึ้น</font>
<u>อินพุต</u>
AH = 6
AL = จำนวนบรรทัดว่างที่ส่วนล่างของจอภาพ (0 --> เลื่อนทั้งหน้าจอ)
CH,CL = แถว,คอลัมน์ของจุดมุมบนซ้ายของพื้นที่ที่จะเลื่อน
DH,DL = แถว,คอลัมน์ของจุดมุมล่างขวาของพื้นที่ที่จะเลื่อน
BH = แอตตริบิวต์ของบรรทัดว่าง สำหรับกำหนดสี
<dd>เช่น MOV BH,71H โดยสีพื้นคือเลข 7 และสีตัวอักษรคือเลข 1
<dd>0=ดำ 1=น้ำเงิน 2=เขียว 3=ฟ้า 4=แดง 5=ม่วง 6=ทอง 7=เทา 
<u>เอาต์พุต</u>
แอกทีฟเพจเลื่อนขึ้นไปตามที่กำหนด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 7 : เลื่อนแอ็กทีฟเพจลง</font>
<u>อินพุต</u>
AH = 7
AL = จำนวนบรรทัดว่างที่ส่วนล่างของจอภาพ (0 --> เลื่อนทั้งหน้าจอ)
CH,CL = แถว,คอลัมน์ของจุดมุมบนซ้ายของพื้นที่ที่จะเลื่อน
DH,DL = แถว,คอลัมน์ของจุดมุมล่างขวาของพื้นที่ที่จะเลื่อน
BH = แอตตริบิวต์ของบรรทัดว่าง
<u>เอาต์พุต</u>
แอกทีฟเพจเลื่อนลงไปตามที่กำหนด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 8 : อ่านแอตตริบิวต์และรหัสแอสกีของอักขระที่อยู่ที่ตำแหน่งของเคอร์เซอร์</font>
<u>อินพุต</u>
AH = 8
BH = หมายเลขหน้า
<u>เอาต์พุต</u>
AL = รหัสแอสกีของอักขระที่อยู่ที่ตำแหน่งของเคอร์เซอร์
AH = แอตตริบิวต์ของอักขระที่อยู่ที่ตำแหน่งของเคอร์เซอร์ (เฉพาะแอลฟานัมเบอริกส์เท่านั้น)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 9 : แอตตริบิวต์และอักขระที่ตำแหน่งของเคอร์เซอร์</font>
<u>อินพุต</u>
AH = 9
AL = รหัสแอสกีของอักขระที่จะเขียน
BH = หมายเลขหน้า
BL = แอตตริบิวต์ (ในเท็กโหมด)
<dd>ค่าสี (ในกราฟโหมด)
CX = จำนวนอักขระที่จะเขียน
<u>เอาต์พุต</u>
อักขระถูกเขียนบนจอภาพที่ตำแหน่งเคอร์เซอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ A : เขียนเฉพาะ อักขระที่ตำแหน่งเคอร์เซอร์</font>
<u>อินพุต</u>
AH = 0AH
AL = รหัสแอสกีของอักขระที่จะเขียน
BH = หมายเลขหน้า
CX = จำนวนอักขระที่จะเขียน
<u>เอาต์พุต</u>
อักขระถูกเขียนบนจอภาพที่ตำแหน่งเคอร์เซอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ B : กำหนดพาเลตต์ของสี</font>
<u>อินพุต</u>
AH = 11
BH = หมายเลขพาเลตต์ของสี
BH = 0 --> สีพื้น
BH = 1 --> หมายเลขพาเลตต์ของสีโดย
<dd>0 = เขียว/แดง/เหลือง
<dd>1 = น้ำเงินแกมเขียว/ม่วง/ขาว
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ C : เขียนจุด</font>
<u>อินพุต</u>
AH = 12
AL = ค่าสี (0 ถึง 3)
CX = หมายเลขคอลัมน์ของจุดที่จะเขียน (0 ถึง 319,639)
DX = หมายเลขแถวของจุดที่จะเขียน (0 ถึง 199)
<u>ข้อสังเกต</u> ถ้าบิตที่ 7 ของAL เป็น 1 ค่าสีจะถูกกระทำทางบิตแบบ XORed กับค่าสีปัจจุบันของจุดนั้น
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ D : อ่านจุด</font>
<u>อินพุต</u>
AH = 13
CX = หมายเลขคอลัมน์ของจุดที่จะเขียน (0 ถึง 319,639)
DX = หมายเลขแถวของจุดที่จะเขียน (0 ถึง 199)
<u>เอาต์พุต</u>
AL = ค่าสี (0 ถึง 3)
<u>ข้อสังเกต</u> ถ้าบิตที่ 7 ของAL เป็น 1 ค่าสีจะถูกกระทำทางบิตแบบ XORed กับค่าสีปัจจุบันของจุดนั้น
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ E : เขียนแบบเทเลไทป์บนแอ็กทีฟเพจ</font>
<u>อินพุต</u>
AL = รหัสแอสกีของอักขระที่จะเขียน
BL = โหมดปัจจุบัน(ดู INT 10H บริการที่ 0)
BH = แอก็กทีฟเพจ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ FH : กำหนดพาเลตต์รีจิสเตอร์</font>
ตาราง ก.1 ตารางแสดงค่าสีของดีฟอลต์พาเลตต์ (0 ถึง 15) ใน EGV
<table><td>
<table border=0 bgcolor=#CCFFFF>
<tr bgcolor=#FFCCFF>
<td>ค่าสี<td>สี<td>rgbRGB
<tr><td>0<td>ดำ<td>000000
<tr><td>1<td>น้ำเงิน<td>000001
<tr><td>2<td>เขียว<td>000010
<tr><td>3<td>น้ำเงินแกมเขียว<td>000011
<tr><td>4<td>แดง<td>000100
<tr><td>5<td>ม่วง<td>000101
<tr><td>6<td>น้ำตาล<td>010100
<tr><td>7<td>ขาว<td>000111
</table>
<td><table border=0 bgcolor=#CCFFFF>
<tr bgcolor=#FFCCFF>
<td>ค่าสี<td>สี<td>rgbRGB
<tr><td>8<td>เทาเข้ม<td>111000
<tr><td>9<td>น้ำเงินอ่อน<td>111001
<tr><td>10<td>เขียวอ่อน<td>111010
<tr><td>11<td>น้ำเงินแกมเขียวอ่อน<td>111011
<tr><td>12<td>แดงอ่อน<td>111100
<tr><td>13<td>ม่วงอ่อน<td>111101
<tr><td>14<td>เหลือง<td>111110
<tr><td>15<td>ขาวเข้ม<td>111111
</table>
</table>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 0 : กำหนดพาเลตต์รีจิสเตอร์ (ทีละตัว)</font>
<u>อินพุต</u>
AH = 10H
AL = 0
BL = พาเลตต์รีจิสเตอร์ที่จะกำหนด (0 ถึง 15)
BH = ค่าที่จะให้แก่พาเลตต์รีจิสเตอร์ (0 ถึง 63)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 1 : กำหนดโอเวอร์สแกน (บอร์เดอร์) รีจิสเตอร ์</font>
<u>อินพุต</u>
AH = 10H
AL = 1
BH = ค่าที่กำหนด (0 ถึง 63)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 2 : กำหนดพาเลตต์รีจิสเตอร์ (ทุกตัว)</font>
<u>อินพุต</u>
AH = 10H
AL = 1
ES:BX = แอดเดรสของตารางขนาด 17 ไบต์ที่เก็บผลการเลือกค่าสี
<dd>ไบต์ที่ 0 ถึง 15 เก็บผลการเลือกค่าสีสำหรับพาเลตต์รีจิสเตอร์ตัวที่ 0 ถึง 15
<dd>ไบต์ที่ 16 เก็บค่าสีใหม่ของโอเวอร์สแกน (บอร์เดอร์)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 7 : อ่านพาเลตต์รีจิสเตอร์ (ทีละตัว)</font>
<u>อินพุต</u>
AH = 10H
AL = 7
BL = พาเลตต์รีจิสเตอร์ที่จะอ่าน
<u>เอาต์พุต</u>
BH = ค่าในพาเลตต์รีจิสเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 8 : อ่านโอเวอร์สแกน (บอร์เดอร์) รีจิสเตอร์</font>
<u>อินพุต</u>
AH = 10H
AL = 8
<u>เอาต์พุต</u>
BH = ค่าในโอเวอร์สแกน (บอร์เดอร์) รีจิสเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 10H : กำหนด DAC รีจิสเตอร์</font>
<u>อินพุต</u>
AH = 10H
AL = 10H
BX = รีจิสเตอร์ที่กำหนด CH = ความเข้มของสีเขียว
CL = ความเข้มของสีน้ำเงิน
DH = ความเข้มของสีแดง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 10H ฟังก์ชั่นที่ 12H : กำหนด DAC รีจิสเตอร ์</font>
<u>อินพุต</u>
AH = 10H
AL = 10H
BX = รีจิสเตอร์แรกที่กำหนด (0 ถึง 255)
CX = จำนวนรีจิสเตอร์ที่กำหนด (1 ถึง 256)
ES:DX = แอสเดรสของตารางความเข้มสีโดยที่ DAC รีจิสเตอร์แต่ละตัวใช้ 3 ไบต์
<dd>(ใช้ แต่ 6 บิตล่างของแต่ละไบต์) ตารางจะกำหนดในลักษณะแดง เขียว น้ำเงิน แดง เขียว น้ำเงิน....
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่10H ฟังก์ชั่นที่ 13H : เลือกโหมดของหน้าสี</font>
<u>อินพุต</u>
AH = 10H
AL = 13H
BL = 0 เลือกโหมดของหน้าสี
BH = 0 เลือก 4 DAC เพจรีจิสเตอร์จาก 64 รีจิสเตอร์
BH = 1 เลือก 16 DAC เพจรีจิสเตอร์จาก 16 รีจิสเตอร์
BL = 1 เลือกแอ็กทีฟคัลเลอร์เพจ
สำหรับโหมดที่มีเพียง 4 เพจ
<dd>BH = 0 เลือกบล็อก 1 ของ 64 DAC เพจรีจิสเตอร์
<dd>BH = 1 เลือกบล็อก 2 ของ 64 DAC เพจรีจิสเตอร์
<dd>BH = 2 เลือกบล็อก 3 ของ 64 DAC เพจรีจิสเตอร์
<dd>BH = 3 เลือกบล็อก 4 ของ 64 DAC เพจรีจิสเตอร์
<dd>สำหรับโหมดที่มี 16 เพจ
<dd>BH = 0 เลือกบล็อก 1 ของ 16 DAC เพจรีจิสเตอร์
<dd>BH = 1 เลือกบล็อก 2 ของ 16 DAC เพจรีจิสเตอร์
<dd>:
<dd>:
<dd>BH = 14 เลือกบล็อก 15 ของ 16 DAC เพจรีจิสเตอร์
<dd>BH = 15 เลือกบล็อก 16 ของ 16 DAC เพจรีจิสเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 11H : คาเรกเตอร์เจนเนอร์เตอร์</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 10H บริการที่ 12H : เลือก</font>
<u>อินพุต</u>
AH = 10H
BL = 30H
AL = 0 --> 200 สกรีนสแกนไลน์
<dd>= 1 --> 350 สกรีนสแกนไลน์
<dd>= 2 --> 400 สกรีนสแกนไลน์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 11H : ตรวจสอบอุปกรณ์ที่ต่อเข้ากับเครื่อง</font>
<u>อินพุต</u>
อยู่ในบิตต่าง ๆ ของ AX
<table border=0>
<tr bgcolor=#FF9933>
<td>บิตที่
<td>ความหมาย
<tr bgcolor=#99CCFF>
<td>15,14
<td>จำนวนพรินเตอร์
<tr bgcolor=#99CCFF>
<td>13
<td>ไม่ได้ใช้
<tr bgcolor=#99CCFF>
<td>12
<td>=1 ถ้ามีเกมอะแคปเตอร์ต่ออยู่
<tr bgcolor=#99CCFF>
<td>11,10,9
<td>จำนวน RS 232 การ์ดที่ติดตั้งแล้ว
<tr bgcolor=#99CCFF>
<td>8
<td>ไม่ได้ใช้
<tr bgcolor=#99CCFF>
<td>7,6
<td>จำนวนดิสเกตต์ไดรฟ์(ถ้าบิตที่ 0=1)
<tr bgcolor=#99CCFF>
<td>
<td>00 --> 1 ; 01 --> 2 ; 10 --> 3 ; 11 --> 4
<tr bgcolor=#99CCFF>
<td>5,4
<td>วีดีโอโหมด
<tr bgcolor=#99CCFF>
<td>
<td>(00 ไม่ได้ใช้ 01= 40x25 Color Card 10 80x 25
<tr bgcolor=#99CCFF>
<td>
<td>Color Card , 11 = 80x25 Monochrome)
<tr bgcolor=#99CCFF>
<td>3,2
<td>ขนาดของแรมบนแมนบอร์ด
<tr bgcolor=#99CCFF>
<td>
<td>(00 = 16K , 01 = 32K , 10 = 48K , 11 = 64K)
<tr bgcolor=#99CCFF>
<td>1
<td>ไม่ได้ใช้
<tr bgcolor=#99CCFF>
<td>0
<td>= 1 ถ้ามีดิสเกตต์ไดรฟ์ต่ออยู่</table>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 12H : ตรวจสอบขนดของหน่วยความจำ</font>
<u>อินพุต</u>
AX = จำนวนบล็อกขนาด 1 K ที่ต่อเนื่องกันในหน่วยความจำ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 12H บริการที่ 0 : รีเซตดิสก์</font>
<u>อินพุต</u>
AH = 0
<u>เอาต์พุต</u>
CY = 0 --> AH = 0 , สำเร็จ
CY = 1 --> AH = รหัสความผิดพลาด (ดูบริการที่ 1)
<u>ข้อสังเกต</u> สำหรับฮาร์ดดิสก์ : DL = 80H --> รีเซตดิสเกตต์
<dd>DL = 81H --> รีเซตดิสเกตต์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 1 : รีเซตดิสก์</font>
<u>อินพุต</u>
AH = 0
<u>เอาต์พุต</u>
รหัสความผิดพลาดเกี่ยวกับดิสก์

<table border=0>
<tr bgcolor=#9999FF>
<td>ค่าใน AL
<td>ความหมาย
<tr bgcolor=#CCFFCC>
<td>00
<td>ไม่มีข้อผิดพลาด
<tr bgcolor=#CCFFCC>
<td>01
<td>มีการส่งคำสั่งที่ไม่ถูกต้องไปยังดิสก์คอนโทรลเลอร์
<tr bgcolor=#CCFFCC>
<td>02
<td>ไม่พบแอสเดรสตามที่ระบุ
<tr bgcolor=#CCFFCC>
<td>11,10,9
<td>จำนวน RS 232 การ์ดที่ติดตั้งแล้ว
<tr bgcolor=#CCFFCC>
<td>03
<td>ดิสเกตต์ในไดรฟ์ปัจจุบันติดแถบป้องกันการบันทึกอยู่
<tr bgcolor=#CCFFCC>
<td>04
<td>ไม่พบเซกเตอร์ของดิสก์เกตต์ในไดรฟ์ปัจจุบัน
<tr bgcolor=#CCFFCC>
<td>05
<td>รีเซตล้มเหลว
<tr bgcolor=#CCFFCC>
<td>07
<td>ไดรฟ์พารามิเตอร์ไม่ถูกต้อง
<tr bgcolor=#CCFFCC>
<td>09
<td>สิ้นสุดของการ DMA ระหว่างเซกเมนต์
<tr bgcolor=#CCFFCC>
<td>0B
<td>พบแทร็กเสีย
<tr bgcolor=#CCFFCC>
<td>10H
<td>การตรวจสอบไม่ถูกต้อง
<tr bgcolor=#CCFFCC>
<td>11H
<td>ข้อมูลได้รับการแก้ไขอย่างไม่ถูกต้อง
<tr bgcolor=#CCFFCC>
<td>20H
<td>ดิสก์คอนโทรลเลอร์ทำงานล้มเหลว
<tr bgcolor=#CCFFCC>
<td>40H
<td>ไม่สามารถค้นหาคำสั่งได้
<tr bgcolor=#CCFFCC>
<td>80H
<td>ไม่มีการตอบสนองจากดิสก์เกตต์ในไดรฟ์ปัจจุบัน
<tr bgcolor=#CCFFCC>
<td>0BBH
<td>พบข้อผิดพลาดที่ไม่มีการนิยามมาก่อน
<tr bgcolor=#CCFFCC>
<td>0FFH
<td>ไม่สามารถรับรู้คำสั่งได้</table>
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้วค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 2 : อ่านข้อมูลจากเซกเตอร์เข้ามาเก็บไว้ในหน่วยความจำ</font>
<u>อินพุต</u>
AH = 2
DL = หมายเลขไดรฟ์
DH = หมายเลขของหัวอ่าน
CH = หมายเลขของแทร็กหรือไซลินเดอร์
CL = บิตที่ 7,6 เก็บ 2 บิตสูงของหมายเลขไซลินเดอร์ซึ่งมีขนาด 10 บิต
CL = บิตที่ 0 ถึง 5 เก็บหมายเลขเซกเตอร์
AL = จำนวนเซกเตอร์ที่จะอ่าน
<dd>แผ่นฟลอปปี้ 1 ถึง 8
<dd>ฮาร์ดดิสก์ 1 ถึง 80H
ES:BX = แอดเดรสของบัฟเฟอร์จะอ่านและเขียน
<u>เอาต์พุต</u>
CY = 0 --> AL = จำนวนเซกเตอร์ที่อ่าน
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้วค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 3 : เขียนข้อมูลลงในเซกเตอร์ของแผ่นดิสก์</font>
<u>อินพุต</u>
AH = 3
DL = หมายเลขไดรฟ์
DH = หมายเลขของหัวอ่าน
CH = หมายเลขของแทร็กหรือไซลินเดอร์
CL = บิตที่ 7,6 เก็บ 2 บิตสูงของหมายเลขไซลินเดอร์ซึ่งมีขนาด 10 บิต
CL = บิตที่ 0 ถึง 5 เก็บหมายเลขเซกเตอร์
AL = จำนวนเซกเตอร์ที่จะอ่าน
<dd>แผ่นฟลอปปี้ 1 ถึง 8
<dd>ฮาร์ดดิสก์ 1 ถึง 80H
ES:BX = แอดเดรสของบัฟเฟอร์จะอ่านและเขียน
<u>เอาต์พุต</u>
CY = 0 --> AL = จำนวนเซกเตอร์ที่เขียน
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้ว ค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 4 : ตรวจสอบเซกเตอร</font>
<u>อินพุต</u>
AH = 4
DL = หมายเลขไดรฟ์
DH = หมายเลขของหัวอ่าน
CH = หมายเลขของแทร็กหรือไซลินเดอร์
CL = บิตที่ 7,6 เก็บ 2 บิตสูงของหมายเลขไซลินเดอร์ซึ่งมีขนาด 10 บิต
CL = บิตที่ 0 ถึง 5 เก็บหมายเลขเซกเตอร์
AL = จำนวนเซกเตอร์ที่จะอ่าน
<dd>แผ่นฟลอปปี้ 1 ถึง 8
<dd>ฮาร์ดดิสก์ 1 ถึง 80H
ES:BX = แอดเดรสของบัฟเฟอร์จะอ่านและเขียน
<u>เอาต์พุต</u> 
CY = 0 --> AL = จำนวนเซกเตอร์ที่เขียน
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้ว ค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 8 : ตรวจสอบเซกเตอร์ บริการนี้ใช้เฉพาะฮาร์ดดิสก์ของเครื่อง PS/2</font>
<u>อินพุต</u>
AH = 8
DL = หมายเลขไดรฟ์
เอาต์พุต
DL = จำนวนไดรฟ์ที่ต่อเข้ากับดิสก์คอนโทรลเลอร์
DH = จำนวนหัวอ่านมากสุด
CH = จำนวนไซลินเดอร์มากสุด
CL = บิตที่ 7,6 เก็บ 2 บิตสูงของหมายเลขไซลินเดอร์ซึ่งมีขนาด 10 บิต
CL = บิตที่ 0 ถึง 5 บิตสูงของหมายเลขเซกเตอร์
BL สำหรับดิสก์เกตต์ที่ใช้กับเครื่อง PS/2 เท่านั้น
<dd>= 1 --> ไดรฟ์ความจุ 360 กิโลไบต์
<dd>= 2 --> ไดรฟ์ความจุ 1.2 เมกะไบต์
<dd>= 3 --> ไดรฟ์ความจุ 720 กิโลไบต์
<dd>= 4 --> ไดรฟ์ความจุ 1.44 เมกะไบต์
ES:BX = แอดเดรสของบัฟเฟอร์จะอ่านและเขียน
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้วค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 0AH และ 0BH : สงวนไว้</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 0CH : ตรวจสอบเซกเตอร์</font>
บริการนี้ช้ได้เฉพาะกับฮาร์ดดิสก์
<u>อินพุต</u>
AH = 0CH
DH = หมายเลขหัวอ่าน
DL = หมายเลขของไดรฟ์ (80 ถึง 87H)
CH = หมายเลขของแทร็กหรือไซลินเดอร์
CL = บิตที่ 7,6 เก็บ 2 บิตสูงของหมายเลขไซลินเดอร์ซึ่งมีขนาด 10 บิต
CL = บิตที่ 0 ถึง 5 เก็บหมายเลขเซกเตอร์
<u>เอาต์พุต</u>
CY = 0 --> AL = 0 สำเร็จ
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้ว ค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 0DH : รีเซตดิสก์สลับกัน</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 0EH และ 0FH : สงวนไว้</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 10H : ตรวจสอบความพร้อมของไดรฟ์</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 11H : คาลิเบรตไดรฟ์ของฮาร์ดดิสก์ใหม่</font>
บริการนี้ใช้ได้เฉพาะกับฮาร์ดดิสก์
<u>อินพุต</u>
AH = 11H (อ่าน)
DL = หมายเลขของไดรฟ์ (80 ถึง 87H)
<u>เอาต์พุต</u>
CY = 0 --> AL = 0 สำเร็จ
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง
ฮาร์ดดิสก์ สำหรับฮาร์ดดิสก์แล้วค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 12H : วินิจฉัยฮาร์ดดิสก์</font>
บริการนี้ใช้ได้เฉพาะกับฮาร์ดดิสก์
<u>อินพุต</u>
AH = 12H (วินิจฉัยแรม)
AH = 13H (วินิจฉัยไดรฟ์)
AH = 14H (วินิจฉัยดิสก์คอนโทรลเลอร์)
DL = หมายเลขของไดรฟ์ (80 ถึง 87H)
<u>เอาต์พุต</u>
CY = 0 --> AL = 0 สำเร็จ
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้ว ค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 13H บริการที่ 19H : พักการทำงานของหัวอ่านฮาร์ดดิสก์ (Park)</font>
บริการนี้ใช้ได้เฉพาะกับฮาร์ดดิสก์ของเครื่อง PS/2
<u>อินพุต</u>
DL = หมายเลขของไดรฟ์
<u>เอาต์พุต</u>
CY = 0 --> AL = 0 สำเร็จ
CY = 1 --> AH = รหัสบอกความผิดพลาดของดิสก์ (ดูบริการที่ 1)
<u>ข้อสังเกต</u> DL = หมายเลขไดรฟ์ ; ถ้าบิตที่ 7 เป็น 1 หมายถึง ฮาร์ดดิสก์
สำหรับฮาร์ดดิสก์แล้ว ค่าใน DL เป็นได้ตั้งแต่ 80H ถึง 87H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 14H ,AH = 0 : อินนิเชียลพอร์ต RS 232</font>
<u>อินพุต</u>
AH = 0
DL = ค่าในบิตต่างๆ มีความหมายดังนี้
บิตที่ 0,1 = ขนาดของเวิร์ค โดย
<dd>01 --> 7 บิต
<dd>11 --> 8 บิต
บิตที่ 2 = จำนวนสตอปบิต โดย
<dd>0 --> 1 สตอปบิต
<dd>1 --> 2 สตอปบิต
บิตที่ 3,4 = พาริตี้ โดย
<dd>00 --> ไม่มี (none)
<dd>01 --> คี่ (odd)
<dd>11 --> คู่ (even)
บิตที่ 5,6,7 = Baud rate โดย
<dd>ค่า 000 --> 110
<dd>001 --> 150
<dd>010 --> 300
<dd>011 --> 600
<dd>100 --> 1200
<dd>101 --> 2400
<dd>110 --> 4800
<dd>111 --> 9600
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 14H ,AH = 1 :  ส่งอักขระไปยังซีเรียลพอร์ต</font>
<u>อินพุต</u>
AH = 1
AL = รหัสแอสกีของอักขระที่จะส่งไป
<u>เอาต์พุต</u>
ถ้าบิตที่ 7 ของ AH = 1 แสดงว่า ล้มเหลว
ถ้าบิตที่ 7 ของ AH = 0 แล้วบิตที่ 0 ถึง 6 เก็บสถานะ (ดู INT 14H ,AH = 3)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 14H ,AH = 2 :  ส่งอักขระไปยังซีเรียลพอร์ต</font>
<u>อินพุต</u>
AH = 2
<u>เอาต์พุต</u>
AL = รหัสแอสกีของอักขระที่จะส่งไป
AH = 0 แสดงว่า สำเร็จ
<dd>= ค่าอื่น แล้ว AH เก็บรหัสของความผิดพลาด (ดู INT 14H ,AH = 3)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 14H ,AH = 3 : ตรวจสอบเซกเตอร์</font>
<u>อินพุต</u>
AH = 3
<u>เอาต์พุต</u>
AH = ค่าในบิตต่าง ๆ ถ้าถูกเซตจะมีความหมายดังนี้
<dd>บิตที่ 7 --> Time out
<dd>บิตที่ 6 --> Shift register empty
<dd>บิตที่ 5 --> Holding register empty
<dd>บิตที่ 4 --> Break detected
<dd>บิตที่ 3 --> Framing error
<dd>บิตที่ 2 --> Parity error
<dd>บิตที่ 1 --> Overrun error
<dd>บิตที่ 0 --> Data ready
AL = ค่าในบิตต่าง ๆ มีความหมายดังนี้
<dd>บิตที่ 7 --> Received line signal detect
<dd>บิตที่ 6 --> Ring indicator
<dd>บิตที่ 5 --> Data set ready
<dd>บิตที่ 4 --> Clear to send
<dd>บิตที่ 3 --> Delta receive line signal detect
<dd>บิตที่ 2 --> Trailing edge ring detector
<dd>บิตที่ 1 --> Delta data set ready
<dd>บิตที่ 0 --> Delta clear to send
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 15H : คาสเซ็ตต์อินพุตและเอาต์พุต</font>
<u>อินพุต</u>
AH = 0 --> เปิดมอเตอร์ของคาสเซ็ตต์
AH = 1 --> ปิดมอเตอร์ของคาสเซ็ตต์
AH = 2 --> อ่านบล็อกของข้อมูล (ขนาด 1 หรือ 256 ไบต์)
<dd>แล้วเก็บวืที่ ES:BXโดย CX = จำนวนไบต์ที่อ่าน
AH = 3 --> อ่านบล็อกของข้อมูล (ขนาด 1 หรือ 256 ไบต์)
<dd>แล้วเก็บวืที่ ES:BXโดย CX = จำนวนไบต์ที่อ่าน
<u>เอาต์พุต</u>
DX = จำนวนไบต์ที่อ่านได้จริง
CY = 0 --> AL = 0 สำเร็จ
CY = 1 --> AH = รหัสบอกความผิดพลาด โดย
<dd>= 01 --> การตรวจสอบ CRC ผิดพลาด (cyclic redundance check, CRC)
<dd>= 02 --> มีข้อมูลสูญหายระหว่างทาง
<dd>= 03 --> ไม่พบข้อมูล
<dd>ในไบออสรุ่นใหม่ ๆ มีการเพิ่มหน้าทึความรับผิดชอบให้กับินเตอร์รัปต์นี้อันได้แก่
สนับสนุนการใช้จอยสติก การเปลี่ยนโหมดการทำงานของโปรดเซสเซอร์ (โหมดปกติหรือโปรเท็กซ์โหมด)
การใช้เมาส์ และพารามิเตอร์ของไบออส
<hr color=gray>
<table width=100%><td valign=top><pre>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 16H บริการที่ 0 : อ่านคีย์จากคีย์บอร์ด</font>
<u>อินพุต</u>
AH = 0
<u>เอาต์พุต</u>
AH = รหัสสแกน
AL = รหัสแอสกี
</pre><td valign=top><pre><b>ตัวอย่าง</b>
MOV     AH,00
INT     16
MOV     AH,4C
INT     21
</pre></table>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 16H บริการที่ 1 : ตรวจสอบว่าคีย์บอร์ดพร้อมที่จะถูกอ่านหรือไม่</font>
<u>อินพุต</u>
AH = 2
<u>เอาต์พุต</u>
แฟล็กศูนย์ = 0 --> บัฟเฟอร์ว่าง
แฟล็กศูนย์ = 1 --> AH = รหัสสแกน
AL = รหัสแอสกี
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 16H บริการที่ 2 : หาคีย์บอร์ดสถานะคีย์บอร์ด</font>
<u>อินพุต</u>
AH = 2
<u>เอาต์พุต</u>
AL = ไบต์บอกสถานะของคีย์บอร์ด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 17H บริการที่ 0 : พิมพ์อักขระที่เก็บใน AL ออกพรินเตอร์</font>
<u>อินพุต</u>
AH = 0
AL = อักขระที่จะพิมพ์
DX = หมายเลขพรินเตอร์ (0,1,2)
<u>เอาต์พุต</u>
AH = 1 --> printer time out
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 17H บริการที่ 1 : อินนิเชียลพรินเตอร์พอร์ต</font>
<u>อินพุต</u>
AH = 1
DX = หมายเลขพรินเตอร์ (0,1,2)
<u>เอาต์พุต</u> 
AH = สถานะของพรินเตอร์
ค่าในบิตต่าง ๆ ของ AH ถ้าถูกเซตจะมีความหมายดังนี้
<dd>บิตที่ 7 --> พรินเตอร์ไม่ว่าง
<dd>บิตที่ 6 --> Ackmowledge
<dd>บิตที่ 5 --> กระดาษหมด
<dd>บิตที่ 4 --> Selected
<dd>บิตที่ 3 --> I/O error
<dd>บิตที่ 2 --> ไม่ได้ใช้
<dd>บิตที่ 1 --> ไม่ได้ใช้
<dd>บิตที่ 0 --> Time out
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 17H บริการที่ 2 : อ่านสถานะของพรินเตอร์เข้ามาเก็บไว้ใน AH</font>
<u>อินพุต</u>
AH =
DX = หมายเลขพรินเตอร์ (0,1,2)
<u>เอาต์พุต</u>
AH = สถานะของพรินเตอร์ (เหมือน INT 17H บริการที่ 1)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 18H : Resident BASIC</font>
อินเทอร์รัพท์นี้ใช้ติดตั้ง ROM Resident BASIC ในเครื่องพีซี
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 19H : บูตแสตรป (Bootstrap)</font>
อินเทอร์รัพท์นี้ใช้บูตเครื่อง (ลองเรียกใช้บริการนี้ด้วยดีบัก)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1AH บริการที่ 0 : อ่านเวลาของวัน</font>
<u>อินพุต</u>
AH = 0
<u>เอาต์พุต</u>
CX = เวิร์ดสูงของ timer count
DX = เวิร์ดต่ำของ timer count
AL = 0 ถ้าไทเมอร์ยังไม่เกิน 24 ชั่วโมงนับตั้งแต่การอ่านครั้งสุดท้าย
<u>ข้อสังเกต</u> timer count มีค่าเพิ่มขึ้นชั่งโมงละ 65,536
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1AH บริการที่ 1 : กำหนดเวลาของวัน</font>
<u>อินพุต</u>
AH = 0
CX = เวิร์ดสูงของ TIMER COUNT
DX = เวิร์ดต่ำของ TIMER COUNT
<u>ข้อสังเกต</u> TIMER COUNT มีค่าเพิ่มขึ้นชั่งโมงละ 65,536
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1BH : แอดเดรสของคีย์บอร์ดเบรก</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1CH : ไทเมอร์ติกอินเทอร์รัพท์ (Timer Tick Interrupt)</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1DH : ตารางวีดิโอพารามิเตอร์</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1EH : ดิสเกตต์พารามิเตอร์</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 1FH : นิยามอักขระกราฟิก</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 20H : เทอร์มิเนตโปรแกรม</font>
โปรแกรมส่วนใหญ่จบการทำงานด้วยอินเทอร์รัพท์นี้
</table>
<table width=760 align=center bgcolor=#ddffdd><td>
<pre>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H</font>
<dd>เป็นอินเทอร์รัพท์ที่เป็นที่รวมของบริการต่าง ๆ ของดอสเอาไว้ การเรียกใช้บริการ
ต่าง ๆ ในอินเทอร์รัพท์นี้ทำได้โดยการโหมดหมายเลขบริการไว้ไน AH
และรีจิสเตอร์ต่าง ๆ ตามรายละเอียดต่อไปนี้
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 0 : เทอร์มิเนตโปรแกรม</font>
<u>อินพุต</u>
AH = 0
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 1 : รับข้อมูลจากคีย์บอร์ด (คีย์บอร์ดอินพุต)</font>
<u>อินพุต</u>
AH = 1
<u>เอาต์พุต</u>
AL = รหัสแอสกีของอักขระที่กดซึ่งจะถูกแสดงบนจอภาพให้เห็นด้วย
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2 : ส่งอักขระไปยังจอภาพ</font>
<u>อินพุต</u>
AH = 2
DL = รหัสแอสกีของอักขระ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3 : รับข้อมูลจากอุปกรณ์ช่วยมาตรฐาน (Standard Auxiliary Device)</font>
<u>อินพุต</u>
AH = 3
<u>เอาต์พุต</u>
AL = รหัสแอสกีของอักขระ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4 : ส่งอักขระไปยังอุปกรณ์ช่วยมาตรฐาน</font>
<u>อินพุต</u>
AH = 4
DL = รหัสแอสกีของอักขระ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5 : ส่งอักขระไปยังพรินเตอร์</font>
<u>อินพุต</u>
AH = 5
DL = รหัสแอสกีของอักขระ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 6 : คอนโทรล I/O</font>
<u>อินพุต</u>
AH = 6
DL = รหัสแอสกีของอักขระ
<u>เอาต์พุต</u>
DL = FF --> ส่งอักขระไปยังคอนโทรลโดยไม่แสดงบนจอภาพให้เห็น
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 7 : รับข้อมูลจากคอนโทรลโดยไม่แสดงบนจอภาพให้เห็น</font>
<u>อินพุต</u>
AH = 7
<u>เอาต์พุต</u>
AL = รหัสแอสกีของอักขระที่กด
<u>หมายเหตุ</u> บริการนี้ไม่ตรวจสอบการกด < Ctrl > - < Break > หรือ <Ctrl > - < C >
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 8 : รับข้อมูลจากคอนโทรลโดยไม่แสดงบนจอภาพให้เห็น
เหมือนบริการที่ 7 แต่เพิ่มการตรวจสอบการกด < Ctrl - C > หรือ < Ctrl - Break ></font>
<u>อินพุต</u>
AH = 8
<u>เอาต์พุต</u>
AL = รหัสแอสกีของอักขระที่กด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 9 : พิมพ์สตริงก์</font>
<u>อินพุต</u>
DS:DX ชี้ไปยังสตริงก์ที่ลงท้ายด้วยเครื่องหมาย $
AH = 9
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ A : สตริงก์อินพุต</font>
<u>อินพุต</u>
AH = 0AH
[DS:DX] = ขนาดของบัฟเฟอร์
<u>เอาต์พุต</u>
สตริงก์ที่รับเข้ามาทางคีย์บอร์ดถูกเก็บไว้ในบัฟเฟอร์ซึ่งอยู่ที่ DS:DX
อักขระที่กดจะถูกแสดงบนจอภาพให้เห็นด้วย
<u>หมายเหตุ</u> บริการนี้ตรวจสอบการกด < Ctrl > - < Break > หรือ <Ctrl > - < C >
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 0BH : ตรวจสอบสถานะของอินพุต</font>
<u>อินพุต</u>
AH = 0BH
<u>เอาต์พุต</u>
AL = FF --> มีข้อมูลถูกอ่านเข้ามาแล้ว
AL = 00 --> ไม่มีข้อมูลใดถูกอ่านเข้ามา
<font color="#FF0000"> หมายเหตุ</font> บริการนี้ตรวจสอบการกด < Ctrl > - < Break > หรือ <Ctrl > - < C >
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 0CH : เคลียร์คีย์บอร์ดบัฟเฟอร์และเรียกใช้บริการ</font>
<u>อินพุต</u>
AH = 0CH
AL = หมายเลขบริการที่เกี่ยวกับคีย์บอร์ด
<u>เอาต์พุต</u>
แสดงผลตามบริการที่เกี่ยวกับคีย์บอร์ดนั้น ๆ
<font color="#FF0000"> หมายเหตุ</font> บริการนี้ตรวจสอบการกด < Ctrl > - < Break > หรือ <Ctrl > - < C >
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 0DH : รีเซตดิสก์</font>
<u>อินพุต</u>
AH = 0DH
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 0EH : รีเซตดิสก์</font>
<u>อินพุต</u>
AH = 0EH
DL = หมายเลขไดรฟ์
DL = 0 --> A
DL = 1 --> B และอื่น ๆ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 0FH : เปิดไฟล์ที่มีอยู่แล้วในดิสก์</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB
<dd>AH = 0FH
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ
<dd>AL = FF --> ล้มเหลว
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 10H : ปิดไฟล์</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB
<dd>AH = 10H
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ
<dd>AL = FF --> ล้มเหลว
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 11H : ค้นหาไฟล์ที่ตรงกันเป็นไฟล์แรก</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 11H
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ และ DTA เก็บ FCB ที่ตรงกันเท่านั้น
<dd>AL = FF --> ล้มเหลว
<u>ข้อสังเกต</u> DTA อยู่ที่ CS-0080 ในไฟล์ .com
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 12H : ค้นหาไฟล์ต่อไปที่ตรงกัน</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 12H
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ และ DTA เก็บ FCB ที่ตรงกันนั้น
<dd>AL = FF --> ล้มเหลว
<u>ข้อสังเกต</u> ใช้บริการนี้หลังจากใช้บริการที่ 11H แล้ว
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 13H : ลบไฟล์</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 13H
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ
<dd>AL = FF --> ล้มเหลว
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 14H : อ่านไฟล์แบบซีเควนเชียล</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 14H
<u>เอาต์พุต</u>
<dd>เรคอร์ดที่ของมาถูกเก็บไว้ใน DTA
<dd>AL = 0 สำเร็จ และ DTA เก็บ FCB ที่ตรงกันนั้น
<dd>AL = 1 อ่านถึงท้านไฟล์แล้ว และไม่มีข้อมูลให้อ่านอีก
<dd>AL = 2 เซกเมนต์ของ DTA มีขนาดเล็กไปสำหรับเรคอร์ดนั้นๆ
<dd>AL = 3 อ่านถึงท้ายไฟล์แล้ว และเรคอร์ดที่เหลือมีค่า 0
<u>ข้อสังเกต</u> แอดเดรสของเรคอร์ดค่าเพิ่งขึ้น
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 15H : เขียนไฟล์แบบซีเควนเชียล</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 15H
<dd>บล็อกและเรคอร์ดปัจจุบันกำหนดใน FCB
<u>เอาต์พุต</u>
<dd>หนึ่งเรคอร์ดถูกอ่านจาก DTA และถูกเขียนลงไฟล์
<dd>AL = 0 สำเร็จ
<dd>AL = 1 ดิสก์เต็ม
<dd>AL = 2 เชกเมนต์ของ DTA มีขนาดเล็กไปสำหรับเรคอร์ดนั้นๆ
<u>ข้อสังเกต</u> แอดเดรสของคอร์ดมีค่าเพิ่มขึ้น
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 16H : ครีเอดไฟล์</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 16H
<u>เอาต์พุต</u>
<dd>AL = 0 สำเร็จ
<dd>AL = FF ไดเรดทอรีเต็ม
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 17H : เปลี่ยนชื่อไฟล์</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 17H
<u>เอาต์พุต</u>
<dd>AL = 0 สำเร็จ และ DTA เก็บ FCB ที่ตรงกันนั้น
<dd>AL = FF ล้มเหลว
<u>ข้อสังเกต</u> FCB ถูกเปลี่ยนแปลงโดยชื่อไฟล์ใหม่จะเก็บไว้ห่างจากจุดสิ้นสุด
<dd>ชื่อไฟล์แรก 6 ไบต์ ซึ่งก็ต่อคือที่แอดเดรส DS:DX + 11H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 18H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 19H : หาดิสก์ปัจจุบัน</font>
<u>อินพุต</u>
<dd>AH = 19H
<u>เอาต์พุต</u>
<dd>AL = ดิสก์ปัจจุบัน (0 = A, 1 = B,และอื่นๆ)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21 H บริการที่ 1AH : กำหนดตำแหน่ง DTA</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปที่แอดเดรสใหม่ของ DTA
<dd>AH = 1AH
<u>ข้อสังเกต</u> DTA = Disk Transfer Area ซึ่งเป็นพื้นที่ข้อมูลที่ถูกใช้โดยบริการของ
<dd>FCB ตามค่าดีฟอลต์แล้ว DTA มีขนาด 128 ไบต์ และเริ่มที่แอดเดรส CS:0080 ใน PSP
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 1BH : ข้อมูล FAT ของดีฟอลต์ไดรฟ์</font>
<u>อินพุต</u>
<dd>AH = 1BH
<u>เอาต์พุต</u>
<dd>DS:BX ชี้ไปยัง FAT Byte
<dd>DX = จำนวนคลัสเตอร์
<dd>AL = จำนวนเซกเตอร์ใน 1 คลัสเตอร์
<dd>CX = ขนาดของเซกเตอร์ (512 ไบต์)
<u>ข้อสังเกต</u> หน่วยเล็กที่สุดที่ใช้ในการเก็บไฟล์ คือ คลัสเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 1CH : ข้อมูล FAT ของไดรฟ์ที่ระบุ</font>
<u>อินพุต</u>
<dd>AH = 1CH
<dd>DL = หมายเลขของไดรฟ์ (0= ดีฟอลค์ไดรฟ์ 1 = A)
<u>เอาต์พุต</u>
<dd>DS:BX ชี้ไปยัง FAT Byte
<dd>DX = จำนวนคลัสเตอร์
<dd>AL = จำนวนเซกเตอร์ใน 1 คลัสเตอร์
<dd>CX = ขนาดของเซกเตอร์ (512 ไบต์)
<u>ข้อสังเกต</u> หน่วยเล็กที่สุดที่ใช้ในการเก็บไฟล์ คือ คลัสเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 1DH ถึง 20H : ใช้งานภายใน DOS</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 21H : อ่านไฟล์แบบแรนคอม</font>
<u>อินพุต</u>
<dd>AH = 21H
<u>เอาต์พุต</u>
<dd>AL = 00 --> สำเร็จ
<dd>= 01 --> อ่านถึงท้ายไฟล์แล้ว, ไม่มีข้อมูลให้อ่านอีก
<dd>= 02 --> เซกเมนต์ของ DTA มีขนาดเล็กไปสำหรับเรคคอร์ดนั้นๆ
<dd>= 03 --> อ่านถึงท้ายไฟล์ และเรคอร์ดที่เหลือแต่ค่า 0
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 22H : อ่านไฟล์แบบเรนดอม</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยัง FCB ที่เปิดแล้ว
<dd>กำหนดเรนดอมเรคอร์ดฟิลด์แบบของ FCB ที่แอดเดรส DS:DX +33 และ DS:DX + 35
<dd>AH = 21H
<u>เอาต์พุต</u>
<dd>AL  = 00 --> สำเร็จ
<dd>= 01 --> ดิสก์เต็ม
<dd>= 02 --> เซกเมนต์ของ DTA มีขนาดเล็กไปสำหรับเรคคอร์ดนั้นๆ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 23H : ขนาดของไฟล์</font>
<u>อินพุต</u>
<dd>DS:DH ชี้ไปยัง FCB ที่ยังไม่เปิด
<dd>AH = 23H
<u>เอาต์พุต</u>
<dd>AL  = 00 --> สำเร็จ
<dd>= FF --> ไม่พบไฟล์ที่เข้าคู่กับ FCB
<dd>เรนดอมเรคอร์ดฟิลด์บอกขนาดของไฟล์ในหน่วยเรคอร์ด (ปัดเศษ)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 24H : กำหนดเรนดอมเรคอร์ดฟิลด์</font>
<u>อินพุต</u>
<dd>DS:DH ชี้ไปยัง FCB ที่ยังเปิด
<dd>AH = 24H
<u>เอาต์พุต</u>
<dd>แรนดอมเรคอร์ดฟิลด์จับคู่กับบล็อกและเรคอร์ดปัจจุบัน
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 25H : กำหนดอินเทอร์รัพท์เวกเตอร์</font>
<u>อินพุต</u>
<dd>AH = 25H
<dd>AL = หมายเลขอินเทอร์รัพท์
<dd>DS:DX = แอดเดรสใหม่ของรูทีนตอบสนองการอินเทอร์รัพท์ของเลขหมายอินเทอร์รัพท์นั้น
<u>ข้อสังเกต</u> อินเทอร์รัพท์นี้ช่วยในหารอินเตอร์เซปอินเทอร์รัพท์เวกเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 26H : สร้าง PSP ใหม่</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 27H : อ่านบล็อกแบบแรนดอม</font>
<u>อินพุต</u>
<dd>DS:DH ชี้ไปยัง FCB ที่ยังเปิดแล้ว
<dd>กำหนดแรนดอมเรคอร์ดฟิลด์ของ FCB ที่แอดเดรส DS:DX + 33 และ DS:DX + 35
<dd>AH = 27H
<u>เอาต์พุต</u>
<dd>AL  = 00 --> สำเร็จ
<dd>= 01 --> อ่านถึงไฟล์ท้ายแล้ว และไม่มีข้อมูลให้อ่านอีก
<dd>= 02 --> เซกเมนต์ของ DTA มีขนากเล็กไปสำหรับเรคอร์ดนั้นๆ
<dd>= 03 --> อ่านถึงท้ายไฟล์แล้ว และเรคคอร์ดที่เหลือแต่ค่า 0
<dd>CX = จำนวนเรคอร์ดที่อ่านได้
<dd>แรนดอมเรคอร์ดฟิลด์จะทำการแอ็กเซสเรคอร์ดถัดไป
<u>ข้อสังเกต</u> บัฟเฟอร์ของข้อมูลที่ใช้โดยบริการของ FCB ก็คือ DTA นั่นเอง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 28H : เขียนไฟล์แบบแรนดอม</font>
<u>อินพุต</u>
<dd>DS:DH ชี้ไปยัง FCB ที่ยังเปิดแล้ว
<dd>กำหนดแรนดอมเรคอร์ดฟิลด์ของ FCB ที่แอดเดรส DS:DX + 33 และ DS:DX + 35
<dd>AH = 28H
<u>เอาต์พุต</u>
<dd>AL  = 00 --> สำเร็จ
<dd>= 01 --> ดิสก์เต็ม
<dd>= 02 --> เซกเมนต์ของ DTA มีขนากเล็กไปสำหรับเรคอร์ดนั้นๆ
<dd>แรนดอมเรคอร์ดฟิลด์จะทำการแอ็กเซสเรคอร์ดถัดไป
<dd>CX = 0 --> ขนาดของไฟล์มีค่าตามที่ระบุในแรนดอมเรคอร์ดฟิลต์
<u>ข้อสังเกต</u> บัฟเฟอร์ของข้อมูลที่ใช้โดยบริการของ FCB ก็คือ DTA นั่นเอง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 29H : พารส์ชื่อไฟล์ (Parse File Name)</font>
<u>อินพุต</u>
<dd>DS:SI = คอมมานต์ไลน์ที่จะพารส์
<dd>ES:DI = แอดเดรสที่จะใช้เก็บ FCB
<dd>AL = บิต 0 = 1 --> ตัดตัวแยกที่มาก่อนหน้าคอมมานต์ไลน์ทิ้งไป
<dd>บิต 1 = 1 --> ID ของไดรฟ์ในปัจจุบันใน FCB สุดท้ายจะถูกเปลี่ยนก็ต่อเมื่อ
<dd>มีการระบุไดรฟ์เท่านั้น
<dd>บิต 2 = 1 --> ชื่อไฟล์ใน FCB จะถูกเปลี่ยนก็ต่อเมื่อมีการระบุชื่อไฟล์ในคอมมานด์ไลน์
<dd>บิต 3 = 1 --> ส่วนขยายชื่อไฟล์ใน FCB จะถูกเปลี่ยนก็ต่อเมื่อมีการระบุส่วนขยายชื่อไฟล์ใน
<dd>คอมมานต์ไลน์
<dd>AH = 29H
<u>เอาต์พุต</u>
<dd>DS:SI = อักขระแรกหลังจากชื่อไฟล์
<dd>ES:SI = FCB ที่ถูกต้อง
<u>ข้อสังเกต</u> ถ้าคอมมานด์ไลน์ไม่มีชื่อไฟล์ที่ถูกต้องแล้ว ES:DI + 1 จะเป็นช่องว่าง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2AH : อ่านวันทื่</font>
<u>อินพุต</u>
<dd>AH = 2AH
<u>เอาต์พุต</u>
<dd>CX = ปี - 1980
<dd>DH = เดือน (1 = มกราคม และอื่นๆ)
<dd>DL = วันที่ในเดือนนั้น
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2BH : กำหนดวันทื่</font>
<u>อินพุต</u>
<dd>CX = ปี - 1980
<dd>DH = เดือน (1 = มกราคม และอื่นๆ)
<dd>DL = วันที่ในเดือนนั้น
<dd>AH = 2BH
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ
<dd>= F --> วันที่ไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2CH : อ่านเวลา</font>
<u>อินพุต</u>
<dd>AH = 2CH
<u>เอาต์พุต</u>
<dd>CH = ชั่วโมง (0 ถึง 23)
<dd>CL = นาที (0 ถึง 59)
<dd>DH = วินาที (0 ถึง 59)
<dd>DL = (t/100) ของวินาที (t มีค่าได้ตั้งแต่ 0 ถึง 99)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2DH : กำหนดเวลา</font>
<u>อินพุต</u>
<dd>AH = 2DH
<dd>CH = ชั่วโมง (0 ถึง 23)
<dd>CL = นาที (0 ถึง 59)
<dd>DH = วินาที (0 ถึง 59)
<dd>DL = (t/100) ของวินาที (t มีค่าได้ตั้งแต่ 0 ถึง 99)
<u>เอาต์พุต</u>
<dd>AL = 0 --> สำเร็จ
<dd>= F --> วันที่ไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2EH : กำหนดสถานะของการตรวจสอบ</font>
<u>อินพุต</u>
<dd>AH = 2EH
<dd>DL = 0
<dd>AL = 1 --> กำหนดสถานะของการตรวจสอบเป็น ON
<dd>= 0 --> กำหนดสถานะของการตรวจสอบเป็น OFF
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 2FH : อ่านที่อยู่ของ DTA ปัจจุบัน</font>
<u>อินพุต</u>
<dd>AH = 2FH
<u>เอาต์พุต</u>
<dd>ES:BX = แอดเดรสของ DTA ปัจจุบัน
<u>ข้อสังเกต</u> ปัฟเฟอร์ของข้อมูลที่ไช้โดยบริการของ FCB ก็คือ DTA นั่นเอง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 30H : อ่านหมายเลขรุ่น (เวอร์ชัน) ของดอส</font>
<u>อินพุต</u>
<dd>AH = 30H
<u>เอาต์พุต</u>
<dd>AL = หมายเลขรุ่นหลัก (3 ในดอส3.10)
<dd>AH = หมายรุ่นรอง (10 ในดอส 3.10)
<dd>BX = 0
<dd>CX = 0
<u>ข้อสังเกต</u> ถ้า AL รีเทิร์นค่า 0 กลับมาแสดงว่าเราใช้ดอสรุ่นก่อนเวอร์ชัน 2
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 31H : จบการทำงานโดยที่โค้ดยังคงค้างอยู่ในหน่วยความจำ</font>
<u>อินพุต</u>
<dd>AH = 31H
<dd>AL = รหัสออก
<dd>DX = ขนาดของหน่วยความจำในหน่วยพารากราฟ
<u>ข้อสังเกต</u> รหัสออกจะถูกอ่านโดยพาเรนต์โปรแกรม (parent program) ด้วยบริการที่
<dd>4DH และสามารถนำค่ารหัสออกนี้ไปตรวจสอบด้วยคำสั่ง ERRORLEVEL ในแบตช์ไฟล์ของดอสได้
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 32H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 33H : ตรวจสอบการกด < BREAK ></font>
<font color="#000000"><dd>อินพุต</font>
<dd>AH = 33H
<dd>AL  = 0 --> ตรวจสอบสถาวะของการตรวจสอบการกด ^< BREAK >
<dd>= 1 --> ตรวจสอบสถาวะของการตรวจสอบการกด ^< BREAK >
<dd>(DL) = 0 --> สภาวะของการตรวจสอบเป็น OFF
<dd>= 1 --> สภาวะของการตรวจสอบเป็น ON
<u>เอาต์พุต</u>
<dd>DL = 0 --> สภาวะของการตรวจสอบเป็น OFF อยู่
<dd>= 1 --> สภาวะของการตรวจสอบเป็น OFF อยู่
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 34H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 35H : อ่านอินเทอร์รัพท์เวกเตอร์</font>
<u>อินพุต</u>
<dd>AH = 35H
<dd>AL = หมายเลขอินเทอร์รัพท์
<u>เอาต์พุต</u>
<dd>ES:BX = อินเทอร์รัพท์เวกเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 36H : อ่านจำนวนที่ว่างในแผ่นดิสก์</font>
<u>อินพุต</u>
<dd>AH = 36H
<dd>DL = หมายเลขไดรฟ์(0= ไดรฟ์ดีฟอลด์ 1=A)
<u>เอาต์พุต</u>
<dd>AX = 0FFFH ' หมายเลขไดรฟ์ไม่ถูกต้อง
<dd>= จำนวนเซกเตอร์ใน 1 คลัสเตอร์
<dd>BX = จำนวนคลัสเตอร์ที่มีเหลือให้ใช้ได้
<dd>CX = ขนาดของเซกเตอร์ (512 ไบต์)
<dd>DX = จำนวนคลัสเตอร์
<u>ข้อสังเกต</u> หน่วยเล็กที่สุดที่ใช้ในการเก็บไฟล์คือ คลัสเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 37H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 38H : รีเทิร์นข้อมูลที่ขึ้นกับประเทศ</font>
<u>อินพุต</u>
<dd>AH = 38H
<dd>DS:DX = แอดเอรสของบล็อกขนาด 32 ไบต์
<dd>AL =0
<u>เอาต์พุต</u>
<dd>เติมข้อมูลลงในบล็อกขนาด 32 ไบต์ โดยมีรายละเอียดตามลำดับดังนี้
<dd>2 ไบต์ เก็บรูปแบบของ DATE/TIME
<dd>1 ไบต์ เก็บรหัสแอสกีของสัญลักษณ์การเงินของประเทศนั้นๆ
<dd>1 ไบต์ เก็บค่า 0 ไว้
<dd>1 ไบต์ เก็บรหัสแอสกีของ thousands separator
<dd>1 ไบต์ เก็บค่า 0 ไว้
<dd>1 ไบต์ เก็บรหัสแอสกีของ decimal separator
<dd>1 ไบต์ เก็บค่า 0 ไว้
<dd>24 ไบต์ ใช้งานภายใน
<dd>รูปแบบของ DATE/TIME มีรายละเอียด ดังนี้
<dd>0 = USA (H:M:S,M/D/Y)
<dd>1 = EUROPE (H:M:S,D/M/Y)
<dd>2 = JAPAN (H:M:S,D:M:Y)
<u>ข้อสังเกต</u> ตั้งแต่คอสเวอร์ชัน3 ขึ้นไป เราสามารถกำหนดค่าเหล่านี้ได้ด้วย
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 39H : สร้างสับไดเรกเทอรี</font>
<u>อินพุต</u>
<dd>AH = 39H
<dd>DS:DX ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นไดเรกเทอรี</font>
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AH เก็บค่าที่บอกถึงความผิดพลาด
<dd>AH = 3 --> ไม่พบเส้นทางที่กำหนด (path not found)
<dd>= 5 --> ไม่สามารถกำหนดแอ็กแซสได้ (access denied)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3AH : ลบสับไดเรกทอร์</font>
<u>อินพุต</u>
<dd>AH = 3AH
<dd>DS:DX ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นชื่อไดเรกทอี์</font>
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AH เก็บค่าที่บอกถึงความผิดพลาดโดย
<dd>AH = 3 --> ไม่พบเส้นทางที่กำหนด (path not found)
<dd>= 5 --> ไม่สามารถกำหนดแอ็กแซสได้ (access denied)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3BH : ย้ายสับไดเรกทอรี</font>
<u>อินพุต</u>
<dd>AH = 3BH
<dd>DS:DX ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นชื่อไดเรกทอรี</font>
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AH เก็บค่าที่บอกถึงความผิดพลาดโดย
<dd>AH = 3 --> ไม่พบเส้นทางที่กำหนด (path not found)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3CH : สร้างไฟล์ (ใช้ไฟล์แฮนเดิล)</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นชื่อไฟล์
<dd>CX = แอดตริบิวต์ของไฟล์
<dd>AH = 3CH
<u>เอาต์พุต</u>
<dd>CY = 0 --> ไฟล์แฮนเดิล
<dd>CY = 1 --> AL = 3 --> ไม่พบเส้นทางที่กำหนด (path not found)
<dd>AL = 4 --> มีการเปิดไฟล์มากเกินไปที่กำหนดไว้ในไฟล์ CONFIG.SYS
<dd>(too many files open)
<dd>AL= 5 --> ไดเรกทอรีเต็ม
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3DH : เปิดไฟล์ (ใช้ไฟล์แฮนเดิล)</font>
<u>อินพุต</u>
<dd>DS:DX ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นชื่อไฟล์
<dd>AL = แอ็กเซสโค้ด
<dd>AH = 3DH
<dd>แอ็กแซสโค้ด : AL = 0 เปิดไฟล์เพื่อการอ่าน
<dd>AL = 1 เปิดไฟล์เพื่อการเขียน
<dd>AL = 2 เปิดไฟล์เพื่อการอ่านและเขียน
<dd>แอ็กเซสโค้ดตั้งแต่ดอสเวอร์ชัน 3 ขึ้นไปมีรูปแบบเป็น isssraaa โดย
<dd>i = 1 --> ไม่สามารถใช้ไฟล์ที่เปิดนี้ใน Child process ได้
<dd>(file handle is not to be inherited)
<dd>i = 0 --> สามารถใช้ไฟล์ที่เปิดนี้ใน child process ได้
<dd>(file handle will be inherited)
<dd>sss = 000 --> compatibility mode
<dd>sss = 001 --> deny all
<dd>sss = 010 --> deny write
<dd>sss = 011 --> deny read
<dd>sss = 100 --> deny none
<dd>r = สงวนไว้
<dd>aaa = 000 --> read access
<dd>aaa = 001 --> write access
<dd>aaa = 010 --> read/write access
<u>เอาต์พุต</u>
<dd>CY = 0 --> AX = ไฟล์แฮนดิล
<dd>CY = 1 --> AL = รหัสข้อผิดพลาด (ดูตารางข้อผิดพลาด)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3EH : (ใช้ไฟล์แฮนดิล)</font>
<u>อินพุต</u>
<dd>BX = ไฟล์แฮนดิลที่ถูกต้องของไฟล์ที่จะปิด
<dd>AH = 3EH
<u>เอาต์พุต</u>
<dd>CY = 1 --> AL = 6 --> ไฟล์แฮนดิลไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 3FH : อ่านจากไฟล์หรือดีไวซ์</font>
<u>อินพุต</u>
<dd>DS:DX = แอดเดรสของบัฟเฟอร์ข้อมูล
<dd>CX = จำนวนไบล์แฮนเดิล
<dd>AH = 3FH
<u>เอาต์พุต</u>
<dd>CY = 0 --> AX = จำนวนไบต์ที่อ่านได้จริง
<dd>CY = 1 --> AL = 5 ไม่สามารถทำการแอ็กเซสได้ (access denied)
<dd>= 6 ไฟล์แฮนเดิลไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 40H : เขียนลงไฟล์หรือดีไวซ์</font>
<u>อินพุต</u>
<dd>DS:DX = ,แอดเดรสของบัฟเฟอร์ข้อมูล
<dd>CX = จำนวนไบต์ที่ต้องการเขียน
<dd>BX = ไฟล์แฮนเดิล
<dd>AH = 40H
<u>เอาต์พุต</u>
<dd>CY = 0 --> AX = จำนวนไบต์ที่เขียนได้จริง
<dd>CY = 1 --> AL = 5 ไม่สามารถทำการแอ็กเซสได้ (ACCESS DENIED)
<dd>= 6 ไฟล์แฮนเดิลไม่ถูกต้อง
<u>ข้อสังเกต</u> ดิสต์เต็มไม่ถือว่าเป็นข้อผิดพลาด ดังนั้นให้ตรวจสอบจำนวน
<dd>ไบต์ที่ต้องการเขียน (ใน CX) ว่าตรงกับจำนวนไบต์ที่เขียนได้จริง
<dd>(ซึ่งรีเทิร์นมาใน AX) หรือไม่ ถ้าไม่ตรงกันก็แสดงว่าดิสก์อาจจะเต็ม
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 41H : ลบไฟล์</font>
<u>อินพุต</u>
<dd>DS:DX = ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นชื่อไฟล์
<dd>AH = 41H
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AH เก็บค่าที่บอกถึงความผิดพลาดโดย
<dd>AH = 3 --> ไม่พบเส้นทางที่กำหนด (path not found)
<dd>= 5 --> ไม่สามารถทำการแอ็กเซสได้ (access denied)
<u>ข้อสังเกต</u> ไม่มีการใช้ wildcards ในชื่อไฟล์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 42H : เคลื่อนย้ายพอยน์เตอร์ที่ใช้ในการอ่านและเขียน</font>
<u>อินพุต</u>
<dd>BX = ไฟล์แฮนเดิล
<dd>CX:DX = ออฟเซ็ตที่ต้องการ
<dd>AH = 42H
<dd>AL = วิธีที่ใช้ (Method)
<dd>โดย AL = 0 เคลื่ยนย้ายพอยน์เตอร์ที่ใช้ในการอ่านและเขียนไปยัง CX:DX
<dd>จากจุดเริ่มต้นของไฟล์
<dd>= 1 พอยน์เตอร์ที่ใช้ในการอ่านและเขียนมีค่าเพิ่มขึ้นอีก CX:DX ไบต์
<dd>= 2 เคลื่อนย้ายพอยน์เตอร์ที่ใช้ในการอ่านและเขียนไปที่ตำแหน่ง
<dd>ท้ายไฟล์บวกออฟ (CX:DX)
<u>เอาต์พุต</u>
<dd>CY = 0 --> DS:DX = ตำแหน่งใหม่ของพอยน์เตอร์ที่ใช้ในการอ่านและเขียน
<dd>CY = 1 --> AL = 1 หมายเลขฟังก์ชันไม่ถูกต้อง
<dd>= 6 ไฟล์แฮนเดิลไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 43H : เปลี่ยนไฟล์แอดตริบิวต์</font>
<u>อินพุต</u>
<dd>DS:DX = ชี้ไปยังสตริงก์แบบ ASCII ที่เป็นชื่อไฟล์
<dd>AL = 1 --> เปลี่ยนไฟล์แอตตริบิวต์
<dd>CX = ไฟล์แอตตริบริวต์ใหม่ที่ต้องการ
<dd>AL = 0 --> รีเทร์นไฟล์แอตตริบิวต์มาใน CX
<dd>AH = 43H
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AL = 2 --> ไม่พบไฟล์ที่กำหนด (file not found)
<dd>= 3 --> ไม่พบเส้นทางที่กำหนด (path not found)
<dd>= 5 --> ไม่สามารถทำการแอ็กเซสได้ (access denied)
<dd>ถ้า AL = 0 --> CX รีเทิร์นไฟล์แอตตริบิวต์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 44H : I/O Cntrol</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 45H : สร้างไฟล์แฮนเดิลซ้ำ</font>
<u>อินพุต</u>
<dd>BX = ไฟล์แฮนเดิลที่จะสร้างซ้ำ
<dd>AH = 45H
<u>เอาต์พุต</u>
<dd>CY = 0 --> AX = ไฟล์แฮนเดิลใหม่ที่ได้สร้างซ้ำ
<dd>CY = 1 --> AL = 4 มีการเปิดไฟล์มากกว่าที่กำหนดไว้ในไฟล์ CONFIG.SYS
<dd>(too many file open)
<dd>= 6 ไฟล์แฮลเดิลไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 46H : บังคับให้มีการสร้างไฟล์แฮนเดิลซ้ำ (Force Duplicate)</font>
<u>อินพุต</u>
<dd>BX = ไฟล์แฮนเดิลที่จะสร้างซ้ำ
<dd>CX = ไฟล์แฮนเดิลตัวที่สอง
<dd>AH = 46H
<u>เอาต์พุต</u>
<dd>CY = ไฟล์แฮนเดิลอ้างถึงสตรีม (stream) เดียวกัน
<dd>CY = 1 --> AL = 6 ไฟล์แฮนเดิลไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 47H : อ่านไดเรกทอรีปัจจุบันของไดรฟ์ที่ระบุ</font>
<u>อินพุต</u>
<dd>AH = 47H
<dd>DS:SI ชี้ไปยังบัฟเฟอร์ขนาด 64 ไบต์
<dd>DL = หมายเลขไดรฟ์
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ , สตริงก์แบบ ASCII ที่เป็นชื่อไดเรกทอรีอยู่ที่ DS:SI
<dd>CY = 1 --> AH = 15 หมายเลขไดรฟ์ที่ระบุไม่ถูกต้อง
<u>ข้อสังเกต</u> ชื่อไดรฟ์ไม่ถูกอ่านเข้ามาเก็บในสตริงก์แบบ ASCII
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 48H : ออลโลเคตหน่วยจำ</font>
<u>อินพุต</u>
<dd>AH = 48H
<dd>BX = จำนวนพารากราฟที่ต้องการออลโลเคต
<u>เอาต์พุต</u>
<dd>CY = 0 --> AX = แอดเดรสของเมโมรีบล็อกที่ออลโลเคตได้
<dd>CY = 1 --> AL = 7 MCB (Memory Control Block) ถูกทำลาย
<dd>= 8 หน่วยความจำไม่พอ
<dd>BX = จำนวนมากที่สุดที่สามารถออลโลเคตได้
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 49H : ปลดปล่อยหน่วยความจำที่ได้จากการออลโลเคต</font>
<u>อินพุต</u>
<dd>AH = 49H
<dd>ES = เซกเมนต์ของบล็อกที่จะปลดปล่อย
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AL = 7 MCB (Memory Control Block) ถูกทำลาย
<dd>9 แอดเดรสของเมโมรีบล็อกไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4AH : กำหนดบล็อก</font>
<u>อินพุต</u>
<dd>ES = เซกเมนต์ของบล็อกที่จะทำการเปลี่ยนแปลง
<dd>BX = จำนวนพารากราฟที่ต้องการ
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AL = 7 MCB (Memory Control Block) ถูกทำลาย
<dd>= 8 หน่วยความจำไม่พอ
<dd>BX = จำนวนมากที่สุดสามารถออลโลเคตได้
<dd>= 9 แอดเดรสของเมโมรีบล็อกไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4BH :โหลดหรือเอกซีคิวต์โปรแกรม (EXEC)</font>
<u>อินพุต</u>
<dd>AH = 4BH
<dd>DS:DX = สตริงก์แบบ ASCII ที่ประกอบด้วยชื่อไดรฟ์เส้นทาง และชื่อไฟล์
<dd>ES:BX = แอดเดรสของพารามิเตอร์บล็อก (ดูข้างล่าง)
<dd>AL = 0 --> โหลดและเอกซีคิวต์โปรแกรม
<dd>3 --> โหลดแต่ไม่เอกซีคิวต์โปรแกรมและสร้าง PSP (เป็นOverlay)
<dd>พารามิเตอร์บล็อกสำหรับ AL = 0 :
<dd>เซกเมนต์แอดเดรสของเอ็นไวรอนเมนต์ที่จะผ่าน (เวิร์ด)
<dd>แอดเดรสของคอมมานต์ไลน์ที่จะวางไว้ที่ PSP + 80H (ดับเบิลเวิร์ด)
<dd>แอดเดรสของดีฟอลด์ FCB ที่จะวางไว้ที่ PSP + 5CH (ดับเบิลเวิร์ด)
<dd>แอดเดรสของดีฟอลด์ FCB ตัวที่สองที่จะวางไว้ที่ PSP + 6CH (ดับเบิลเวิร์ด)
<dd>พารามิเตอร์บล็อกสำหรับ AL = 3 :
<dd>เซกเมนต์แอดเดรสที่จะโหลดไฟล์ไปไว้ (เวิร์ด)
<dd>รีโลเคชันแฟ็กเตอร์สำหรับอิมเมจ (เวิร์ด)
<u>เอาต์พุต</u>
<dd>CY = 1 --> AL 
<dd>= 1 หมายเลขฟังก์ชันไม่ถูกต้อง
<dd>= 2 ไม่พบไฟล์ในแผ่นดิกส์
<dd>= 5 ไม่สามารถทำการแอ็กเซสได้ (Access denied)
<dd>= 8 หน่วยความจำไม่พอสำหรับการทำงานดังกล่าว
<dd>= 10 เอนไวรอนเมนต์ไม่ถูกต้อง
<dd>= 11 รูปแบบไม่ถูกต้อง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4CH : เทอร์มิเนตโปรแกรม</font>
<u>อินพุต</u>
<dd>AH = 4CH
<dd>AL = รีเทิร์นโค้ด
<u>ข้อสังเกต</u> บริการนี้ใช้จบโปรแกรมได้
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4DH : อ่านรีเทิร์นโค้ดของสับโพรเซส</font>
<u>อินพุต</u>
<dd>AH = 4DH
<u>เอาต์พุต</u>
<dd>AL = รีเทิร์นโค้ดจากสับโพรเซส
<dd>AH = 0 ถ้าสับโพรเซสจบการทำงานอย่างปกติ
<dd>1 ถ้าสับโพรเซสจบการทำงานเพราะมีการกด &lt; BREAK >
<dd>2 ถ้าจบกมาทำงานเพราะมี critical device error
<dd>3 ถ้าจบการทำงานเพราะใช้บริการที่ 31H
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4EH : หาไฟล์แรกที่เข้าคู่ได้</font>
<u>อินพุต</u>
<dd>DS:DX --> สตริงก์แบบ ASCII ที่เป็นชื่อไฟล์ที่ต้องการหา
<dd>CX = แอตตริบิวต์ที่จะเข้าคู่
<dd>AH = 4EH
<u>เอาต์พุต</u>
<dd>CY = 1 --> AL = 2 ไม่มีไฟล์ใดเข้าคู่
<dd>= 18 ไม่มีไฟล์ให้หาอีก
<dd>CY = 0 --> DTA เก็บค่าที่มีความหมายต่อไปนี้
<dd>21 ไบต์ สงวน
<dd>1 ไบต์ แอตตริบิวต์ที่พบ
<dd>2 ไบต์ เวลาของไฟล์
<dd>2 ไบต์ วันที่ของไฟล์
<dd>2 ไบต์ เวิร์ดต่ำของค่าขนาดไฟล์
<dd>2 ไบต์ เวิร์ดสูงของค่าขนาดไฟล์
<dd>13 ไบต์ ชื่อและส่วนขยายชื่อไฟล์ที่อยู่ในรูปสตริงก์แบบ ASCII
<u>ข้อสังเกต</u> บัฟเฟอร์ของข้อมูลที่ใช้โดยบริการของ FCB ก็คือ DTA นั่นเอง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 4FH : หาไฟล์ถัดไปที่เข้าคู่ได้</font>
<u>อินพุต</u>
<dd>ใช้บริการที่ 4EH ก่อนบริการที่ 4FH เสมอ
<dd>AH = 4FH
<u>เอาต์พุต</u>
<dd>CY = 1 --> AL = 2 ไม่มีไฟล์ใดเข้าคู่
<dd>= 18 ไม่มีไฟล์ให้หาอีก
<dd>CY = 0 --> DTA เก็บค่าที่มีความหมายต่อไปนี้
<dd>21 ไบต์ สงวน
<dd>1 ไบต์ แอตตริบิวต์ที่พบ
<dd>2 ไบต์ เวลาของไฟล์
<dd>2 ไบต์ วันที่ของไฟล์
<dd>2 ไบต์ เวิร์ดต่ำของค่าขนาดไฟล์
<dd>2 ไบต์ เวิร์ดสูงของค่าขนาดไฟล์
<dd>13 ไบต์ ชื่อและส่วนขยายชื่อไฟล์ที่อยู่ในรูปสตริงก์แบบ ASCII
<u>ข้อสังเกต</u> บัฟเฟอร์ของข้อมูลที่ใช้โดยบริการของ FCB ก็คือ DTA นั่นเอง
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 50-53H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 54H : อ่านสถานะการตรวจสอบ</font>
<u>อินพุต</u>
<dd>AH = 54H
<u>เอาต์พุต</u>
<dd>AL = 0 --> สถานะการตรวจสอบเป็น on
<dd>= 1 --> สถานะการตรวจสอบเป็น off
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 55H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 56H : เปลี่ยนชื่อไฟล์</font>
<u>อินพุต</u>
<dd>DS:DX = ชื่อไฟล์ที่อยู่ในรูปสตริงก์แบบ ASCII ที่ต้องการเปลี่ยน
<dd>ES:DI = ชื่อไฟล์ใหม่ที่อยู่ในรูปสตริงก์แบบ ASCII
<dd>AH =56H
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AL = 3 ไม่พบเส้นทางที่กำหนด
<dd>= 5 ไม่สามารถทำการแอ็กเซสได้ (access denied)
<dd>= 17 ไม่ใช่ดีไวซ์เดียวกัน
<u>ข้อสังเกต</u> ไม่สามารถเปลี่ยนชื่อไฟล์แล้วมีชื่อไฟล์ใหม่นั้นอยู่ต่างไดรฟ์ได้
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บิการที่ 57H : อ่านหรือกำหนดเวลาและวันที่ของไฟล์</font>
<font color="#000000"><dd>อินพุต   เอาต์พุต</font>
<dd>BX = ไฟล์เฮนเดิล   CY = 0:
<dd>AL = 0 อ่านเวลาและวันที่ --> CX รีเทิร์นเวลา
<dd>DX รีเทิร์นวันที่
<dd>AL = 1 --> กำหนดเวลาใน CX --> กำหนดเวลาและวันที่ของไฟล์
<dd>กำหนดวันที่ใน DX
<dd>CY = 1
<dd>AL = 1 หมายเลขฟังก์ชันไม่ถูกต้อง
<dd>= 6 แฮนเดิลไม่ถูกต้อง
<dd>เวลาและวันที่ของไฟล์ถูกเก็บในลักษณะ
<dd>เวลา = (2048ชั่วโมง) + (32นาที) + (วินาที/2)
<dd>วันที่ = 512*(ปี-1980) + (32*เดือน) + วัน
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 58H : ใช้งานภายในดอส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 59H : อ่านข้อผิดพลาดเพิ่มเติม (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AH = 59H
<dd>BX = 0
<u>เอาต์พุต</u>
<dd>AH = ข้อผิดพลาดเพิ่มเติม
<dd>BH = ประเภทของข้อผิดพลาด
<dd>BL = คำแนะนำ
<dd>1CH = Locus
<u>ข้อสังเกต</u> บริการนี้เกี่ยวข้องกับข้อผิดพลาดที่เพิ่มเติมขึ้นจากเดิมมาก
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5AH : สร้าง Unique File (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AH = 59H
<dd>DS:DX = แอดเดรสของชื่อเส้นทางที่อยู่ในรูปสตริงก์แบบ ASCII (ลงท้ายด้วย /)
<dd>CX = ไฟล์แอตตริบิวต์
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลความผิดพลาด
<dd>DS:DX = ชื่อไฟล์และชื่อเส้นทางที่อยู่ในสตริงก์แบบ ASCII
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5BH : สร้างไฟล์ใหม่ (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AH = 5BH
<dd>DS:DX = แอดเดรสของชื่อเส้นทางที่อยู่ในรูปสตริงก์แบบ ASCII (ลงท้ายด้วย /)
<dd>CX = ไฟล์แอตตริบิวต์
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลความผิดพลาด ถ้า CY = 1
<dd>= แฮนเดิล ถ้า CY = 0
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5CH : ล็อคและไม่ล็อคการแอ็กเซสไฟล์ (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AH = 5CH
<dd>AL = 0 --> ล็อคช่วงไบต์
<dd>= 1 --> ไม่ล็อคช่วงไบต์
<dd>BX = ไฟล์แฮนเดิล
<dd>CX = เริ่มช่วงไบต์ (เวิร์ดสูง)
<dd>DX = เริ่มช่วงไบต์ (เวิร์ดต่ำ)
<dd>SI = จำนวนไบต์ที่(ไม่) ล็อค (เวิร์ดสูง)
<dd>DI = จำนวนไบต์ที่มี (ไม่) ล็อค (เวิร์ดต่ำ)
<u>เอาต์พุต</u>
<dd>CY = 1,AX = ข้อมูลความผิดพลาด
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5E00H : อ่านชื่อของเครื่อง (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AX = 5E00H
<dd>DS:DX = บัฟเฟอร์สำหรับชื่อของคอมพิวเตอร์
<u>เอาต์พุต</u>
<dd>DS:DX = ชื่อของคอมพิวเตอร์ที่อยู่ในรูปสตริงก์แบบ ASCII
<dd>CH = 0 --> ชื่อนี้ไม่มีในนิยาม
<dd>CL = NETBIOS number
<dd>AX = ข้อมูลความผิดพลาด ถ้า CY = 1
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5E02H : กำหนดเซตอัปของพรินเตอร์ (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AX = 5E02H
<dd>BX = redirection list index
<dd>CX = ขนาดของสตริงก์เซตอัป
<dd>DS:DI = พอยน์เตอร์ไปยังบัฟเฟอร์ที่ใช้เก็บเซตอัปของพรินเตอร์
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลความผิดพลาด ถ้า CY = 1
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5E03H : อ่านเซตอัปของพรินเตอร์ (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AX = 5E03H
<dd>BX = redirection list index
<dd>ES:DI = พอยน์เตอร์ไปยังบัฟเฟอร์ที่ใช้เก็บเซตอัฟของพรินเตอร์
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลความผิดพลาด ถ้า CY = 1
<dd>CX = ขนาดของข้อมูลที่รีเทิร์น
<dd>ES:DI =ถูกเติมด้วยสตริงก์ที่เป็นเซตอัปของพรินเตอร์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5F03H : รกดีไวซ์ (Redirect Device)</font>
<u>อินพุต</u>
<dd>AX = 5F03H
<dd>BL = ชนิดของดีไวซ์
<dd>= 3 --> พรินเตอร์ดีไวซ์
<dd>= 4 --> ไฟล์ดีไวซ์
<dd>cx = ค่าที่เก็บไว้สำหรับผู้เรียก
<dd>DS:SI = ชื่อดีไวช์ต้นทางที่อยู่ในรูปสตริงก์แบบASCII
<dd>ES:DI = ชื่อเส้นทางเน็ตเวิร์กปลายทางที่อยู่ในรูปสตริงก์แบบ ASCII พร้อมรหัสผ่าน
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลผิดพลาด ถ้า CY = 1
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 5F04H : ยกเลิกการรก (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AX = 5F04H
<dd>DS:SI = ชื่อดีไวซ์หรือเส้นทางที่อยู่ในรูปสตริงก์แบบ ASCII
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลความผิดพลาด ถ้า CY = 1
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 62H : อ่าน PSP (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AX = 62H
<u>เอาต์พุต</u>
<dd>BX = เซกเมนต์ของโปรแกรมที่กำลังเอกซีคิวต์
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 67H : กำหนดจำนวนแฮนเคิล (ดอส 3.00 ขึ้นไป)</font>
<u>อินพุต</u>
<dd>AX = 67H
<dd>BX = จำนวนแฮนเคิลที่เปิดได้ (มากที่สุด 255)
<u>เอาต์พุต</u>
<dd>AX = ข้อมูลความผิดพลาด ถ้า CY = 1
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 21H บริการที่ 68H : Commit File (Write Buffer) ดอส 3.00 ขึ้นไป</font>
<u>อินพุต</u>
<dd>AX = 68H
<u>เอาต์พุต</u>
<dd>BX = ไฟล์แฮนเคิล
<u>ข้อสังเกต</u> บริการนี้เป็นบริการสุดท้ายของดอส 3.3 INT 21H
</table>
<table width=760 align=center bgcolor=#ddffff><td>
<pre>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 22H : เทอร์มิเนคแอดเดรส</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 23H : Control-Break Exit Address</font>
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 24H : Critical Error Hander</font>
<dd>ค่าใน AH บ่งบอกถึงข้อผิดพลาดชนิดต่างๆ โดย
<dd>0 Diskette is write protected
<dd>1 Unknow unit
<dd>2 The requested drive is not ready
<dd>3 unknow command
<dd>4 Cyclie redundany check error int the data
<dd>5 Bad request structure length
<dd>6 Seek error
<dd>7 Media type unknow
<dd>8 Sector not found
<dd>9 The printer is out of paper
<dd>A Write fault
<dd>B Read fault
<dd>C General Failure
<dd>ถ้ามีการเอกซีคิวต์คำสั่ง IRET แล้วดอสจะเลือกกระทำตามค่าใน AL โดย
<dd>AL = 0 ข้อผิดพลาดจะถูกเพิกเฉย (ignore)
<dd>= 1 มีการทำงานนั้นซ้ำใหม่ (retry)
<dd>= 2 จบโปรแกรมด้วย INT 23H (abort)
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 25H : อ่านดิสก์แบบแอบโซลุค</font>
<u>อินพุต</u>
<dd>AL = หมายเลขไดรฟ์
<dd>CX = จำนวนเซกเตอร์ที่อ่าน
<dd>DX = ลอจิคัลเซกเตอร์แรก
<dd>DS:BX = แอดเดรสของบัฟเฟอร์
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AH = 80H Disk didn't respond
<dd>AH = 40H Seek failed
<dd>AH = 20H Controller failure
<dd>AH = 10H Bad CRC error cHeck
<dd>AH = 08 DMA overrun
<dd>AH = 04 Sector not found
<dd>AH = 03 Write protect error
<dd>AH = 02 Address mark missing
<dd>AH = 00 Error unknow
<u>ข้อสังเกต</u> แฟล็กจะยังคงอยู่ในสแต็กภายหลังการเรียก INT <dd>นี้ไปแล้วเนื่องจากข้อมูลถูกรีเทิร์นมาในแฟล็ก
<dd>ฉะนั้นหลังจากใช้ข้อมูลที่อยู่ในสแต็กแล้วอย่าลืมใช้คำสั่ง POPF ด้วยเสมอนอกจากนี้ INT
<dd>นี้ยังเปลี่ยนค่าในรีจีสเตอร์อื่นๆ ทุกตัวด้วย
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 26H : เขียนดิสก์แบบแอบโซลุด</font>
<u>อินพุต</u>
<dd>AL = หมายเลขไดรฟ์
<dd>CX = จำนวนแซกเตอร์ที่เขียน
<dd>DX = ลอจิคัลเซกเตอร์แรก
<dd>DS:BX = แอดเดรสของบัฟเฟอร์
<u>เอาต์พุต</u>
<dd>CY = 0 --> สำเร็จ
<dd>CY = 1 --> AH = 80H Disk didn't respond
<dd>AH = 40H Seek failed
<dd>AH = 20H Controller failure
<dd>AH = 10H Bad CRC error cHeck
<dd>AH = 08 DMA overrun
<dd>AH = 04 Sector not found
<dd>AH = 03 Write protect error
<dd>AH = 02 Address mark missing
<dd>AH = 00 Error unknow
<u>ข้อสังเกต</u> แฟล็กจะยังคงอยู่ในสแต็กภายหลังการเรียก INT <dd>นี้ไปแล้วเนื่องจากข้อมูลถูกรีเทิร์นมาในแฟล็ก
<dd>ฉะนั้นหลังจากใช้ข้อมูลที่อยู่ในสแต็กแล้วอย่าลืมใช้คำสั่ง POPF
<dd>ด้วยเสมอนอกจากนี้ INT นี้ยังเปลี่ยนค่าในรีจีสเตอร์อื่นๆ ทุกตัวด้วย
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 27H : จบโปรแกรมโดยโค้ดยังคงค้างอยู่ในหน่วยความจำ</font>
<u>อินพุต</u>
<dd>DS:DX = ชี้โดยตรงไปยังจุดสุดท้ายของโค้ดที่ค้างอยู่ในหน่วยความจำ
<hr color=gray><font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 28H-2EH : ใช้งานภายในดอส</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 2FH : มัลติเพล็กซ์อินเทอร์รัพท์</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 30H - 3FH : ดอสสงวนไว้</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 40H - 5FH : สงวนไว้</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 60H - 67H : สงวนไว้สำหรับยูสเซอร์ซอฟต์แวร์</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 68H - 7FH : ไม่ได้ใช้งาน</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 80H - 85H : BASIC สงวนไว้</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> 86H - F0H : ใช้โดยอินเตอร์พรีเตอร์ภาษาเบสิก</font>
<font color=blue><b>อินเทอร์รัพท์หมายเลข</b> F1H - FFH : ไม่ได้ใช้งาน</font>
</PRE></font>
</font>
</table>

<center>
<! 4.2548.02 >
<form action=http://www.thaiall.com/cgi/srchweb.pl method=post><hr color=gray width=760>
<a href=http://www.thaiall.com/cgi/putting.pl>แนะนำเว็บใหม่</a> : <a href=http://www.thaiall.com/rangeweb.htm>แสดงผลการจัดอันดับ</a>
<input Type=text Name=SearchText Size=20><input Type=submit value=สืบค้นในฐานข้อมูลเว็บไซต์>
<br><a href=http://www.lovelampang.com/>รักลำปาง</a> : <a href=http://lampang.thcity.com/>lampang.thcity.com</a> : <a href=http://thaiall.thailandhosting.net/>thailandhosting.net</a> : <a href=http://www.perlphpasp.com/>topsiam.com</a> : <a href=http://www.cookkoo.com/>cookkoo.com</a> : <a href=http://www.yonok.ac.th/>โยนก</a>
<br><a href=http://www.thaiall.com/quiz>ศูนย์สอบ</a> : <a href=http://www.thaiall.com/article>รวมบทความ</a> :  <a href=http://www.thaiall.com/download>Download</a> : <a href=http://mail.thaiall.com/>yourname@thaiall.com</a>
<br>ติดต่อ <a href=http://www.thaiall.com/me>ทีมงาน</a> ชาวลำปาง <a href=http://www.thaiall.com/me/dream.htm>มีฝันเพื่อการศึกษา</a> Tel.08-1992-7223
</form>
<script language=javascript>
<!--
url=document.location.href.substr(7,11)
page="assembly_interrupt"
if(url == "lampang.thc") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/h0013199.js'></script>")
if(url == "www.yonok.a") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/c0001943.js'></script>")
if(url == "www.thaiall") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/c0001941.js'></script>")
if(url == "www.perlphp") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/h0013336.js'></script>")
if(url == "thaiall.kor") document.write("<script language='javascript1.1' src='../../hits0.truehits.net/data/k0020653.js'></script>")
 --> 
</script>
</body>
<!-- Mirrored from www.thaiall.com/assembly/interrupt.htm by HTTrack Website Copier/3.x [XR&CO'2008], Mon, 21 Dec 2009 05:44:33 GMT -->
</html>
