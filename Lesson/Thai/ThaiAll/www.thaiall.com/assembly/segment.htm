<html>
<!-- Mirrored from www.thaiall.com/assembly/segment.htm by HTTrack Website Copier/3.x [XR&CO'2008], Mon, 21 Dec 2009 05:44:40 GMT -->
<head><title>เซกเมนต์ (Segment)</title>
<meta http-equiv=content-type content="text/html; charset=windows-874">
<meta name="keywords" content="segment,assembly,computer,organization,programming,language,principles">
<meta name="description" content="เซกเมนต์ (Segment)">
<style type="text/css">
body{font-family:microsoft sans serif;font-size:10pt}
a:link{color:red;}
a:visited{color:purple;}
textarea{font-family:microsoft sans serif;color:blue;background-color:#ddffdd}
td{font-size:10pt;font-family:microsoft sans serif;}
</style>
</head>
<body text=black bgcolor=white topmargin=0 leftmargin=0>
<table width=100% cellpadding=0 cellspacing=0 border=0 bgcolor=#808080><tr><td colspan=3 bgcolor=black height=3>
<tr><td><a href=http://www.thaiall.com/me><img src=ta1.gif border=0></a><td align=center><font color=white>
เซกเมนต์ (Segment)</td><td align=right><a href=http://www.thaiall.com/sponsor.htm><img src=ta2.gif border=0></a></td></tr><tr bgcolor=#dddddd height=3><td colspan=3> </td></tr>
</table>

<br>ปรับปรุง : 2550-07-10 (แก้ไขรายละเอียด)
<br> 

<table width=760 align=center><td>
<ol><b>ภาษา Assembly จะแบ่ง Segment ออกเป็น 4 ส่วน</b>
<li><b>เซกเมนต์ข้อมูล (Data Segment)</b>  
<br>มี Directive segment ในภาษา assembly คือ .data เป็นเซกเมนต์ที่เก็บข้อมูลของโปรแกรม มักถูกอ้างอิงด้วยรีจิสเตอร์ DS
<li><b>เซกเมนต์คำสั่ง (Code Segment)</b> 
<br>มี Directive segment ในภาษา assembly คือ .code เป็นเซกเมนต์ที่เก็บคำสั่งโปรแกรมทั้งหมด มักทำงานร่วมกับรีจิสเตอร์ชี้คำสั่ง IP ซึ่งเป็นออฟเซตในการชี้ตำแหน่งคำสั่ง
<li><b>เซกเมนต์สแตก (Stack Segment)</b> 
<br>มี Directive segment ในภาษา assembly คือ .stack เป็นเซกเมนต์ที่เป็นหน่วยความจำแสตก การใช้หน่วยความจำส่วนนี้เป็นแบบ Last in first out (LIFO) ใช้ร่วมกับรีจิสเตอร์ SP หรือตัวชี้แสตก
<li><b>เซกเมนต์พิเศษ (Extra Segment)</b> 
<br>เป็นเซกเมนต์ที่เป็นหน่วยความจำพิเศษ ใช้ร่วมกับรีจิสเตอร์ DI
</ol>
<table width=760><td>
<ol><b>การเขียนโปรแกรมจะแบ่งออกเป็น 4 ส่วน</b>
<li>ลาเบล หรือ ชื่อ (Label or Name) หมายถึง ตำแหน่งอ้างอิงในโปรแกรม
<li>โอเปอเรชัน (Operation) หรือนีโมนิค (Mnemonic) หมายถึง คำสั่งดำเนินการ
<li>โอเปอแรนด์ (Operand) หมายถึง ตัวถูกดำเนินการ
<li>คอมเมนต์ (Comment) หมายถึง หมายเหตุ
</ol>
<td>
<table width=340 align=center bgcolor=#ffffdd>
<tr bgcolor=#dddddd><td width=80>Name <td width=80>Operation <td width=80>Operand <td width=100> Comment
<tr><td>x: <td>mov <td>ah,08<td>; Wait Character
<tr bgcolor=#ffffaa><td> <td>int 21 <td><td>
<tr><td> <td>mov <td>ah,4c<td>; Program Stop
<tr bgcolor=#ffffaa><td> <td>int 21 <td><td>
</table>
</table>
</table>

<table align=center bgcolor=black width=760>
<tr><td bgcolor=#ffffdd><b>:: โปรแกรมนี้เป็นการกำหนด segment แบบเดิม
<br>:: ผลของโปรแกรมนี้คือ ตัวอักษร c เพราะตัวอักษร a คือ 61h</b>
<tr><td bgcolor=#666666><font color=yellow>seg1.asm : โปรแกรมพิมพ์อักษร a ด้วย int 21 บริการ ah=2<tr><td>
<font face="courier new" color=white><pre>
sseg  segment
      db      64 dup(?)   
sseg  ends
dseg  segment
a     db      61h
dseg  ends
cseg  segment
main  proc    far
      assume  cs:cseg,ds:dseg,ss:sseg
      mov     ax,dseg
      mov     ds,ax
      mov     dl,a
      mov     ah,2
      int     21h
      mov     ah,4ch
      int     21h
main  endp
cseg  ends
      end     main
</pre></font>
</table>
<hr color=blue width=760>



<table align=center bgcolor=black width=760>
<tr><td bgcolor=#ffffdd><b>:: โปรแกรมนี้เป็นการกำหนด segment แบบเดิม
<br>:: ผลของโปรแกรมนี้คือ ตัวอักษร c เพราะตัวอักษร a คือ 61h</b>
<tr><td bgcolor=#666666><font color=yellow>seg2.asm : โปรแกรมพิมพ์อักษร ที่เกิดจากคำสั่ง add register al และ bl<tr><td>
<font face="courier new" color=white><pre>
sseg  segment
      db      64 dup(?)   ; กำหนดที่ว่าง 64 byte
sseg  ends
dseg  segment
data1 db      31h
data2 db      32h
sum   db      ?         
dseg  ends
cseg  segment
main  proc    far
      assume  cs:cseg,ds:dseg,ss:sseg
      mov     ax,dseg
      mov     ds,ax
      mov     al,data1
      mov     bl,data2
      add     al,bl
      mov     sum,al
      mov     dl,sum
      mov     ah,2
      int     21h
      mov     ah,4ch
      int     21h
main  endp
cseg  ends
      end     main
</pre></font>
</table>
<hr color=blue width=760>


<table align=center bgcolor=black width=760>
<tr><td bgcolor=#ffffdd><b>:: โปรแกรมนี้เป็นการกำหนด segment แบบเดิม
<br>:: ผลของโปรแกรมนี้คือ ตัวอักษร a ถึง z แล้ววนกลับมา a อีก</b>
<tr><td bgcolor=#666666><font color=yellow>seg3.asm : พิมพ์อักษร 1 ตัว รอรับ any key พิมพ์ถึง z แล้ววนมา a ใหม่ หยุดเมื่อกด Ctrl-C<tr><td>
<font face="courier new" color=white><pre>
sseg  segment
      db      64 dup(?) ; กำหนดที่ว่าง 64 byte
sseg  ends
dseg  segment
data1 db      60h
data2 db      01h
sum   db      ? 
dseg  ends
cseg  segment
main  proc    far
      assume  cs:cseg,ds:dseg,ss:sseg
      mov     ax,dseg
      mov     ds,ax
      mov     al,data1 
      mov     bl,data2 
burin:
      add     al,01h
      mov     sum,al
      mov     dl,sum
      mov     ah,2
      int     21h
      mov     ah,08h
      int     21h
      mov     al,sum
      cmp     al,7ah
      jne     burin
      mov     al,60h
      jmp     burin
main  endp
cseg  ends
      end     main
</pre></font>
</table>
<hr color=blue width=760>

<table align=center bgcolor=black width=760>
<tr><td bgcolor=#ffffdd><b>:: โปรแกรมนี้เป็นการกำหนด segment แบบใหม่ และง่ายกว่า
<br>:: ผลของโปรแกรมนี้คือ ตัวอักษร c เพราะตัวอักษร a คือ 61h และเพิ่มการพิมพ์ String เข้าไปจากตัวอย่างข้างต้น</b>
<tr><td bgcolor=#666666><font color=yellow>seg4.asm : พิมพ์ cburin rujjanapan แล้วเลิกการทำงาน<tr><td><font face="courier new" color=white><pre>
      .model  small
      .stack  64h
      .data
data1 db      31h
data2 db      32h
data3 db      'burin rujjanapan $'
sum   db      ?
      .code
main  proc
      mov     ax,@data
      mov     ds,ax
      mov     al,data1
      mov     bl,data2
      add     al,bl
      mov     sum,al
      mov     dl,sum
      mov     ah,2
      int     21h
      lea     dx,data3
      mov     ah,9
      int     21h 
      mov     ah,4ch
      int     21h
main  endp
      end     main
</pre></font>
</table>

<center>
<! 4.2548.02 >
<form action=http://www.thaiall.com/cgi/srchweb.pl method=post><hr color=gray>
<a href=http://www.thaiall.com/cgi/putting.pl>แนะนำเว็บใหม่</a> : <a href=http://www.thaiall.com/rangeweb.htm>แสดงผลการจัดอันดับ</a>
<input Type=text Name=SearchText Size=20><input Type=submit value=สืบค้นในฐานข้อมูลเว็บไซต์>
<br><a href=http://www.lovelampang.com/>รักลำปาง</a> : <a href=http://lampang.thcity.com/>lampang.thcity.com</a> : <a href=http://thaiall.thailandhosting.net/>thailandhosting.net</a> : <a href=http://www.perlphpasp.com/>topsiam.com</a> : <a href=http://www.cookkoo.com/>cookkoo.com</a> : <a href=http://www.yonok.ac.th/>โยนก</a>
<br><a href=http://www.thaiall.com/quiz>ศูนย์สอบ</a> : <a href=http://www.thaiall.com/article>รวมบทความ</a> :  <a href=http://www.thaiall.com/download>Download</a> : <a href=http://mail.thaiall.com/>yourname@thaiall.com</a>
<br>ติดต่อ <a href=http://www.thaiall.com/me>ทีมงาน</a> ชาวลำปาง <a href=http://www.thaiall.com/me/dream.htm>มีฝันเพื่อการศึกษา</a> Tel.08-1992-7223
</form>
<script language=javascript>
<!--
url=document.location.href.substr(7,11)
page="assembly_segment"
if(url == "lampang.thc") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/h0013199.js'></script>")
if(url == "www.yonok.a") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/c0001943.js'></script>")
if(url == "www.thaiall") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/c0001941.js'></script>")
if(url == "www.perlphp") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/h0013336.js'></script>")
if(url == "thaiall.kor") document.write("<script language='javascript1.1' src='../../hits0.truehits.net/data/k0020653.js'></script>")
-->
</script>
</body>
<!-- Mirrored from www.thaiall.com/assembly/segment.htm by HTTrack Website Copier/3.x [XR&CO'2008], Mon, 21 Dec 2009 05:44:40 GMT -->
</html>
