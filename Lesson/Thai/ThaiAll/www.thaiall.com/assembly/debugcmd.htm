<html>
<!-- Mirrored from www.thaiall.com/assembly/debugcmd.htm by HTTrack Website Copier/3.x [XR&CO'2008], Mon, 21 Dec 2009 05:44:33 GMT -->
<head><title>การใช้โปรแกรมดีบัก (Debug program)</title>
<meta http-equiv=content-type content="text/html; charset=windows-874">
<meta name="keywords" content="debug,assembly,computer,organization,programming,language,principles">
<meta name="description" content="ดีบัก คือการแก้ไขปัญหาเกี่ยวกับเครื่องคอมพิวเตอร์">
<style type="text/css">
body{font-family:microsoft sans serif;font-size:10pt}
a:link{color:red;}
a:visited{color:purple;}
textarea{font-family:microsoft sans serif;color:blue;background-color:#ddffdd}
td{font-size:10pt;font-family:microsoft sans serif;}
</style>
</head>
<body text=black bgcolor=white topmargin=0 leftmargin=0>
<table width=100% cellpadding=0 cellspacing=0 border=0 bgcolor=#808080><tr bgcolor=red height=1><td colspan=3> </td></tr>
<tr><td><a href=http://www.thaiall.com/me><img src=ta1.gif border=0></a></td><td align=center><font color=white>
การใช้โปรแกรมดีบัก (Debug program)</td><td align=right><a href=http://www.thaiall.com/sponsor.htm><img src=ta2.gif border=0></a></td></tr><tr bgcolor=#dddddd height=3><td colspan=3> </td></tr>
</table>

<br>ปรับปรุง : 2551-09-02 (ปรับคำสั่ง)
<br> 

<table width=760 align=center><tr><td>
<font size=4>
<dd>มีเรื่องเล่าว่า <b>เครื่องคอมพิวเตอร์ในอดีต</b> ทำงานผิดปกติ เมื่อนักคอมพิวเตอร์ตรวจสอบโดยละเอียด
ก็พบว่าเหตุของปัญหาเกิดจาก แมลง (Bug) เข้าไปอยู่ในเครื่องคอมพิวเตอร์ เมื่อนำแมลงออกมา ระบบต่าง ๆ ก็ทำงานได้ตามปกติ
ปัจจุบันจึงเรียกการแก้ปัญหาที่เกี่ยวกับเครื่องคอมพิวเตอร์ว่าการดีบัก (Debug)
<dd><b>ดีบัก (Debug)</b> คือ โปรแกรมที่พัฒนาเพื่อแก้ไขปัญหาพื้นฐานในระบบปฏิบัติการดอส (DOS = Disk Operation System)
เป็นโปรแกรมสำหรับแก้ไขแฟ้มอย่างง่าย เป็นคำสั่งภายนอก (External Command) ของดอส (DOS) 
ที่นิยมใช้งานในกลุ่มนักพัฒนามาตั้งแต่ยุคระบบปฏิบัติการดอส
</table>

<table width=760 bgcolor=black align=center><td>
<font color=yellow size=4>? คือการแสดงคำสั่งที่ใช้งานได้ของ debug</font>
</table>
<table width=760 bgcolor=black align=center><td bgcolor=#444444 width=20> <td>
<pre><font face="courier new" color=white>C:\>debug
-?
assemble     A [address]
compare      C range address
dump         D [range]
enter        E address [list]
fill         F range list
go           G [=address] [addresses]
hex          H value1 value2
input        I port
load         L [address] [drive] [firstsector] [number]
move         M range address
name         N [pathname] [arglist]
output       O port byte
proceed      P [=address] [number]
quit         Q
register     R [register]
search       S range list
trace        T [=address] [value]
unassemble   U [range]
write        W [address] [drive] [firstsector] [number]
allocate expanded memory        XA [#pages]
deallocate expanded memory      XD [handle]
map expanded memory pages       XM [Lpage] [Ppage] [handle]
display expanded memory status  XS
-
</font></pre></td></table>
<hr color=gray width=760>

<table width=760 bgcolor=black align=center><td>
<font color=yellow size=4>? ดูข้อมูลใน Register</font>
</table>
<table width=760 bgcolor=black align=center><td bgcolor=#444444 width=20> <td>
<pre><font face="courier new" color=white>C:\>debug
-t
AX=0000  BX=0000  CX=0000  DX=0011  SP=FFEE  BP=0000  SI=0000  DI=0000
DS=0AE8  ES=0AE8  SS=0AE8  CS=0AE8  IP=0102   NV UP EI PL NZ NA PO NC
-
</font></pre></td></table>
<hr color=gray width=760>

<table width=760 bgcolor=black align=center><td>
<font color=yellow size=4>EXAMPLE :: ตัวอย่างการใช้ SHL
</table>
<table width=760 bgcolor=black align=center><td bgcolor=#444444 width=20> <td>
<pre><font face="courier new" color=white><font color=yellow size=4>- SHL คือย้ายบิท เข้าไปทางซ้าย
- DFFD = 1101 1111 1111 1101
- BFFA = 1011 1111 1111 1010</font>
C:\>debug
-a 100
0B24:0100 mov dx,dffd
0B24:0103 shl dx,1
0B24:0105

-r
AX=0000  BX=0000  CX=0000  <b>DX=0000</b>  SP=FFEE  BP=0000  SI=0000  DI=01B8
DS=0B24  ES=0B24  SS=0B24  CS=0B24  IP=0103   OV UP EI PL NZ NA PE CY
0B24:0103 D1E2          SHL     DX,1

-t =cs:100 2
AX=0000  BX=0000  CX=0000  <b>DX=DFFD</b>  SP=FFEE  BP=0000  SI=0000  DI=01B8
DS=0B24  ES=0B24  SS=0B24  CS=0B24  IP=0103   OV UP EI PL NZ NA PE CY
0B24:0103 D1E2          SHL     DX,1

AX=0000  BX=0000  CX=0000  <b>DX=BFFA</b>  SP=FFEE  BP=0000  SI=0000  DI=01B8
DS=0B24  ES=0B24  SS=0B24  CS=0B24  IP=0105   NV UP EI NG NZ NA PE CY
0B24:0105 D1E2          SHL     DX,1
-
</ul></font></pre></td></table>
<hr color=gray width=760>

<table width=760 bgcolor=black align=center><tr><td>
<font color=yellow size=4>
<dd>โปรแกรมนี้แสดงการเขียน assembly ใน DOS และการสั่งประมวลผลด้วยคำสั่ง g 
<dd>การเขียนโปรแกรมนี้ได้ต้องเข้าใจว่า int 20 คืออะไร int 21 ใช้อย่างไร และ 41 คืออักษรอะไร และที่สำคัญต้องเข้าใจว่า debug มีคำสั่งอะไรให้ใช้บ้าง</font>
<tr bgcolor=#444444><td>
<pre><font face="courier new" color=white>C:\>debug
-a
106F:0100 mov ah,02
106F:0102 mov dl,41
106F:0104 int 21
106F:0106 int 20
106F:0108
-g
A
Program terminated normally
- n x.com
- rcx
: 8
- w
- q
C:\>x
A
C:\>
</font></pre></td></table>
<hr color=gray width=760>

<table width=760 bgcolor=#f9f9f9 align=center><td>
<a name=debugcommand></a>
<ul><pre><font size=6><b>สรุปคำสั่ง debug</b></font><br>เลขที่ใช้คือ 0000 หมายถึงเลขฐาน 16 จำนวน 4 หลัก สูงสุดคือ ffff
<font face="courier new">a <font face="microsoft sans serif" color=red>:: Assemble แปลภาษา aassembly ไปแปลเป็นภาษาเครื่อง (enter 2 ครั้งเมื่อจบ)</font>
<dd>C:\assembly&gt;debug
<dd>-n i.com
<dd>-a cs:100
<dd>106F:0100 mov ah,08
<dd>106F:0102 int 21
<dd>106F:0104 mov ah,4c
<dd>106F:0106 int 21
<dd>106F:0108
<dd>-rcx
<dd>CX 0000
<dd>:8
<dd>-w
<dd>Writing 00008 bytes
<dd>-q
c <font face="microsoft sans serif" color=red>:: Compare เปรียบเทียบ</font>
<dd>-c cs:100 102 ds:1a0
<dd>1090:0100  B4  1E  1090:01A0
<dd>1090:0101  08  B4  1090:01A1
<dd>1090:0102  CD  52  1090:01A2
<dd>-
d <font face="microsoft sans serif" color=red>:: Dump แสดงข้อมูล</font>
<dd>-d cs:100 200
<dd>-d cs:100 107 (<font color=red>แสดงเพียง 7 ตัวอักษรจากตำแหน่ง 100 - 107</font>)
<dd>-d cs:100
e <font face="microsoft sans serif" color=red>:: Enter แก้ไขข้อมูล</font>
<dd>-e cs:4a5 41 42 43
f <font face="microsoft sans serif" color=red>:: Fill เติมลงในช่องที่กำหนด</font>
<dd>-f cs:100 107 "abc" (<font color=red>ทำให้ทั้งแฟ้มมีแต่ abc</font>)
<dd>-f cs:103 105 "d" (<font color=red>ทำให้ตัวที่ 4 ถึง 6 เป็นอักษร d</font>)
g <font face="microsoft sans serif" color=red>:: Go สั่งประมวลผล</font>
<dd>-g 
<dd>-g 102 ประมวลผลไปถึง address ที่ต้องการ
h <font face="microsoft sans serif" color=red>:: Hexarithmatic คำนวณเลขฐาน 16</font>
<dd>-h  f 8
<dd>0017  0007 (<font color=red>ผลลัพธ์คือผลบวก และผลต่าง</font>)
<dd>-h 111 110
<dd>0221  0001 (<font color=red>ผลลัพธ์คือผลบวก และผลต่าง</font>)
i <font face="microsoft sans serif" color=red>:: Input อ่านข้อมูลจาก port ที่กำหนด</font>
<dd>-i 2f8
l <font face="microsoft sans serif" color=red>:: Load เรียกข้อมูลจาก disk ใหม่ ถ้าเคย Load มาแล้วก็หมายถึง Load มาทับของเดิมในหน่วยความจำ</font>
<dd>-n inkey.com
<dd>-l 
m <font face="microsoft sans serif" color=red>:: Move ย้ายข้อมูล 6 อักษรไปเริ่มทับตำแหน่งที่ 130 เป็นต้นไป
<dd>คัดลอกจาก 100 ไปถึง 106 รวม 6 byte ไปตำแหน่งที่ 130</font>
<dd>-m cs:100 106 130
n <font face="microsoft sans serif" color=red>:: Name กำหนดชื่อแฟ้มที่จะ load หรือ write</font>
<dd>-n inkey.com
o <font face="microsoft sans serif" color=red>:: Output ส่งข้อมูลออกทาง port ที่กำหนด</font>
<dd>-o 2f8
p <font face="microsoft sans serif" color=red>:: Proceed สั่งประมวลผล แต่ต้องมีโปรแกรมที่ทดสอบได้นะครับ</font>
<dd>-p =100
<dd>-p
q <font face="microsoft sans serif" color=red>:: Quit เลิกการทำงาน</font>
<dd>-q
r <font face="microsoft sans serif" color=red>:: Register เรียกดู หรือแก้ไขค่าใน register
<dd>ค่าของ IP จะไม่เลื่อนเหมือนการใช้ t ที่ประมวลผล และทำให้ตำแหน่งของ IP เลื่อนไป แต่คำสั่ง r จะแสดงค่าเดิมทุกครั้ง</font>
<dd>-r 
<dd>-r ax (<font color=red>แล้วกรอกค่าที่ต้องการ</font>)
s <font face="microsoft sans serif" color=red>:: Search ค้นหา</font>
<dd>-s cs:100 110 41
t <font face="microsoft sans serif" color=red>:: Trace ประมวลผล แล้วแสดงผลทีละคำสั่ง ตัวอย่างนี้ทำเพียง 3 บรรทัดคำสั่ง
<dd>ค่าของ IP จะเลื่อนไป IP ถัดไป ไม่เหมือนคำสั่ง r ที่แสดงค่าเหมือนเดิมทุกครั้ง</font>
<dd>-t =cs:100 3 
<dd>-t
u <font face="microsoft sans serif" color=red>:: Unassemble แปลจากภาษาเครื่องมาเป็น assembly</font>
<dd>-u 
<dd>1091:0100 B408          MOV     AH,08
<dd>1091:0102 CD21          INT     21
<dd>1091:0104 B44C          MOV     AH,4C
<dd>1091:0106 CD21          INT     21
<dd>-
w <font face="microsoft sans serif" color=red>:: Write เขียนข้อมูลจากหน่วยความจำลง disk</font>
<dd>-w 
</font></pre></ul></ul>
</table>

<table width=760 bgcolor=black align=center><td>
<font color=yellow size=4>
- รับอักษร ด้วยบริการ AH=8 แบบไม่แสดงผล<br> 
- แสดงอักษร ด้วยบริการ AH=02<br>
- ตัวอย่างนี้ผู้ทดสอบกด a หนึ่งครั้ง จะแสดงอักษร a มา 3 ครั้ง
<ul><pre><font face="courier new" color=white>C:\>debug
-n x.com
-a
<font color=yellow>0AEA:0100 mov ah,08
0AEA:0102 int 21</font><font color=#ddffdd>
0AEA:0104 mov dl,al
0AEA:0106 mov ah,02
0AEA:0108 int 21</font>
0AEA:010A int 21
0AEA:010C int 21
0AEA:010E int 20
0AEA:0110
-rcx
CX 0000
:10
-w
Writing 00010 bytes
-g
aaa
Program terminated normally
-
</font></pre></ul></td></table>
<hr color=gray width=760>

<table width=760 bgcolor=black align=center><tr><td><font color=white>
<pre><font color=yellow size=4>การ clear password ของ BIOS ถ้าเข้าในฐานะ Admin ไม่ได้</font>
+ <a href=http://www.wikihow.com/Break-a-BIOS-Password>http://www.wikihow.com/Break-a-BIOS-Password</a>
+ <a href=http://www.go4expert.com/forums/showthread.php?t=114>http://www.go4expert.com/forums/showthread.php?t=114</a>
+ <a href=http://rahulhackingarticles.wetpaint.com/page/Clear+BIOS+Password,+All+tricks+!?t=anon>http://rahulhackingarticles.wetpaint.com/page/Clear+BIOS+Password,+All+tricks+!?t=anon</a>
<font face="courier new"><font color=yellow><b>Boot DOS by Windows98 and DOS>debug</b></font>
for : <b>AWARD BIOS</b>
-o 70 2e
-o 71 17
-q
and reboot<hr>
for : <b>AMI/AWARD BIOS</b>
-o 70 17
-o 71 17
-q
and reboot<hr>
for : <b>PHOENIX BIOS</b>
-o 70 FF
-o 71 17
-q
and reboot<hr>
for : <b>GENERIC</b>
Invalidates CMOS RAM. Should work on all AT motherboards
(XT motherboards don't have CMOS)
-o 70 2E
-o 71 FF
-q
and reboot
</table>

<center>
<! v 7.2549.10 >
<form action=http://www.thaiall.com/cgi/srchweb.pl method=post><hr color=red>
<a href=http://www.thaiall.com/cgi/putting.pl>แนะนำเว็บใหม่</a> : <a href=http://www.thaiall.com/rangeweb.htm>ผลการจัดอันดับ</a>
<input type=text name=SearchText Size=10><input type=submit value=สืบค้นเว็บไซต์>
<br><a href=http://www.lovelampang.com/>รักลำปาง</a> : <a href=http://lampang.thcity.com/>thcity.com</a> : <a href=http://www.korattown.com/>korattown.com</a> : <a href=http://www.topsiam.com/>topsiam.com</a> : <a href=http://www.yonok.ac.th/>มหาวิทยาลัยโยนก</a>
<br><a href=http://www.thaiall.com/quiz>ศูนย์สอบ</a> : <a href=http://www.thaiall.com/article>รวมบทความ</a> : <a href=http://www.thaiall.com/itinlife>ไอทีในชีวิตประจำวัน</a> :  <a href=http://www.thaiall.com/download>ดาวน์โหลด</a> : <a href=http://mail.thaiall.com/>yourname@thaiall.com</a>
<br>ติดต่อ <a href=http://www.thaiall.com/me>ทีมงาน</a> ชาวลำปาง <a href=http://www.thaiall.com/me/dream.htm>มีฝันเพื่อการศึกษา</a> Tel.08-1992-7223
</form>
<script language=javascript>
<!--
url=document.location.href.substr(7,11)
page="assembly_debugcmd"
if(url == "lampang.thc") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/h0013199.js'></script>")
if(url == "www.yonok.a") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/c0001943.js'></script>")
if(url == "www.thaiall") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/c0001941.js'></script>")
if(url == "www.perlphp") document.write("<script language='javascript1.1' src='../../hits1.truehits.net/data/h0013336.js'></script>")
if(url == "thaiall.kor") document.write("<script language='javascript1.1' src='../../hits0.truehits.net/data/k0020653.js'></script>")
-->
</script>
</body>
<!-- Mirrored from www.thaiall.com/assembly/debugcmd.htm by HTTrack Website Copier/3.x [XR&CO'2008], Mon, 21 Dec 2009 05:44:33 GMT -->
</html>
