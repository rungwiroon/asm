EXTRN	RANDOM:NEAR
EXTRN	BUFFER:BYTE

.MODEL	SMALL
.STACK	100H
.DATA
;FILE NAME IN ' ' MUST HAVE > ,0 < IN END
PMENU		DB 'MENU.BMP', 0		;BMP 256 COLORS FILE NAME
PHELP		DB 'HELP.BMP', 0
FILENAME	DB 'Table.BMP', 0
PIC01		DB '01.BMP', 0
PIC02		DB '02.BMP', 0
PIC03		DB '03.BMP', 0
PIC04		DB '04.BMP', 0
PIC05		DB '05.BMP', 0
PIC06		DB '06.BMP', 0
PRED		DB 'RED.BMP', 0
PBLUE		DB 'BLUE.BMP', 0
PBLACK		DB 'BLACK.BMP', 0
PBANK		DB 'BANK.BMP', 0
PDOWN		DB 'DOWN.BMP', 0
PEXITMENU	DB 'EXITMENU.BMP', 0
PPOINT		DB 'SCORE.BMP', 0
PUP		DB 'UP.BMP', 0
PWIN		DB 'WIN.BMP', 0
PWOLK		DB 'WOLK.BMP', 0
PKANAN		DB 'KANAN.BMP', 0
PODD		DB 'ODD.BMP', 0
PEVENT		DB 'EVENT.BMP', 0
PDOANG		DB 'DOANG.BMP', 0


;MUST HAVE
BMP_WIDTH	DW ?
BMP_HEIGHT	DW ?
BMP_BUFFER	DB 4 DUP(0)
BMP_COUNT	DW ?
BMP_X		DW ?
BMP_Y		DW ?

CHOICE		DB ?
X		DW 274, 246, 217, 189, 160, 132, 104, 75, 47, 18 	
XBLUE		DW ?
XRED		DW ?
XTEMP		DW ?
Y		DW 133, 118, 103,  88,  73,  58,  43,  28,  13 
YBLUE		DW ?
YRED		DW ?
YTEMP		DW ?
CRED		DB 0 ; Count Point RED
CBLUE		DB 0 ; Count Point BLUE
CTEMP		DB ?
RTEMP		DB 0
BTEMP		DB 0
TEMP		DB 0
CHECK		DB ?
VGA		DW ?
FILERED		DB 'RED.BAT', 0
FILEBLUE	DB 'BLUE.BAT', 0
HANDLE		DW ?
TEMPRED		DW 512 DUP(0)
TEMPBLUE	DW 512 DUP(0)

MSGRED		DB 'SCORE RED: $'
MSGBLUE	DB 'SCORE BLUE: $'

.CODE
MAIN	PROC
	MOV AX,@DATA
	MOV DS,AX

;STEP1: SAVE DISPLAY MODE IF NECESSORY
	MOV AH,0FH
	INT 10H
	MOV VGA, AX

;STEP2: CHANGE DISPLAY MODE  TO 13H(320*200:256 COLORS)
	MOV AH,00H
	MOV AL,13H
	INT 10H
SMENU:
; CLEAR VALUE
	MOV BH, 0
	MOV RTEMP, BH
	MOV BTEMP, BH
	MOV CBLUE, BH
	MOV CRED, BH

; SHOW MENU PICTURE
	LEA SI, PMENU
	MOV BMP_X, 0
	MOV BMP_Y, 0
	CALL LOADBMP

; INPUT VALUE CHECK CHOICE
	MOV AH, 1
	INT 21H
	MOV CHOICE, AL

; CHECK CHOICE FORM KEYBOARD

; CHECK CHARACTER 1 START PLAY
	CMP CHOICE, 31H
	JNE CH02
	CALL START
	
	JMP SMENU

; CHECK CHARACTER 2 HELP
CH02:
	CMP CHOICE, 32H
	JNE CH03
	CALL _HELP
	JMP SMENU

; CHECK CHARACTER 3 SHOW SCORE
CH03:
	CMP CHOICE, 33H
	JNE CH04
	CALL SHOWSCORE 
	JMP SMENU

; CHECK CHARACTER 4 EXIT
CH04:
	CMP CHOICE, 34H
	JNE SMENU
EXITDOS:

;LOAD OLD DISPLAY MODE
	MOV AX, VGA
	MOV AH, 00H
	INT 10H

;DOS EXIT
	MOV AH,4CH
	INT 21H
MAIN	ENDP

;========== DISPLAY TABLE FOR PLAY ==========
DISPLAY	PROC
	LEA SI, FILENAME
	MOV BMP_X, 0
	MOV BMP_Y, 0
	CALL LOADBMP
	RET
DISPLAY	ENDP

;========== WAIT AND INPUT CHARACTER FOR CHECK EXIT MENU ==========
WAITE   PROC
	MOV AH, 1
	INT 21H
	MOV CHECK, AL
	RET
WAITE   ENDP

;========== DISPLAY HELP =========
_HELP	PROC
	LEA SI, PHELP
	MOV BMP_X, 0
	MOV BMP_Y, 0
	CALL LOADBMP
	CALL WAITE
	RET
_HELP	ENDP

;========== SHOW PICTURE EXITMENU AND EXIT MENU ========
_EXITMENU       PROC
	LEA SI, PEXITMENU
	CALL SHOWDE
	CALL WAITE
;IF ((CHECK = Y) OR (CHECK = y)) THEN OUT 
	CMP CHECK, 59H
        JNE _OUT
        CMP CHECK, 79H
        JNE _OUT
	CALL MAIN
_OUT:
	RET
_EXITMENU       ENDP

;========== START TO PLAY =========
START	PROC
;SHOW FIRST DISPLAY AT PLAY
	CALL DISPLAY

	LEA SI, PRED
	MOV BMP_X, 117
	MOV BMP_Y, 133
	CALL LOADBMP

	LEA SI, PBLUE
	MOV BMP_X, 117
	MOV BMP_Y, 138
	CALL LOADBMP

;SHOW RISK DICE
	LEA SI, PBANK
	CALL SHOWDE
	CALL WAITE

ST_PLAY:
	CALL RANDOM
	CALL POINT
	MOV AH, CRED
	MOV AL, BUFFER
	ADD AH, AL
	MOV CRED, AH
	MOV CTEMP, AH

; Clear Red Point
	CMP RTEMP, 0
	JNZ CLEARED_OK
	LEA SI, PBLACK
	MOV BMP_X, 117
	MOV BMP_Y, 133
	CALL LOADBMP
	MOV BL, 1
	MOV RTEMP, BL
	JMP CONTI_RED

CLEARED_OK:	
	LEA SI, PBLACK
	MOV AX, XRED
	MOV BX, YRED
	MOV BMP_X, AX
	MOV BMP_Y, BX
	CALL LOADBMP 

CONTI_RED:        
	MOV AL, CRED
	MOV TEMP, AL

;ENTER TO WOLK RED
	LEA SI, PWOLK
	CALL SHOWDE
	CALL WAITE

	CALL WOLK
;ADD NUMBER OF TABLE RED
	MOV AL, TEMP
	MOV CRED, AL
	MOV AX, XTEMP
	MOV BX, YTEMP
	MOV XRED, AX
	MOV YRED, BX
	LEA SI, PRED
	MOV BMP_X, AX
	MOV BMP_Y, BX
	CALL LOADBMP
	CMP CRED, 50
	JGE ST_END1

	LEA SI, PBANK
	CALL SHOWDE
	CALL WAITE
;IF (CHECK = ESC) THEN EXIT MENU
	CMP CHECK, 1BH
	JE E01
	JMP CON1

E01:
	CALL _EXITMENU 
	RET
CON1:
	CALL RANDOM
	CALL POINT

	MOV AH, CBLUE
	MOV AL, BUFFER
	ADD AH, AL
	MOV CBLUE, AH
	MOV CTEMP, AH

; CLEAR BLUE POINT
	CMP BTEMP, 0
	JNZ CLEARBLUE_OK
	LEA SI, PBLACK
	MOV BMP_X, 117
	MOV BMP_Y, 138
	CALL LOADBMP
	MOV BL, 1
	MOV BTEMP, BL
	JMP CONTI_BLUE
	JMP CONTI2

ST_END1:
	JMP ST_END

CONTI2:

CLEARBLUE_OK:	
	LEA SI, PBLACK
	MOV AX, XBLUE
	MOV BX, YBLUE
	MOV BMP_X, AX
	MOV BMP_Y, BX
	CALL LOADBMP 

CONTI_BLUE:        
	MOV AL, CBLUE
	MOV TEMP, AL

;ENTER TO WALK BLUE
	LEA SI, PWOLK
	CALL SHOWDE
	CALL WAITE

	CALL WOLK
;ADD NUMBER OF TABLE
	MOV AL, TEMP
	MOV CBLUE, AL
	LEA SI, PBLUE
	MOV AX, XTEMP
	MOV BX, YTEMP
	ADD AX, 5
	MOV XBLUE, AX
	MOV YBLUE, BX
	MOV BMP_X, AX
	MOV BMP_Y, BX
	CALL LOADBMP
	CMP CBLUE, 50
	JGE ST_END

	LEA SI, PBANK
	CALL SHOWDE
	CALL WAITE

;IF (CHECK = ESC) THEN EXIT MENU
	CMP CHECK, 1BH
	JE E02
	JMP ST_PLAY

;EXIT MENU
E02:
	CALL _EXITMENU 
	RET

ST_END:
	LEA SI, PWIN
	MOV BMP_X, 18
	MOV BMP_Y, 162
	CALL LOADBMP

;IF (CRED < 50) THEN WRITEBLUE ELSE WRITERED
	CMP CRED, 50
        JGE WRI_RED 
        CALL WRITEBLUE
	JMP CON_ST

WRI_RED:
        CALL WRITERED

CON_ST:
	CALL WAITE
	RET
START	ENDP

;========== SHOW POINT DICE =========
POINT	PROC
; CASE BUFFER
	CMP BUFFER, 1
	JE P01
	CMP BUFFER, 2
	JE P02
	CMP BUFFER, 3
	JE P03
	CMP BUFFER, 4
	JE P04
	CMP BUFFER, 5
	JE P05
; DEFAULT 6
	MOV BUFFER, 6
	LEA SI, PIC06
	CALL SHOWPOINT
	JMP ENDPOINT

P01:
	LEA SI, PIC01
	CALL SHOWPOINT
	JMP ENDPOINT

P02:
	LEA SI, PIC02
	CALL SHOWPOINT
	JMP ENDPOINT

P03:
	LEA SI, PIC03
	CALL SHOWPOINT
	JMP ENDPOINT

P04:
	LEA SI, PIC04
	CALL SHOWPOINT
	JMP ENDPOINT

P05:
	LEA SI, PIC05
	CALL SHOWPOINT

ENDPOINT:
	RET
POINT	ENDP

;========= SHOW SCORE RED AND BLUE ==========
SHOWSCORE	PROC
;DISPLAY SCORE
	LEA SI, PKANAN
	MOV BMP_X, 0
	MOV BMP_Y, 0
	CALL LOADBMP	

;READ SCORE RED AND DISPLAY
	MOV AH, 3DH		; OPEN FILE RED FOR WRITE AND READ
	LEA DX, FILERED
	MOV AL, 2
	INT 21H
	MOV HANDLE, AX
	MOV BX, HANDLE
	
	MOV AH, 3FH
	MOV CX, 512
	LEA DX, TEMPRED		; GET DATA TO READ
	INT 21H

	MOV DH,10		; ROW
	MOV DL,18		; COLUMN
	MOV AH,2		; MOVE CURSOR
	INT 10H

	MOV AH, 9H		; MSG SCORE RED
	LEA DX, MSGRED
	INT 21H

	MOV AX, TEMPRED
	CALL OUTDEC

	MOV AH, 3EH		; CLOSE FILE
	INT 21H

;READ SCORE BLUE AND DISPLAY
	MOV AH, 3DH		; OPEN FILE BLUE FOR WRITE AND READ
	LEA DX, FILEBLUE
	MOV AL, 2
	INT 21H
	MOV HANDLE, AX
	MOV BX, HANDLE
	
	MOV AH, 3FH
	MOV CX, 512
	LEA DX, TEMPBLUE	; GET DATA TO READ
	INT 21H

	MOV DH,14		; ROW
	MOV DL,18		; COLUMN
	MOV AH,2		; MOVE CURSOR
	INT 10H

	MOV AH, 9H		; MSG SCORE RED
	LEA DX, MSGBLUE
	INT 21H

	MOV AX, TEMPBLUE
	CALL OUTDEC

	MOV AH, 3EH		; CLOSE FILE
	INT 21H

	CALL	WAITE
	RET
SHOWSCORE	ENDP

;========== SET X AND Y SHOW VALUE DICE ==========
SHOWPOINT	PROC
	MOV BMP_X, 51
	MOV BMP_Y, 127
	CALL LOADBMP
	RET
SHOWPOINT	ENDP

;========== CHECK WALK, WALK EXTRA AND WALK ==========
WOLK    PROC
        CMP CTEMP, 1
        JNE W02
DOWN01:
        MOV AX, X+10
        JMP Y0
W02:
        CMP CTEMP, 2
        JNE W03
        MOV AX, X+8
        JMP Y0

W03:
        CMP CTEMP, 3
        JNE W04
        MOV AX, X+6
        JMP Y0

W04:
        CMP CTEMP, 4
        JNE W05
        MOV AX, X+4
        JMP Y0

W05:
        CMP CTEMP, 5
        JNE W06
        MOV AX, X+2
        JMP Y0

W06:
        CMP CTEMP, 6
        JNE W07
        MOV AX, X
        JMP Y0

Y0:
        MOV BX, Y
        JMP W_END

W07:
        CMP CTEMP, 7
        JNE W08
        MOV AX, X
        MOV BX, Y+2
        JMP W_END

W08:
        CMP CTEMP, 8
        JNE W09
        MOV AX, X
        JMP Y4

;EXTRA WALK UP TO 31
W09:
        CMP CTEMP, 9
        JNE W10
        MOV AL, 31
        MOV TEMP, AL
;ENTER UP TO 31
        LEA SI, PUP
        CALL SHOWDE
        CALL WAITE
        JMP UP31

W10:
        CMP CTEMP, 10
        JNE W11
DOWN10:
        MOV AX, X+4
        JMP Y4

W11:
        CMP CTEMP, 11
        JNE W12
        MOV AX, X+6
        JMP Y4

;EXTRA WALK TO RISK ODD (WALK), EVENT (NOT WALK)
W12:
        CMP CTEMP, 12
	JNE W13
;CHECK WALK RISK ODD AND EVENT
	CALL CHECKWALK
        CMP CTEMP, 12
	JNE W13
        MOV AX, X+8
        JMP Y4

;EXTRA WALK DOWN TO 1
W13:
        CMP CTEMP, 13
        JNE W14
        MOV AL, 1
        MOV TEMP, AL
;ENTER DOWN TO 1
        LEA SI, PDOWN
        CALL SHOWDE
        CALL WAITE
        JMP DOWN01

;EXTRA WALK TO RISK ODD (WOLK), EVENT (NOT WOLK)
W14:
        CMP CTEMP, 14
        JNE W15
;CHECK WALK RISK ODD AND EVENT
	CALL CHECKWALK
        CMP CTEMP, 14
        JNE W15
        MOV AX, X+12
        JMP Y4

;EXTRA WALK UP TO 21
W15:
        CMP CTEMP, 15
        JNE W16
        MOV AL, 21
        MOV TEMP, AL
;ENTER UP TO 21
        LEA SI, PUP
        CALL SHOWDE
        CALL WAITE
        JMP UP21

W16:
        CMP CTEMP, 16
        JNE W17
        MOV AX, X+16
        JMP Y4

W17:
        CMP CTEMP, 17
        JNE W18
        MOV AX, X+18
        JMP Y4

Y4:
        MOV BX, Y+4
        JMP W_END

W18:
        CMP CTEMP, 18
        JNE W19
        MOV AX, X+18
        MOV BX, Y+6
        JMP W_END

W19:
        CMP CTEMP, 19
        JNE W20
        MOV AX, X+18
        JMP Y8

W20:
        CMP CTEMP, 20
        JNE W21
DOWN20:
        MOV AX, X+16
        JMP Y8

W21:
        CMP CTEMP, 21
        JNE W22
UP21:
        MOV AX, X+14
        JMP Y8

;EXTRA WALK UP TO 44
W22:
        CMP CTEMP, 22
        JNE W23
        MOV AL, 44
        MOV TEMP, AL
;ENTER UP TO 44
        LEA SI, PUP
        CALL SHOWDE
        CALL WAITE
        JMP UP44

;EXTRA WALK DOWN TO 1
W23:
        CMP CTEMP, 23
        JNE W24
        MOV AL, 1
        MOV TEMP, AL
;ENTER DOWN TO 1
        LEA SI, PDOWN
        CALL SHOWDE
        CALL WAITE
        JMP DOWN01

W24:
        CMP CTEMP, 24
        JNE W25
        MOV AX, X+8
        JMP Y8

W25:
        CMP CTEMP, 25
        JNE W26
        MOV AX, X+6
        JMP Y8

;EXTRA WALK DOWN TO 10
W26:
        CMP CTEMP, 26
        JNE W27
        MOV AL, 10
        MOV TEMP, AL
;ENTER DOWN TO 10
        LEA SI, PDOWN
        CALL SHOWDE
        CALL WAITE
        JMP DOWN10

;EXTRA WALK UP TO 31
W27:
        CMP CTEMP, 27
        JNE W28
        MOV AL, 31
        MOV TEMP, AL
;ENTER UP TO 31
        LEA SI, PUP
        CALL SHOWDE
        CALL WAITE
        JMP UP31

W28:
        CMP CTEMP, 28
        JNE W29
        MOV AX, X

Y8:
        MOV BX, Y+8
        JMP W_END

W29:
        CMP CTEMP, 29
        JNE W30
        MOV AX, X
        MOV BX, Y+10
	JMP W_END

W30:
        CMP CTEMP, 30
        JNE W31
        MOV AX, X
        JMP Y12

W31:
        CMP CTEMP, 31
        JNE W32
UP31:
        MOV AX, X+2
        JMP Y12

;EXTRA WALK DOWN TO 10
W32:
        CMP CTEMP, 32
        JNE W33
        MOV AL, 10
        MOV TEMP, AL
;ENTER DOWN TO 10
        LEA SI, PDOWN
        CALL SHOWDE
        CALL WAITE
        JMP DOWN10

W33:
        CMP CTEMP, 33
        JNE W34
        MOV AX, X+6
        JMP Y12

W34:
        CMP CTEMP, 34
        JNE W35
        MOV AX, X+8
        JMP Y12

;EXTRA WALK DOWN TO 1
W35:
        CMP CTEMP, 35
        JNE W36
        MOV AL, 1
        MOV TEMP, AL
;ENTER DOWN TO 1
        LEA SI, PDOWN
        CALL SHOWDE
        CALL WAITE
	JMP DOWN01

;EXTRA WALK UP TO 44
W36:
        CMP CTEMP, 36
        JNE W37
        MOV AL, 44
        MOV TEMP, AL
;ENTER UP TO 44
        LEA SI, PUP
        CALL SHOWDE
        CALL WAITE
        JMP UP44

W37:
	CMP CTEMP, 37
	JNE W38
	MOV AX, X+14
	JMP Y12

;EXTRA WALK DOWN TO 20
W38:
	CMP CTEMP, 38
	JNE W39
	MOV AL, 20
	MOV TEMP, AL
;ENTER DOWN TO 20
	LEA SI, PDOWN
	CALL SHOWDE
	CALL WAITE
	JMP DOWN20

;EXTRA WALK TO RISK ODD (WALK), EVENT (NOT WALK)
W39:
	CMP CTEMP, 39
	JNE W40
;CHECK WALK RISK ODD AND EVENT
	CALL CHECKWALK
	CMP CTEMP, 39
	JNE W40
	MOV AX, X+18

Y12:
	MOV BX, Y+12
	JMP W_END

W40:
	CMP CTEMP, 40
	JNE W41
	MOV AX, X+18
	MOV BX, Y+14
	JMP W_END

W41:
	CMP CTEMP, 41
	JNE W42
	MOV AX, X+18
	JMP Y16

W42:
	CMP CTEMP, 42
	JNE W43
	MOV AX, X+16
	JMP Y16

W43:
	CMP CTEMP, 43
	JNE W44
	MOV AX, X+14
	JMP Y16

W44:
	CMP CTEMP, 44
	JNE W45
UP44:
	MOV AX, X+12
	JMP Y16

W45:
	CMP CTEMP, 45
	JNE W46
	MOV AX, X+10
	JMP Y16

W46:
	CMP CTEMP, 46
	JNE W47
	MOV AX, X+8
	JMP Y16

W47:
	CMP CTEMP, 47
	JNE W48
	MOV AX, X+6
	JMP Y16

;EXTRA WALK DOWN TO 10
W48:
	CMP CTEMP, 48
	JNE W49
	MOV AL, 10
	MOV TEMP, AL
;ENTER DOWN TO 10
	LEA SI, PDOWN
	CALL SHOWDE
	CALL WAITE
	JMP DOWN10

W49:
	CMP CTEMP, 49
	JNE W50
	MOV AX, X+2
	JMP Y16

W50:
	CMP CTEMP, 50
	MOV AX, X

Y16:
	MOV BX, Y+16
	JMP W_END

;SET X AND Y TO WALK
W_END:
	MOV XTEMP, AX
	MOV YTEMP, BX
	RET
WOLK    ENDP

;========== SHOW DETIAL IN PLAY ==========
SHOWDE	PROC
	MOV BMP_X, 18
	MOV BMP_Y, 162
	CALL LOADBMP
	RET
SHOWDE	ENDP

;========== WRITE FILE RED.BAT ==========
WRITERED	PROC
	MOV AH, 3CH		;OPEN FILE READ
	LEA DX, FILERED
	MOV CL, 0
 	INT 21H
	MOV HANDLE, AX
	MOV BX, HANDLE

	LEA DX, TEMPRED		;GET DATA TO READ
	MOV AH, 3FH
	MOV CX, 512
	INT 21H

	ADD TEMPRED, 1

	MOV AH, 40H		;WRITE FILE
	MOV CX, 512		;BYTE TO WRITE
	LEA DX, TEMPRED		;GET DATA TO WRITE
	INT 21H

	MOV AH, 3EH		;CLOSE FILE
	INT 21H
	RET
WRITERED	ENDP

;========== WRITE FILE BLUE.BAT ==========
WRITEBLUE	PROC
	MOV AH, 3CH		;OPEN FILE
	LEA DX, FILEBLUE
	MOV CL, 0
	INT 21H
	MOV HANDLE, AX
	MOV BX, HANDLE
	
	LEA DX, TEMPBLUE	;GET DATA TO READ
	MOV AH, 3FH
	MOV CX, 512
	INT 21H
	
	ADD TEMPBLUE, 1 

	MOV AH, 40H		;WRITE FILE
	MOV CX, 512		;BYTE TO WRITE
	LEA DX, TEMPBLUE	;GET DATA TO WRITE
	INT 21H

	MOV AH, 3EH		;CLOSE FILE
	INT 21H
	RET
WRITEBLUE	ENDP

;========== CHECK EXTRA WALK ODD AND EVENT ==========
CHECKWALK	PROC
	LEA SI, PDOANG
	CALL SHOWDE
	CALL WAITE
	LEA SI, PBANK
	CALL SHOWDE
	CALL WAITE
	CALL RANDOM
	CALL POINT
	MOV AL, BUFFER

;CHECK ODD
	AND AL, 1
	CMP AL, 1
	JNE _EVENT
	CALL ODD
	RET

_EVENT:
	LEA SI, PEVENT
	CALL SHOWDE
	CALL WAITE
   	RET
CHECKWALK	ENDP

;========== EXTRA WALK RISK ODD POINT DICE ==========
ODD	PROC
	MOV AL, BUFFER
	ADD CTEMP, AL
	LEA SI, PODD
	CALL SHOWDE
	CALL WAITE
	RET
ODD	ENDP

INCLUDE LOADBMP.ASM
INCLUDE OUTDEC.ASM 
	END	MAIN
