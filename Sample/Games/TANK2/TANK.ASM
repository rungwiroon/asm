.model small
.code
org 100h
begin :                 jmp start

;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
;Variables That You Can Change Them
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

         TotalEnemyTank          equ 20  ;ToTal Enemy Tanks
         EnemyPerTime            equ 5   ;Number of Tanks per Screen
                                         ;**** Maximum 5 Tanks per Screen ***
         MyTankLife              db 20    ;My Tank Life
         EnemyLifeLevel1         equ 2   ;Enemy Level 1 Life
         EnemyLifeLevel2         equ 4   ;Enemy Level 2 Life
         EnemyLifeLevel3         equ 6   ;Enemy Level 3 Life
         EnemyLifeLevel4         equ 8   ;Enemy Level 4 Life
                        
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
;-----------------------------------------------------------------------------
;Maping Table
                        DiabloTank              db '                    '
                                                db '                    '
                                                db '   bbbb  bbb  bbb   '
                                                db '   b   b  b  b   b  '
                                                db '   b   b  b  b   b  '
                                                db '   b   b  b  bbbbb  '
                                                db '   bbbb  bbb b   b  '
                                                db '                    '
                                                db '                    '
                                                db '  bbbb  b     bbbb  '
                                                db '  b   b b    b    b '
                                                db '  bbbb  b    b    b '
                                                db '  b   b b    b    b '
                                                db '  bbbb  bbbb  bbbb  '
                                                db '                    '
                                                db '                    '

                        DiabloTankT             db '                    '
                                                db '                    '
                                                db '                    '
                                                db '    cccccccccccc    '
                                                db '    cccccccccccc    '
                                                db '    cccccccccccc    '
                                                db '        cccc        '
                                                db '        cccc        '
                                                db '        cccc        '
                                                db '        cccc        '
                                                db '        cccc        '
                                                db '        cccc        '
                                                db '        cccc        '
                                                db '                    '
                                                db '                    '
                                                db '                    '

                        DiabloTankA             db '                    '
                                                db '                    '
                                                db '                    '
                                                db '     bbbbbbbbbb     '
                                                db '    bbbbbbbbbbbb    '
                                                db '    bbbb    bbbb    '
                                                db '    bbbb    bbbb    '
                                                db '    bbbb    bbbb    '
                                                db '    bbbbbbbbbbbb    '
                                                db '    bbbbbbbbbbbb    '
                                                db '    bbbb    bbbb    '
                                                db '    bbbb    bbbb    '
                                                db '    bbbb    bbbb    '
                                                db '                    '
                                                db '                    '
                                                db '                    '

                        DiabloTankN             db '                    '
                                                db '                    '
                                                db '                    '
                                                db '    wwww    wwww    '
                                                db '    wwwww   wwww    '
                                                db '    wwwwww  wwww    '
                                                db '    wwwwwww wwww    '
                                                db '    wwwwwwwwwwww    '
                                                db '    wwwwwwwwwwww    '
                                                db '    wwww wwwwwww    '
                                                db '    wwww  wwwwww    '
                                                db '    wwww   wwwww    '
                                                db '    wwww    wwww    '
                                                db '                    '
                                                db '                    '
                                                db '                    '

                        DiabloTankK             db '                    '
                                                db '                    '
                                                db '                    '
                                                db '    aaaa    aaaa    '
                                                db '    aaaa   aaaa     '
                                                db '    aaaa  aaaa      '
                                                db '    aaaa aaaa       '
                                                db '    aaaaaaaa        '
                                                db '    aaaaaaaa        '
                                                db '    aaaa aaaa       '
                                                db '    aaaa  aaaa      '
                                                db '    aaaa   aaaa     '
                                                db '    aaaa    aaaa    '
                                                db '                    '
                                                db '                    '
                                                db '                    '

                        Clear                   db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '
                                                db '                    '

                        MapTable1               db '             '
                                                db ' b   b b   b '
                                                db ' bb       bb '
                                                db ' b         b '
                                                db ' b         b '
                                                db '             '
                                                db '    ccccc    '
                                                db '      b      '
                                                db 'bb    b    bb'
                                                db '             '
                                                db ' cc  www  cc '
                                                db '             '
                                                db 'bbb   b   bbb'
                                                db '     bbb     '
                                                db '     bab     '


;-----------------------------------------------------------------------------
;------------------------------------------------------------------------------
;Pictures

Block                   db 66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66
                        db 66,06,06,06,06,06,06,06,06,06,06,06,06,06,06,66
                        db 66,06,06,06,06,06,06,06,06,06,06,06,06,06,06,66
                        db 66,06,06,06,06,06,06,06,06,06,06,06,06,06,06,66
                        db 66,06,06,06,06,06,06,06,06,06,06,06,06,06,06,66
                        db 66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66
                        db 66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66
                        db 06,06,06,06,06,06,06,66,66,06,06,06,06,06,06,06
                        db 06,06,06,06,06,06,06,66,66,06,06,06,06,06,06,06
                        db 06,06,06,06,06,06,06,66,66,06,06,06,06,06,06,06
                        db 06,06,06,06,06,06,06,66,66,06,06,06,06,06,06,06
                        db 66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66

Bomb                    db 39,39,00,32,32,32,00,39,39,00,32,32,32,00,39,39
                        db 39,14,39,00,32,32,32,39,14,39,32,32,39,39,14,39
                        db 00,39,14,39,00,00,39,14,14,39,00,39,14,14,39,00
                        db 32,39,14,14,39,39,14,14,14,14,39,14,14,39,39,00
                        db 32,00,39,14,14,14,14,14,14,14,14,14,39,00,32,39
                        db 32,32,00,39,14,14,14,14,14,14,14,14,39,32,32,32
                        db 32,00,39,14,14,14,14,14,14,14,14,14,39,00,32,32
                        db 32,39,14,14,14,14,14,14,14,14,14,14,39,39,00,32
                        db 00,39,14,39,39,14,14,39,39,39,14,14,14,14,39,32
                        db 39,39,39,00,39,14,39,39,00,39,39,14,14,14,39,00
                        db 39,00,32,32,00,39,39,00,32,32,00,39,39,14,39,00
                        db 00,32,32,32,00,39,39,00,32,32,32,32,00,39,39,39

MyTankUp                db 00,00,00,00,00,39,00,00,00,00,39,00,00,00,00,00
                        db 00,00,00,39,39,39,46,00,00,46,39,39,39,00,00,00
                        db 00,39,39,32,32,32,46,00,00,46,32,32,32,39,39,00
                        db 39,39,14,14,14,32,46,00,00,46,32,14,14,14,39,39
                        db 00,00,00,00,14,32,46,00,00,46,32,14,00,00,00,00
                        db 00,00,14,14,32,32,46,46,46,46,32,32,14,14,00,00
                        db 14,14,14,32,32,32,32,32,32,32,32,32,32,14,14,14
                        db 00,00,00,14,32,32,32,14,14,32,32,32,14,00,00,00
                        db 00,14,14,32,32,32,14,39,39,14,32,32,32,14,14,00
                        db 14,32,32,32,14,32,14,39,39,14,32,14,32,32,32,14
                        db 14,32,32,14,00,32,32,14,14,32,32,00,14,32,32,14
                        db 14,14,14,00,00,00,32,32,32,32,00,00,00,14,14,14

MyTankDown              db 14,14,14,00,00,00,32,32,32,32,00,00,00,14,14,14
                        db 14,32,32,14,00,32,32,14,14,32,32,00,14,32,32,14
                        db 14,32,32,32,14,32,14,39,39,14,32,14,32,32,32,14
                        db 00,14,14,32,32,32,14,39,39,14,32,32,32,14,14,00
                        db 00,00,00,14,32,32,32,14,14,32,32,32,14,00,00,00
                        db 14,14,14,32,32,32,32,32,32,32,32,32,32,14,14,14
                        db 00,00,14,14,32,32,46,46,46,46,32,32,14,14,00,00
                        db 00,00,00,00,14,32,46,00,00,46,32,14,00,00,00,00
                        db 39,39,14,14,14,32,46,00,00,46,32,14,14,14,39,39
                        db 00,39,39,32,32,32,46,00,00,46,32,32,32,39,39,00
                        db 00,00,00,39,39,39,46,00,00,46,39,39,39,00,00,00
                        db 00,00,00,00,00,39,00,00,00,00,39,00,00,00,00,00

BossUp                  db 00,39,39,39,00,00,00,00,00,00,00,00,39,39,39,00 
                        db 39,39,00,39,00,00,00,00,00,00,00,00,39,00,39,39 
                        db 39,00,00,00,00,00,00,00,00,00,00,00,00,00,00,39 
                        db 39,39,00,00,00,00,00,00,00,00,00,00,00,00,39,39 
                        db 00,39,39,00,00,00,00,00,00,00,00,00,00,39,39,00 
                        db 00,39,39,00,00,14,14,14,14,14,14,00,00,39,39,00 
                        db 00,39,39,14,14,39,39,39,39,39,39,14,14,39,39,00 
                        db 39,39,39,39,39,46,32,14,14,32,46,39,39,39,39,39 
                        db 39,00,00,00,24,46,46,14,14,46,24,00,00,00,39,39 
                        db 39,39,39,00,00,46,46,14,14,46,46,00,00,39,39,39 
                        db 00,39,39,39,39,46,46,46,46,46,46,39,39,39,39,00 
                        db 00,00,00,39,39,39,39,39,39,39,39,39,39,00,00,00

BossDown                db 00,00,00,39,39,39,39,39,39,39,39,39,39,00,00,00
                        db 00,39,39,39,39,46,46,46,46,46,46,39,39,39,39,00
                        db 39,39,39,00,00,46,46,14,14,46,46,00,00,39,39,39
                        db 39,00,00,00,24,46,46,14,14,46,24,00,00,00,39,39
                        db 39,39,39,39,39,46,32,14,14,32,46,39,39,39,39,39
                        db 00,39,39,14,14,39,39,39,39,39,39,14,14,39,39,00
                        db 00,39,39,00,00,14,14,14,14,14,14,00,00,39,39,00
                        db 00,39,39,00,00,00,00,00,00,00,00,00,00,39,39,00 
                        db 39,39,00,00,00,00,00,00,00,00,00,00,00,00,39,39
                        db 39,00,00,00,00,00,00,00,00,00,00,00,00,00,00,39 
                        db 39,39,00,39,00,00,00,00,00,00,00,00,39,00,39,39 
                        db 00,39,39,39,00,00,00,00,00,00,00,00,39,39,39,00 

BossRight               db 00,00,39,39,39,39,00,00,00,00,00,39,39,39,39,39
                        db 00,39,39,39,39,00,39,39,00,39,39,39,39,00,00,39
                        db 00,39,39,39,00,00,39,39,39,39,39,39,00,00,39,39
                        db 39,39,46,39,00,24,39,39,14,00,00,00,00,00,00,00
                        db 39,39,46,46,46,46,32,39,39,14,00,00,00,00,00,00
                        db 39,39,46,14,14,14,14,39,39,14,00,00,00,00,00,00
                        db 39,39,46,14,14,14,14,39,39,14,00,00,00,00,00,00
                        db 39,39,46,46,46,46,32,39,39,14,00,00,00,00,00,00
                        db 39,39,46,39,00,24,39,39,14,00,00,00,00,00,00,00
                        db 00,39,39,39,00,00,39,39,39,39,39,39,00,00,39,39
                        db 00,39,39,39,39,00,39,39,00,39,39,39,39,00,00,39
                        db 00,00,39,39,39,39,00,00,00,00,00,39,39,39,39,39

BossLeft                db 39,39,39,39,39,00,00,00,00,00,39,39,39,39,00,00
                        db 39,00,00,39,39,39,39,00,39,39,00,39,39,39,39,00
                        db 39,39,00,00,39,39,39,39,39,39,00,00,39,39,39,00
                        db 00,00,00,00,00,00,00,14,39,39,24,00,39,46,39,39
                        db 00,00,00,00,00,00,14,39,39,32,46,46,46,46,39,39
                        db 00,00,00,00,00,00,14,39,39,14,14,14,14,46,39,39
                        db 00,00,00,00,00,00,14,39,39,14,14,14,14,46,39,39
                        db 00,00,00,00,00,00,14,39,39,32,46,46,46,46,39,39
                        db 00,00,00,00,00,00,00,14,39,39,24,00,39,46,39,39
                        db 39,39,00,00,39,39,39,39,39,39,00,00,39,39,39,00
                        db 39,00,00,39,39,39,39,00,39,39,00,39,39,39,39,00
                        db 39,39,39,39,39,00,00,00,00,00,39,39,39,39,00,00


MyTankRight             db 14,14,14,00,00,00,14,14,00,00,00,14,39,00,00,00
                        db 14,32,32,14,00,00,14,32,14,00,00,14,39,00,00,00
                        db 14,32,32,32,14,14,14,32,32,14,00,14,32,39,00,00
                        db 00,14,32,32,32,32,32,32,32,32,14,14,32,39,39,00
                        db 00,32,32,14,14,32,32,32,32,46,46,46,46,46,39,39
                        db 32,32,14,39,39,14,32,32,32,46,00,00,00,00,00,00
                        db 32,32,14,39,39,14,32,32,32,46,00,00,00,00,00,00
                        db 00,32,32,14,14,32,32,32,32,46,46,46,46,46,39,39
                        db 00,14,32,32,32,32,32,32,32,32,14,14,32,39,39,00
                        db 14,32,32,32,14,14,14,32,32,14,00,14,32,39,00,00
                        db 14,32,32,14,00,00,14,32,14,00,00,14,39,00,00,00
                        db 14,14,14,00,00,00,14,14,00,00,00,14,39,00,00,00

MyTankLeft              db 00,00,00,39,14,00,00,00,14,14,00,00,00,14,14,14
                        db 00,00,00,39,14,00,00,14,32,14,00,00,14,32,32,14
                        db 00,00,39,32,14,00,14,32,32,14,14,14,32,32,32,14
                        db 00,39,39,32,14,14,32,32,32,32,32,32,32,32,14,00
                        db 39,39,46,46,46,46,46,32,32,32,32,14,14,32,32,00
                        db 00,00,00,00,00,00,46,32,32,32,14,39,39,14,32,32
                        db 00,00,00,00,00,00,46,32,32,32,14,39,39,14,32,32
                        db 39,39,46,46,46,46,46,32,32,32,32,14,14,32,32,00
                        db 00,39,39,32,14,14,32,32,32,32,32,32,32,32,14,00
                        db 00,00,39,32,14,00,14,32,32,14,14,14,32,32,32,14
                        db 00,00,00,39,14,00,00,14,32,14,00,00,14,32,32,14
                        db 00,00,00,39,14,00,00,00,14,14,00,00,00,14,14,14

Concrete                db 20,24,24,24,24,24,24,20,20,24,24,24,24,24,24,20
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 20,24,24,24,24,24,24,20,20,24,24,24,24,24,24,20
                        db 20,24,24,24,24,24,24,20,20,24,24,24,24,24,24,20
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 24,28,28,28,28,28,28,24,24,28,28,28,28,28,28,24
                        db 20,24,24,24,24,24,24,20,20,24,24,24,24,24,24,20

Water                   db 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
                        db 32,32,14,32,32,32,32,32,32,32,14,32,32,32,32,32
                        db 32,14,32,14,32,32,32,32,32,14,32,14,32,32,32,32
                        db 32,32,32,32,14,32,14,32,32,32,32,32,14,32,14,32
                        db 32,32,32,32,32,14,32,32,32,32,32,32,32,14,32,32
                        db 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
                        db 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
                        db 32,32,14,32,32,32,32,32,32,32,14,32,32,32,32,32
                        db 32,14,32,14,32,32,32,32,32,14,32,14,32,32,32,32
                        db 32,32,32,32,14,32,14,32,32,32,32,32,14,32,14,32
                        db 32,32,32,32,32,14,32,32,32,32,32,32,32,14,32,32
                        db 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32


Angle                   db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,14,41,41,00,41,14,14,14,14,41,00,41,41,14,00
                        db 00,14,14,14,41,41,14,14,14,14,41,41,14,14,14,00
                        db 00,14,14,14,14,41,14,14,14,14,41,14,14,14,14,00
                        db 00,41,14,14,14,41,14,14,41,14,41,14,14,14,41,00
                        db 00,00,41,41,41,41,14,41,41,14,41,41,41,41,00,00
                        db 00,00,00,00,00,41,41,14,14,41,41,00,00,00,00,00
                        db 00,00,00,00,00,00,41,41,41,41,00,00,00,00,00,00
                        db 00,00,00,00,00,00,41,14,14,41,00,00,00,00,00,00
                        db 00,00,00,00,00,41,41,14,14,41,41,00,00,00,00,00
                        db 00,00,00,00,41,41,14,14,14,14,41,41,00,00,00,00
                        db 00,00,00,00,41,41,41,41,41,41,41,41,00,00,00,00

Space                   db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
                        db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

MyMissile               db 00,00,00,00,39,39,39,39,39,39,39,39,00,00,00,00
                        db 00,00,00,39,40,40,40,40,40,40,40,40,39,00,00,00
                        db 00,00,39,40,41,41,41,41,41,41,41,41,40,39,00,00
                        db 00,39,40,41,42,42,42,42,42,42,42,42,41,40,39,00
                        db 39,40,41,42,43,43,43,43,43,43,43,43,42,41,40,39
                        db 39,40,41,42,43,66,66,66,66,66,66,43,42,41,40,39
                        db 39,40,41,42,43,66,66,66,66,66,66,43,42,41,40,39
                        db 39,40,41,42,43,43,43,43,43,43,43,43,42,41,40,39
                        db 00,39,40,41,42,42,42,42,42,42,42,42,41,40,39,00
                        db 00,00,39,40,41,41,41,41,41,41,41,41,40,39,00,00
                        db 00,00,00,39,40,40,40,40,40,40,40,40,39,00,00,00
                        db 00,00,00,00,39,39,39,39,39,39,39,39,00,00,00,00

EnemyMissile            db 00,00,00,00,54,54,54,54,54,54,54,54,00,00,00,00
                        db 00,00,00,54,53,53,53,53,53,53,53,53,54,00,00,00    
                        db 00,00,54,53,52,52,52,52,52,52,52,52,53,54,00,00
                        db 00,54,53,52,51,51,51,51,51,51,51,51,52,53,54,00
                        db 54,53,52,51,50,50,50,50,50,50,50,50,51,52,53,54
                        db 54,53,52,51,50,66,66,66,66,66,66,50,51,52,53,54
                        db 54,53,52,51,50,66,66,66,66,66,66,50,51,52,53,54
                        db 54,53,52,51,50,50,50,50,50,50,50,50,51,52,53,54
                        db 00,54,53,52,51,51,51,51,51,51,51,51,52,53,54,00
                        db 00,00,54,53,52,52,52,52,52,52,52,52,53,54,00,00
                        db 00,00,00,54,53,53,53,53,53,53,53,53,54,00,00,00
                        db 00,00,00,00,54,54,54,54,54,54,54,54,00,00,00,00


EnemyTankLevel1Up       db 00,00,24,24,00,00,41,41,41,41,00,00,24,24,00,00
                        db 00,24,54,54,24,00,00,54,54,00,00,24,54,54,24,00
                        db 24,14,14,14,24,00,00,54,54,00,00,24,14,14,14,24
                        db 24,54,54,54,24,00,00,54,54,00,00,24,54,54,54,24
                        db 24,54,54,54,24,00,00,24,24,00,00,24,54,54,54,24
                        db 24,54,54,54,24,24,24,54,54,24,24,24,54,54,54,24
                        db 24,14,14,14,24,54,54,54,54,54,54,24,14,14,14,24
                        db 24,54,54,54,24,54,54,14,14,54,54,24,54,54,54,24
                        db 24,54,54,54,24,54,14,39,39,14,54,24,54,54,54,24
                        db 24,14,14,14,24,54,14,39,39,14,54,24,14,14,14,24
                        db 24,54,54,24,00,24,54,14,14,54,24,00,24,54,54,24
                        db 00,24,24,00,00,00,24,24,24,24,00,00,00,24,24,00

EnemyTankLevel1down     db 00,24,24,00,00,00,24,24,24,24,00,00,00,24,24,00 
                        db 24,54,54,24,00,24,54,14,14,54,24,00,24,54,54,24 
                        db 24,14,14,14,24,54,14,39,39,14,54,24,14,14,14,24 
                        db 24,54,54,54,24,54,14,39,39,14,54,24,54,54,54,24 
                        db 24,54,54,54,24,54,54,14,14,54,54,24,54,54,54,24 
                        db 24,14,14,14,24,54,54,54,54,54,54,24,14,14,14,24 
                        db 24,54,54,54,24,24,24,54,54,24,24,24,54,54,54,24 
                        db 24,54,54,54,24,00,00,24,24,00,00,24,24,54,54,24 
                        db 24,54,54,54,24,00,00,54,54,00,00,24,54,54,54,24 
                        db 24,14,14,14,24,00,00,54,54,00,00,24,14,14,14,24 
                        db 00,24,54,54,24,00,00,54,54,00,00,24,54,54,24,00 
                        db 00,00,24,24,00,00,41,41,41,41,00,00,24,24,00,00 

EnemyTankLevel1Right    db 00,24,24,24,24,24,24,24,24,24,24,24,24,24,00,00 
                        db 24,54,54,14,54,54,54,14,54,54,54,14,54,54,24,00 
                        db 24,54,54,14,54,54,54,14,54,54,54,14,54,54,54,24                         
                        db 00,24,24,24,24,24,24,24,24,24,24,24,24,24,24,00                                                 
                        db 00,00,24,14,14,14,54,54,24,00,00,00,00,00,00,41                      
                        db 00,24,14,39,39,39,14,54,24,54,54,54,54,54,54,41                     
                        db 00,24,14,39,39,39,14,54,24,54,54,54,54,54,54,41                         
                        db 00,00,24,14,14,14,54,54,24,00,00,00,00,00,00,41                         
                        db 00,24,24,24,24,24,24,24,24,24,24,24,24,24,24,00                       
                        db 24,54,54,14,54,54,54,14,54,54,54,14,54,54,54,24                         
                        db 24,54,54,14,54,54,54,14,54,54,54,14,54,54,24,00                        
                        db 00,24,24,24,24,24,24,24,24,24,24,24,24,24,00,00                       

EnemyTankLevel1Left     db 00,00,24,24,24,24,24,24,24,24,24,24,24,24,24,00
                        db 00,24,54,14,54,54,54,14,54,54,54,14,54,54,24,24                        
                        db 24,54,54,14,54,54,54,14,54,54,54,14,54,54,54,24                        
                        db 00,24,24,24,24,24,24,24,24,24,24,24,24,24,24,00                         
                        db 41,00,00,00,00,00,00,00,24,24,14,14,14,54,24,00                         
                        db 41,54,54,54,54,54,14,24,54,14,39,39,39,14,24,41                         
                        db 41,54,54,54,54,54,14,24,54,14,39,39,39,14,24,41                         
                        db 41,00,00,00,00,00,00,00,24,24,14,14,14,54,24,00                         
                        db 00,24,24,24,24,24,24,24,24,24,24,24,24,24,24,00                        
                        db 24,54,54,14,54,54,54,14,54,54,54,14,54,54,54,24                         
                        db 00,24,54,14,54,54,54,14,54,54,54,14,54,54,24,24                         
                        db 00,00,24,24,24,24,24,24,24,24,24,24,24,24,24,00                         

EnemyTankLevel2Up       db 00,00,06,00,00,00,14,14,14,14,00,00,00,06,00,00
                        db 00,06,08,06,00,00,30,08,08,30,00,00,06,08,06,00                        
                        db 06,08,08,08,06,00,00,08,08,00,00,06,08,08,08,06                        
                        db 06,30,30,30,06,00,00,08,08,00,00,06,30,30,30,06                    
                        db 06,08,08,08,06,00,06,06,06,06,00,06,08,08,08,06                        
                        db 06,08,08,08,06,06,08,08,08,08,06,06,08,08,08,06                       
                        db 06,30,30,30,06,08,08,08,08,08,08,06,30,30,30,06                        
                        db 06,08,08,08,06,08,08,32,32,08,08,06,08,08,08,06                        
                        db 06,08,08,08,06,08,32,30,30,32,08,06,08,08,08,06                        
                        db 06,30,30,30,06,08,32,30,30,32,08,06,30,30,30,06                       
                        db 00,06,08,06,00,06,08,32,32,08,06,00,06,08,06,00                        
                        db 00,00,06,00,00,00,06,06,06,06,00,00,00,06,00,00                        

EnemyTankLevel2Down     db 00,00,06,00,00,00,06,06,06,06,00,00,00,06,00,00
                        db 00,06,08,06,00,06,08,32,32,08,06,00,06,08,06,00                        
                        db 06,30,30,30,06,08,32,30,30,32,08,06,30,30,30,06                        
                        db 06,08,08,08,06,08,32,30,30,32,08,06,08,08,08,06                        
                        db 06,08,08,08,06,08,08,32,32,08,08,06,08,08,08,06                        
                        db 06,30,30,30,06,08,08,08,08,08,08,06,30,30,30,06                        
                        db 06,08,08,08,06,06,08,08,08,08,06,06,08,08,08,06                        
                        db 06,08,08,08,06,00,06,06,06,06,00,06,08,08,08,06                       
                        db 06,30,30,30,06,00,00,08,08,00,00,06,30,30,30,06                        
                        db 06,08,08,08,06,00,00,08,08,00,00,06,08,08,08,06                        
                        db 00,06,08,06,00,00,30,08,08,30,00,00,06,08,06,00                        
                        db 00,00,06,00,00,00,30,30,30,30,00,00,00,06,00,00                        

EnemyTankLevel2Right    db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00
                        db 00,06,08,30,08,08,30,08,08,30,08,08,30,08,06,00                        
                        db 06,08,08,30,08,08,30,08,08,30,08,08,30,08,08,06                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 00,06,08,08,32,32,32,08,08,06,00,00,00,00,00,30                        
                        db 06,08,08,32,30,30,30,32,08,08,06,08,08,08,08,30                        
                        db 06,08,08,32,30,30,30,32,08,08,06,08,08,08,08,30                        
                        db 00,06,08,08,32,32,32,08,08,06,00,00,00,00,00,30                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 06,08,08,30,08,08,30,08,08,30,08,08,30,08,08,06                        
                        db 00,06,08,30,08,08,30,08,08,30,08,08,30,08,06,00                        
                        db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00                        

EnemyTankLevel2Left     db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00
                        db 00,06,08,30,08,08,30,08,08,30,08,08,30,08,06,00                        
                        db 06,08,08,30,08,08,30,08,08,30,08,08,30,08,08,06                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 30,00,00,00,00,00,06,08,08,32,32,32,08,08,06,00                        
                        db 30,08,08,08,08,06,08,08,32,30,30,30,32,08,08,06                        
                        db 30,08,08,08,08,06,08,08,32,30,30,30,32,08,08,06                        
                        db 30,00,00,00,00,00,06,08,08,32,32,32,08,08,06,00                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 06,08,08,30,08,08,30,08,08,30,08,08,30,08,08,06                        
                        db 00,06,08,30,08,08,30,08,08,30,08,08,30,08,06,00                        
                        db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00                        

EnemyTankLevel3Up       db 00,00,06,00,00,00,14,14,14,14,00,00,00,06,00,00
                        db 00,06,39,06,00,00,14,39,39,14,00,00,06,39,06,00                        
                        db 06,39,39,39,06,00,00,39,39,00,00,06,39,39,39,06                        
                        db 06,14,14,14,06,00,00,39,39,00,00,06,14,14,14,06                        
                        db 06,39,39,39,06,00,06,06,06,06,00,06,39,39,39,06                        
                        db 06,39,39,39,06,06,39,39,39,39,06,06,39,39,39,06                        
                        db 06,14,14,14,06,39,39,39,39,39,39,06,14,14,14,06                        
                        db 06,39,39,39,06,39,39,32,32,39,39,06,39,39,39,06                        
                        db 06,39,39,39,06,39,32,14,14,32,39,06,39,39,39,06                        
                        db 06,14,14,14,06,39,32,14,14,32,39,06,14,14,14,06                        
                        db 00,06,39,06,00,06,39,32,32,39,06,00,06,39,06,00                        
                        db 00,00,06,00,00,00,06,06,06,06,00,00,00,06,00,00                        

EnemyTankLevel3Down     db 00,00,06,00,00,00,06,06,06,06,00,00,00,06,00,00
                        db 00,06,39,06,00,06,39,32,32,39,06,00,06,39,06,00                        
                        db 06,14,14,14,06,39,32,14,14,32,39,06,14,14,14,06                        
                        db 06,39,39,39,06,39,32,14,14,32,39,06,39,39,39,06                        
                        db 06,39,39,39,06,39,39,32,32,39,39,06,39,39,39,06                        
                        db 06,14,14,14,06,39,39,39,39,39,39,06,14,14,14,06                        
                        db 06,39,39,39,06,06,39,39,39,39,06,06,39,39,39,06                        
                        db 06,39,39,39,06,00,06,06,06,06,00,06,39,39,39,06                        
                        db 06,14,14,14,06,00,00,39,39,00,00,06,14,14,14,06                        
                        db 06,39,39,39,06,00,00,39,39,00,00,06,39,39,39,06                       
                        db 00,06,39,06,00,00,14,39,39,14,00,00,06,39,06,00                        
                        db 00,00,06,00,00,00,14,14,14,14,00,00,00,06,00,00                        

EnemyTankLevel3Right    db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00
                        db 00,06,39,14,39,39,14,39,39,14,39,39,14,39,06,00                        
                        db 06,39,39,14,39,39,14,39,39,14,39,39,14,39,39,06                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 00,06,39,39,32,32,32,39,39,06,00,00,00,00,00,14                        
                        db 06,39,39,32,14,14,14,32,39,39,06,39,39,39,39,14                        
                        db 06,39,39,32,14,14,14,32,39,39,06,39,39,39,39,14                        
                        db 00,06,39,39,32,32,32,39,39,06,00,00,00,00,00,14                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 06,39,39,14,39,39,14,39,39,14,39,39,14,39,39,06                        
                        db 00,06,39,14,39,39,14,39,39,14,39,39,14,39,06,00                        
                        db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00                        

EnemyTankLevel3Left     db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00
                        db 00,06,39,14,39,39,14,39,39,14,39,39,14,39,06,00                        
                        db 06,39,39,14,39,39,14,39,39,14,39,39,14,39,39,06                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 14,00,00,00,00,00,06,39,39,32,32,32,39,39,06,00                        
                        db 14,39,39,39,39,06,39,39,32,14,14,14,32,39,39,06                        
                        db 14,39,39,39,39,06,39,39,32,14,14,14,32,39,39,06                        
                        db 14,00,00,00,00,00,06,39,39,32,32,32,39,39,06,00                        
                        db 00,06,06,06,06,06,06,06,06,06,06,06,06,06,06,00                        
                        db 06,39,39,14,39,39,14,39,39,14,39,39,14,39,39,06                        
                        db 00,06,39,14,39,39,14,39,39,14,39,39,14,39,06,00                        
                        db 00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00                        


 Freee1                 db 1 dup(0)
;-------------------------------------------------------------------------------
;Variables  < PLease Not Change Them >

                        MyTankX                 db 0
                        MyTankY                 db 0
                        MyTankPosition          dw 0
                        GameOver                db 0
                        ObjectFoundPosition     dw 0
                        LifeChange              db 0
                        EnemyMissileX           db 0
                        EnemyMissileY           db 0
                        EnemyTankX              db 0
                        EnemyTankY              db 0
                        XPosition               db 0
                        YPosition               db 0
                        EnemyX                  db 0
                        EnemyY                  db 0
                        FireX                   db 0
                        FireY                   db 0
                        RealPosition            dw 0
                        Seed                    dw 0
                        RandomNumber1           db 0
                        OldInt9Address          dd 0
                        StoreAX                 dw 0
                        Result                  db 0
                        LeftToggle              db 0
                        RightToggle             db 0
                        UpToggle                db 0
                        DownToggle              db 0
                        KeyPress                db 0
                        SoundToggle             db 0
                        Sound                   db 80h
                        FireToggle              db 0
                        ExitToggle              db 0
                        Border1Color            db 24
                        RowCounter              db 180
                        ColumnCounter           dw 208
                        RowCounter2             db 180
                        ColumnCounter2          dw 82
                        DiabloCount             dw 0
                        PauseCounter            db 0
                        OldDI                   dw 0
                        ObjectCount             db 0
                        ObjectRowCount          db 0
                        ObjectColumnCount       db 0
                        TimeCounter             dw 0
                        Object                  db 0
                        UseVideoMem             equ 304
                        UseVideoBuffer          equ 192
                        VideoMode               dw 0
                        MyTankPathOk            db 0
                        ObjectPathOk            db 0
                        MyTankNowUp             equ 0
                        MyTankNowDown           equ 1
                        MyTankNowRight          equ 2
                        MyTankNOwLeft           equ 3
                        MyTankNow               db 0
                        HadObject               db 0
                        TestObject              db 0
                        NoObject                db 0
                        ObjectFound             db 0
                        SpecialFire             db 0
                        MyMissileX              db 0
                        MyMissileY              db 170
                        MyMissileDead           db 1
                        MyMissileUp             db 0
                        MyMissileDown           db 0
                        MyMissileLeft           db 0
                        MyMissileRight          db 0
                        MissileReachWall        db 0
                        MyMissilePathOk         db 0
                        RandomNumber            db 0
                        FoundObjectX            db 0
                        FoundObjectY            db 0
                        Position                db 0
                        EnemyStartPosition      db 0
                        Left                    equ 1
                        Middle                  equ 2
                        Right                   equ 3
                        Up                      equ 4
                        Down                    equ 5                                                           
                        EnemyTankMade           db 0
                        EnemyTaknkPower         db 0
                        EnemyTankNumber         db 0
                        EnemyTankNumberNow      db 0
                        EnemyTankFull           db 0
                        EnemyTank1Life          db 0
                        EnemyTank2Life          db 0
                        Enemytank3Life          db 0
                        EnemyTank4Life          db 0
                        EnemyTank5Life          db 0
                        EnemyLife               db 0
                        EnemyTankPathOk         db 0
                        EnemyMissile1Dead       db 1
                        EnemyMissile2Dead       db 1
                        EnemyMissile3Dead       db 1
                        EnemyMissile4Dead       db 1
                        EnemyMissile5Dead       db 1
                        EnemyMissile1X          db 0
                        EnemyMissile2X          db 0
                        EnemyMissile3X          db 0
                        EnemyMissile4X          db 0
                        EnemyMissile5X          db 0
                        EnemyMissile1Y          db 0
                        EnemyMissile2Y          db 0
                        EnemyMissile3Y          db 0
                        EnemyMissile4Y          db 0
                        EnemyMissile5Y          db 0
                        EnemyMissile1Right      db 0
                        EnemyMissile1Left       db 0
                        EnemyMissile1Up         db 0
                        EnemyMissile1Down       db 0
                        EnemyMissile2Right      db 0
                        EnemyMissile2Left       db 0
                        EnemyMissile2Up         db 0
                        EnemyMissile2Down       db 0
                        EnemyMissile3Right      db 0
                        EnemyMissile3Left       db 0
                        EnemyMissile3Up         db 0
                        EnemyMissile3Down       db 0
                        EnemyMissile4Right      db 0
                        EnemyMissile4Left       db 0
                        EnemyMissile4Up         db 0
                        EnemyMissile4Down       db 0
                        EnemyMissile5Right      db 0
                        EnemyMissile5Left       db 0
                        EnemyMissile5Up         db 0
                        EnemyMissile5Down       db 0
                        EnemyTank1X             db 0
                        EnemyTank1Y             db 0
                        EnemyTank2X             db 0
                        EnemyTank2Y             db 0
                        EnemyTank3X             db 0
                        EnemyTank3Y             db 0
                        EnemyTank4X             db 0
                        EnemyTank4Y             db 0
                        EnemyTank5X             db 0
                        EnemyTank5Y             db 0
                        EnemyTankUp             dw 0
                        EnemyTankDown           dw 0
                        EnemyTankLeft           dw 0
                        EnemyTankRight          dw 0
                        EnemyTank1Right         dw 0
                        EnemyTank1Left          dw 0
                        EnemyTank1Up            dw 0
                        EnemyTank1Down          dw 0
                        EnemyTank2Right         dw 0
                        EnemyTank2Left          dw 0
                        EnemyTank2Up            dw 0
                        EnemyTank2Down          dw 0
                        EnemyTank3Right         dw 0
                        EnemyTank3Left          dw 0
                        EnemyTank3Up            dw 0
                        EnemyTank3Down          dw 0
                        EnemyTank4Right         dw 0
                        EnemyTank4Left          dw 0
                        EnemyTank4Up            dw 0
                        EnemyTank4Down          dw 0
                        EnemyTank5Right         dw 0
                        EnemyTank5Left          dw 0
                        EnemyTank5Up            dw 0
                        EnemyTank5Down          dw 0
                        DirectCount             equ 5
                        EnemyTank1OldDirect     db 0
                        EnemyTank2OldDirect     db 0
                        EnemyTank3OldDirect     db 0
                        EnemyTank4OldDirect     db 0
                        EnemyTank5OldDirect     db 0
                        EnemyTank1Count         db 0
                        EnemyTank2Count         db 0
                        EnemyTank3Count         db 0
                        EnemyTank4Count         db 0
                        EnemyTank5Count         db 0
                        Enemy1Now               db 0
                        Enemy2Now               db 0
                        Enemy3Now               db 0
                        Enemy4Now               db 0
                        Enemy5Now               db 0
                        EnemyTankLevel          db 0
                        Level1                  equ 1
                        Level2                  equ 2
                        Level3                  equ 3
                        Level4                  equ 4
                        EnemyTank1Dead          db 1
                        EnemyTank2Dead          db 1
                        EnemyTank3Dead          db 1
                        EnemyTank4Dead          db 1
                        EnemyTank5Dead          db 1
                        EnemyTank1Level         db 0
                        EnemyTank2Level         db 0
                        EnemyTank3Level         db 0
                        EnemyTank4Level         db 0
                        EnemyTank5Level         db 0
                        Enemy1ScoreChange       db 0
                        Enemy2ScoreChange       db 0
                        Enemy3ScoreChange       db 0
                        Enemy4ScoreChange       db 0
                        Enemy5ScoreChange       db 0
                        ScoreNow                dw 0
                        N1                      db '1$'
                        N2                      db '2$'
                        N3                      db '3$'
                        N4                      db '4$'
                        N5                      db '5$'
                        N6                      db '6$'
                        N7                      db '7$'
                        N8                      db '8$'
                        N9                      db '9$'
                        N0                      db '0$'
                        PassStage1              db 0
                        DirectoryNow            db 64 dup(0)
                        FileName                db 'score.dat',0
                        FileHandle              dw 0
                        ScoreBuffer             db 12 dup('$')
                        HighScore               dw 0
                        YourName                db 8 dup('$')

;------------------------------------------------------------------------------
;Game Messages
                        MapErrorMsg             db 'Found An Error On The Map.','$'
                        QuitMsg                 db '                      Thanks For Playing DiabloTank.                          '
                                                db '     By Popkm <s8014464> and Art <s8014419> Computer Enginner KMITL Year 2.','$'
                        EnemyLifeMsg            db 'EnemyLife$'
                        Enemy1LifeMsg           db 'TaNk1$'
                        Enemy2LifeMsg           db 'TaNk2$'
                        Enemy3LifeMsg           db 'TaNk3$'
                        Enemy4LifeMsg           db 'TaNk4$'
                        Enemy5LifeMsg           db 'TaNk5$'
                        ScoreMsg                db 'Scores$'
                        HighScoreMsg            db 'HighScore$'
                        FileErrorMsg            db 'There Have an Error Occur Durring Make High Score Save File.$'
;                       DriveNotFound           db 'Please Run Diablo Tank Game On Your Hardisk Drive C ONLY .$'
                        Stage1                  db 'Stage 1 $'
                        NameMsg                 db 'Your Score is HIGHEST . Please Enter Your Name <0-7 Charecters>: $'
                        YourScoreMsg            db 'Your Score : $'
                        AccessDenie             db 'Access Denie to Write High Score Save File.$'
                        HandleError             db 'File Handle Error$'
;=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
; Start Main Program
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

start                   proc

GetDirectoryNow:        ;mov ah,19h
                        ;int 21h
                        ;cmp al,2
                        ;jnz NotRunOnDriveC
                        mov ah,47H
                        lea si,DirectoryNow
                        mov dl,0
                        int 21h
                        jnc FoundDirNow
                        
;NotRunOnDriveC:                                                        
;                        lea dx,DriveNotFound
;                        mov ah,9
;                        int 21h
;                        int 20h

FoundDirNow:
                        mov ah,3dh
                        mov al,2
                        lea dx,FileName
                        int 21h
                        jnc AlreadyHaveFile

NotFoundFileMade:       mov ah,3ch
                        lea dx,FileName
                        mov cx,0
                        int 21h
                        jc FileError
                        mov FileHandle,ax
                        jmp SetScreenMode13H        

FileError:              lea dx,FileErrorMsg
                        mov ah,9
                        int 21h
                        int 20h

AlreadyHaveFile:        mov FileHandle,ax
                        mov ah,3fh
                        mov cx,12
                        mov bx,FileHandle
                        lea dx,ScoreBuffer
                        int 21h
                        lea si,ScoreBuffer
                        cld
                        xor ax,ax
                        mov cx,1000
                        add si,8
                        lodsb
                        sub al,30H
                        mul cx
                        mov bx,ax
                        xor ax,ax
                        lodsb
                        sub al,30H
                        mov cx,100
                        mul cx
                        add bx,ax
                        xor ax,ax
                        lodsb
                        mov cx,10
                        sub al,30H
                        mul cx                        
                        add bx,ax
                        xor ax,ax
                        lodsb
                        sub al,30H
                        add bx,ax
                        mov HighScore,bx

SetScreenMode13H:       mov ah,0
                        mov al,13h
                        int 10h

;------------------------------------------------------------------------------
MakeDiabloTank1:
                        mov di,1280
                        lea si,DiabloTank
                        cld
                        mov DiabloCount,320
                        call MakeDiabloTank
                        mov di,1280
                        lea si,DiabloTankT
                        cld
                        mov DiabloCount,320
                        call MakeDiabloTank
                        mov di,1280
                        lea si,DiabloTankA
                        cld
                        mov DiabloCount,320
                        call MakeDiabloTank
                        mov di,1280
                        lea si,DiabloTankN
                        cld
                        mov DiabloCount,320
                        call MakeDiabloTank
                        mov di,1280
                        lea si,DiabloTankK
                        cld
                        mov DiabloCount,320
                        call MakeDiabloTank
                        cld
                        lea si,Clear
                        mov DiabloCount,320
                        call MakeDiabloTank

                        call InstallNewInt9

MakeStage1:             mov ah,2
                        mov bh,0
                        mov dl,15
                        mov dh,13
                        int 10H
                        lea dx,Stage1
                        mov ah,9
                        int 21H
                        call DelayDiablo


                        mov ah,0
                        int 01ah
                        inc dh
                        mov PauseCounter,dh
GetDiablo:              cmp KeyPress,1
                        jz  MakeBorders
                        mov ah,0
                        int 01ah
                        cmp dh,PauseCounter
                        jnz GetDiablo
                        jz MakeBorders

;======================================================================================                        


;Initialize Borders
MakeBorders:            mov ax,0a000h
                        mov es,ax
                        mov di,0
                        cld
                        mov cx,0fa00h
                        mov al,Border1color
                        repnz stosb
                        mov di,3210
                        mov al,0              ; Black

NextRowBorder:          mov cx,ColumnCounter
                        repnz stosb
                        add di,112
                        dec RowCounter
                        cmp RowCounter,0
                        jnz NextRowBorder

MakeBorder2:            mov di,3428
                        mov al,0

NextRowBorder2:         mov cx,ColumnCounter2
                        repnz stosb
                        add di,238
                        dec RowCounter2
                        cmp RowCounter2,0
                        jnz NextRowBorder2
                        call ClearVideoBuffer1

WriteMapToVieoBuffer1:  lea si,MapTable1
                        mov VideoMode,UseVideoBuffer
                        call MakeMap
                        call VideoBuff12Mem

MakeScore:              mov ah,2
                        mov bh,0
                        mov dh,21
                        mov dl,31
                        int 10h
                        lea dx,ScoreMsg
                        mov ah,9
                        int 21h

MakeHighScore:          mov ah,2
                        mov bh,0
                        mov dh,17
                        mov dl,29
                        int 10h
                        lea dx,HighScoreMsg
                        mov ah,9
                        int 21h
                        mov ah,2
                        mov dh,18
                        mov dl,30
                        int 10h
                        lea dx,ScoreBuffer
                        mov ah,9
                        int 21h
                        mov ah,2
                        mov dh,19
                        mov dl,32
                        int 10h
                        mov ax,HighScore
                        xor dx,dx
                        mov cx,4
                        mov bx,10

loopx3:                 div bx
                        push dx
                        xor dx,dx
                        loop loopx3
                        mov cx,4

loop3:                  pop ax
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        loop loop3

MakeLife:               mov ah,2
                        mov bh,0
                        mov dh,9
                        mov dl,29
                        int 10h
                        lea dx,EnemyLifeMsg
                        mov ah,9
                        int 21h

                        mov ah,2
                        mov dh,11
                        mov dl,29
                        int 10h
                        lea dx,Enemy1LifeMsg
                        mov ah,9
                        int 21h
                        mov ah,2
                        mov dh,12
                        mov dl,29
                        int 10h
                        lea dx,Enemy2LifeMsg
                        mov ah,9
                        int 21h
                        mov ah,2
                        mov dh,13
                        mov dl,29
                        int 10h
                        lea dx,Enemy3LifeMsg
                        mov ah,9
                        int 21h
                        mov ah,2
                        mov dh,14
                        mov dl,29
                        int 10h
                        lea dx,Enemy4LifeMsg
                        mov ah,9
                        int 21h
                        mov ah,2
                        mov dh,15
                        mov dl,29
                        int 10h
                        lea dx,Enemy5LifeMsg
                        mov ah,9
                        int 21h
                        
;==============================================================================
;Start Game
;==============================================================================
StartGame:             lea si,MyTankUp
                       mov MyTankX,64
                       mov MyTankY,168
                       mov Xposition,64
                       mov Yposition,168
                       call WriteObject
                       call VideoBuff12Mem
                       mov MyTankNow,MyTankNowUp
                       mov EnemyMissile1Dead,1
                       mov MyMissileDead,1
                       mov EnemyTankNumber,0
                       mov TimeCounter,2
;Start Game Loop
GameLoop:               mov dx,3dah

ClearStage1:            cmp PassStage1,1
                        jnz CheckAngle

ShowClearStage:         call UpdateHighScore
                        jmp exit1

CheckAngle:             call CheckAngleDead
 
GameOver1:              cmp GameOver,1
                        jnz RetraceEnd

GameOver2:              call UpdateHighScore
                        jmp exit1

RetraceEnd:             in al,dx
                        test al,8
                        jz RetraceEnd
                        cmp MyTankNow,MytankNowUp
                        jz ReWriteMyTankUp
                        cmp MyTankNow,MyTankNowDown
                        jz ReWriteMyTankDown
                        cmp MyTankNow,MyTankNowLeft
                        jz ReWriteMyTankLeft
                        cmp MyTankNow,MyTankNowRight
                        jz ReWriteMyTankRight

ReFresh:                call VideoBuff12Mem
                        cmp ExitToggle,1
                        jnz PressArrow
                        jmp PressESC

ReWRiteMyTankUp:        lea si,MyTankUp
                        call WriteMyTank
                        jmp ReFresh

ReWriteMyTankDown:      lea si,MyTankDown
                        call WriteMyTank
                        jmp ReFresh

ReWriteMyTankLeft:      lea si,MyTankLeft
                        call WriteMyTank
                        jmp ReFresh

ReWriteMyTankRight:     lea si,MyTankRight
                        call WriteMyTank
                        jmp ReFresh

PressESC:               jmp exit


PressArrow:             call CheckMyTankMove

CheckEnemyTank:         call CheckEnemyTanks

MovingEnemyTank:        call MoveEnemyTank

PressFire:              call CheckMyMissile

CheckMyMissileDead:     cmp MyMissileDead,1
                        ;jz CheckEnemyMissileDead
                        jz CheckEnemyMissileDead
                        call MovingMissile

CheckEnemyMissileDead:  ;cmp TimeCounter,0
                        ;jnz CheckChangeLife
                        call CheckEnemyMissile
                        ;mov TimeCounter,2

CheckChangeLife:                                 
                         call UpDateMyLife

UpdateScore:            call UpDateNewScore

UpdateEnemyLife:        call UpDateEnemyLife1

Next:

LoopToGameLoop:         ;dec TimeCounter
                        jmp GameLoop

exit:                   call RemoveNewInt9
                        mov ah,0
                        mov al,3
                        int 10h
                        mov ax,cs
                        mov ds,ax
                        mov ah,9
                        lea dx,QuitMsg
                        int 21h
                        int 20h

exit1:                  
                        mov ax,cs
                        mov ds,ax
                        lea dx,QuitMsg
                        mov ah,9
                        int 21h
                        int 20h

start                   endp
;=============================================================================
;End Start Game
;=============================================================================
;All Procedures
;=============================================================================
UpdateMyLife             proc
                         mov ah,2
                         mov bh,0
                         mov dl,32
                         mov dh,8
                         int 10h
                         xor ax,ax
                         mov al,MytankLife
                         xor dx,dx
                         mov cx,4
                         mov bx,10

loopx1:                 div bx
                        push dx
                        xor dx,dx
                        loop loopx1
                        mov cx,4

loop21:                 pop ax
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        loop loop21

                         ret
UpdateMyLife             endp
;--------------------------------------------------------------------------------
CheckEnemyMissile        proc

CheckEnemyMissile1Dead:  cmp EnemyMissile1Dead,1
                         jnz StillMoveEnemyMissile1
                         cmp EnemyTank1Dead,1
                         jnz  FireMoreEnemyMissile1
                         jmp CheckEnemyMissile2Dead

StillMoveEnemyMissile1:  call MoveEnemyMissile1
                         jmp CheckEnemyMissile2Dead
                         ret

FireMoreEnemyMissile1:   call FireEnemyMissile1

CheckEnemyMissile2Dead:  cmp EnemyMissile2Dead,1
                         jnz StillMoveEnemyMissile2
                         cmp EnemyTank2Dead,1
                         jnz FireMoreEnemyMissile2
                         jmp CheckEnemyMissile3Dead

StillMoveEnemyMissile2:  call MoveEnemyMissile2
                         jmp CheckEnemyMissile3Dead

FireMoreEnemyMissile2:   call FireEnemyMissile2

CheckEnemyMissile3Dead:  cmp EnemyMissile3Dead,1
                         jnz StillMoveEnemyMissile3
                         cmp EnemyTank3Dead,1
                         jnz FireMoreEnemyMissile3
                         jmp CheckEnemyMissile4Dead

StillMoveEnemyMissile3:  call MoveEnemyMissile3
                         jmp CheckEnemyMissile4Dead

FireMoreEnemyMissile3:   call FireEnemyMissile3

CheckEnemyMissile4Dead:  cmp EnemyMissile4Dead,1
                         jnz StillMoveEnemyMissile4
                         cmp EnemyTank4Dead,1
                         jnz FireMoreEnemyMissile4
                         jmp CheckEnemyMissile5Dead

StillMoveEnemyMissile4:  call MoveEnemyMissile4
                         jmp CheckEnemyMissile5Dead

FireMoreEnemyMissile4:   call FireEnemyMissile4

CheckEnemyMissile5Dead:  cmp EnemyMissile5Dead,1
                         jnz StillMoveEnemyMissile5
                         cmp EnemyTank5Dead,1
                         jnz FireMoreEnemyMissile5
                         jmp EnemyDead

StillMoveEnemyMissile5:  call MoveEnemyMissile5
                         ret

FireMoreEnemyMissile5:   call FireEnemyMissile5
                         ret

EnemyDead:               ret

CheckEnemyMissile        endp

;------------------------------------------------------------------------------
FireEnemyMissile1       proc

FireEnemyMissile1More:  cmp Enemy1Now,Right
                        jz FireEnemy1Right
                        cmp Enemy1Now,Left
                        jz FireEnemy1Left
                        cmp Enemy1Now,Up
                        jz FireEnemy1Up1
                        cmp Enemy1Now,Down
                        jz FireEnemy1Down1
                        ret

FireEnemy1Down1:       jmp FireEnemy1Down
FireEnemy1Up1:         jmp FireEnemy1up

FireEnemy1Right:
                        cmp EnemyTank1X,176
                        ja CannotFireEnemy12
                        mov al,EnemyTank1X
                        mov XPosition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        add XPosition,32
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy12
                        mov al,EnemyTank1X
                        mov EnemyMissile1X,al
                        mov al,EnemyTank1Y
                        mov EnemyMissile1Y,al
                        add EnemyMissile1X,16
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        mov EnemyMissile1Right,1
                        ret

CannotFireEnemy12:      ret

FireEnemy1Left:         cmp EnemyTank1X,16
                        jb CannotFireEnemy12
                        mov al,EnemyTank1X
                        mov XPosition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        sub XPosition,17  ;*** 16
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy12
                        mov al,EnemyTank1X
                        mov EnemyMissile1X,al
                        mov al,EnemyTank1Y
                        mov EnemyMissile1Y,al
                        sub EnemyMissile1X,16
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        mov EnemyMissile1Left,1
                        ret

FireEnemy1Up:           cmp EnemyMissile1Y,12
                        jb CannotFireEnemy12
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        mov al,EnemyTank1X
                        mov XPosition,al
                        sub YPosition,12
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy13
                        mov al,EnemyTank1X
                        mov EnemyMissile1X,al
                        mov al,EnemyTank1Y
                        mov EnemyMissile1Y,al
                        sub EnemyMissile1Y,12
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        mov EnemyMissile1Up,1
                        ret

CannotFireEnemy13:      ret

FireEnemy1Down:         cmp EnemyMissile1Y,156
                        ja CannotFireEnemy1
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        mov al,EnemyTank1X
                        mov XPosition,al
                        add YPosition,24
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy1
                        mov al,EnemyTank1X
                        mov EnemyMissile1X,al
                        mov al,EnemyTank1Y
                        mov EnemyMissile1Y,al
                        add EnemyMissile1Y,12
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        mov EnemyMissile1Down,1

CannotFireEnemy1:       ret

FireEnemyMissile1       endp
;-----------------------------------------------------------------------------
MoveEnemyMissile1       proc
                        cmp EnemyMissile1Right,1
                        jz StillMoveEnemyMissile1Right
                        cmp EnemyMissile1Left,1
                        jz StillMoveEnemyMissile1Left
                        cmp EnemyMissile1Up,1
                        jz StillMoveEnemyMissile1Up
                        cmp EnemyMissile1Down,1
                        jz StillMoveEnemyMissile1Down
                        ret

StillMoveEnemyMissile1Right: call EnemyMissile1MoveRight
                             ret

StillMoveEnemyMissile1Left: call EnemyMissile1MoveLeft
                            ret

StillMoveEnemyMissile1Up: call EnemyMissile1MoveUp
                          ret

StillMoveEnemyMissile1Down: call EnemyMissile1MoveDown
                            ret

MoveEnemyMissile1       endp
;------------------------------------------------------------------------------
EnemyMissile1MoveRight  proc

                        cmp EnemyMissile1X,190
                        ja ReachEnemy11RightWall
                        mov al,EnemyMissile1X
                        mov XPosition,al
                        add XPosition,16     ;*** 17
                        mov al,EnemyMissile1Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy1Right
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile1X,1
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        ret

ReachEnemy11RightWall:  jmp ReachEnemy1RightWall

CannotMoveEnemy1Right:  mov al,EnemyMissile1X
                        mov FoundObjectX,al
                        add FoundObjectX,16
                        mov al,EnemyMissile1Y
                        mov FoundObjectY,al                                              
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Right,0
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife
                        call EraseEnemyMissile
                        ret

ReachEnemy1RightWall:   mov EnemyMissile1Dead,1
                        mov EnemyMissile1Right,0
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        ret

EnemyMissile1MoveRight  endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile1MoveLeft   proc
                        cmp EnemyMissile1X,2
                        jb ReachEnemy11LeftWall
                        mov al,EnemyMissile1X
                        mov XPosition,al
                        sub XPosition,1  ;*** 2
                        mov al,EnemyMissile1Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy1Left
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile1X,1
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        ret

ReachEnemy11LeftWall:   jmp ReachEnemy1LeftWall

CannotMoveEnemy1Left:   mov al,EnemyMissile1X
                        mov FoundObjectX,al
                        sub FoundObjectX,16
                        mov al,EnemyMissile1Y
                        mov FoundObjectY,al
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Left,0
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife
                        call EraseEnemyMissile
                        ret

ReachEnemy1LeftWall:    mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Left,0
                        ret

EnemyMissile1MoveLeft   endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
EnemyMissile1MoveUp     proc
                        cmp EnemyMissile1Y,2
                        jz ReachEnemy11UpWall
                        mov al,EnemyMissile1Y
                        mov YPosition,al
                        sub YPosition,1 ;*** 2
                        mov al,EnemyMissile1X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy1Up
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile1Y,1
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        ret

ReachEnemy11UpWall:     jmp ReachEnemy1UpWall

CannotMoveEnemy1Up:     mov al,EnemyMissile1X
                        mov FoundObjectX,al
                        mov al,EnemyMissile1Y
                        mov FoundObjectY,al
                        sub FoundObjectY,12
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Up,0
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife
                        call EraseEnemyMissile
                        ret

ReachEnemy1UpWall:      mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Up,0
                        ret

EnemyMissile1MoveUp     endp
;----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile1MoveDown   proc
                        cmp EnemyMissile1Y,168
                        ja ReachEnemy11DownWall
                        mov al,EnemyMissile1Y
                        mov YPosition,al
                        add YPosition,12 ;*** 13
                        mov al,EnemyMissile1X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy1Down    ;Have Blocks
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile1Y,1
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile1Dead,0
                        ret

ReachEnemy11DownWall:   jmp ReachEnemy1DownWall

CannotMoveEnemy1Down:   mov al,EnemyMissile1X
                        mov FoundObjectX,al
                        mov al,EnemyMissile1Y
                        mov FoundObjectY,al
                        add FoundObjectY,12
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Down,0
                        mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy1DownWall:    mov al,EnemyMissile1X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile1Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile1Dead,1
                        mov EnemyMissile1Down,0
                        ret

EnemyMissile1MoveDown   endp
;----------------------------------------------------------------------------
FireEnemyMissile2       proc

FireEnemyMissile2More:  cmp Enemy2Now,Right
                        jz FireEnemy2Right
                        cmp Enemy2Now,Left
                        jz FireEnemy2Left
                        cmp Enemy2Now,Up
                        jz FireEnemy2Up1
                        cmp Enemy2Now,Down
                        jz FireEnemy2Down1
                        ret

FireEnemy2Down1:       jmp FireEnemy2Down
FireEnemy2Up1:         jmp FireEnemy2up

FireEnemy2Right:
                        cmp EnemyTank2X,176
                        ja CannotFireEnemy22
                        mov al,EnemyTank2X
                        mov XPosition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        add XPosition,32
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy22
                        mov al,EnemyTank2X
                        mov EnemyMissile2X,al
                        mov al,EnemyTank2Y
                        mov EnemyMissile2Y,al
                        add EnemyMissile2X,16
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        mov EnemyMissile2Right,1
                        ret

CannotFireEnemy22:      ret

FireEnemy2Left:         cmp EnemyTank2X,16
                        jb CannotFireEnemy22
                        mov al,EnemyTank2X
                        mov XPosition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        sub XPosition,17 ;*** 16
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy22
                        mov al,EnemyTank2X
                        mov EnemyMissile2X,al
                        mov al,EnemyTank2Y
                        mov EnemyMissile2Y,al
                        sub EnemyMissile2X,16
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        mov EnemyMissile2Left,1
                        ret

FireEnemy2Up:           cmp EnemyMissile2Y,12
                        jb CannotFireEnemy22
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        mov al,EnemyTank2X
                        mov XPosition,al
                        sub YPosition,12
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy23
                        mov al,EnemyTank2X
                        mov EnemyMissile2X,al
                        mov al,EnemyTank2Y
                        mov EnemyMissile2Y,al
                        sub EnemyMissile2Y,12
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        mov EnemyMissile2Up,1
                        ret

CannotFireEnemy23:      ret

FireEnemy2Down:         cmp EnemyMissile2Y,156
                        ja CannotFireEnemy2
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        mov al,EnemyTank2X
                        mov XPosition,al
                        add YPosition,24
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy2
                        mov al,EnemyTank2X
                        mov EnemyMissile2X,al
                        mov al,EnemyTank2Y
                        mov EnemyMissile2Y,al
                        add EnemyMissile2Y,12
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        mov EnemyMissile2Down,1

CannotFireEnemy2:       ret

FireEnemyMissile2       endp
;-----------------------------------------------------------------------------
MoveEnemyMissile2       proc
                        cmp EnemyMissile2Right,1
                        jz StillMoveEnemyMissile2Right
                        cmp EnemyMissile2Left,1
                        jz StillMoveEnemyMissile2Left
                        cmp EnemyMissile2Up,1
                        jz StillMoveEnemyMissile2Up
                        cmp EnemyMissile2Down,1
                        jz StillMoveEnemyMissile2Down
                        ret

StillMoveEnemyMissile2Right: call EnemyMissile2MoveRight
                             ret

StillMoveEnemyMissile2Left: call EnemyMissile2MoveLeft
                            ret

StillMoveEnemyMissile2Up: call EnemyMissile2MoveUp
                          ret

StillMoveEnemyMissile2Down: call EnemyMissile2MoveDown
                            ret



MoveEnemyMissile2       endp
;------------------------------------------------------------------------------
EnemyMissile2MoveRight  proc

                        cmp EnemyMissile2X,190
                        ja ReachEnemy21RightWall
                        mov al,EnemyMissile2X
                        mov XPosition,al
                        add XPosition,16     ;*** 17
                        mov al,EnemyMissile2Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy2Right
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile2X,1
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        ret

ReachEnemy21RightWall:  jmp ReachEnemy2RightWall

CannotMoveEnemy2Right:  mov al,EnemyMissile2X
                        mov FoundObjectX,al
                        add FoundObjectX,16
                        mov al,EnemyMissile2Y
                        mov FoundObjectY,al
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Right,0
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Right,0
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy2RightWall:   mov EnemyMissile2Dead,1
                        mov EnemyMissile2Right,0
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        ret

EnemyMissile2MoveRight  endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile2MoveLeft   proc
                        cmp EnemyMissile2X,2
                        jb ReachEnemy21LeftWall
                        mov al,EnemyMissile2X
                        mov XPosition,al
                        sub XPosition,1   ;*** 2
                        mov al,EnemyMissile2Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy2Left
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile2X,1
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        ret

ReachEnemy21LeftWall:   jmp ReachEnemy2LeftWall

CannotMoveEnemy2Left:   mov al,EnemyMissile2X
                        mov FoundObjectX,al
                        sub FoundObjectX,16
                        mov al,EnemyMissile2Y
                        mov FoundObjectY,al
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Left,0
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy2LeftWall:    mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Left,0
                        ret

EnemyMissile2MoveLeft   endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
EnemyMissile2MoveUp     proc
                        cmp EnemyMissile2Y,2
                        jz ReachEnemy21UpWall
                        mov al,EnemyMissile2Y
                        mov YPosition,al
                        sub YPosition,1 ;*** 2
                        mov al,EnemyMissile2X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy2Up
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile2Y,1
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        ret

ReachEnemy21UpWall:     jmp ReachEnemy2UpWall

CannotMoveEnemy2Up:     mov al,EnemyMissile2X
                        mov FoundObjectX,al
                        mov al,EnemyMissile2Y
                        mov FoundObjectY,al
                        sub FoundObjectY,12
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Up,0
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy2UpWall:      mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Up,0
                        ret

EnemyMissile2MoveUp     endp
;----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile2MoveDown   proc
                        cmp EnemyMissile2Y,168
                        ja ReachEnemy21DownWall
                        mov al,EnemyMissile2Y
                        mov YPosition,al
                        add YPosition,12 ;*** 13
                        mov al,EnemyMissile2X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy2Down    ;Have Blocks
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile2Y,1
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile2Dead,0
                        ret

ReachEnemy21DownWall:   jmp ReachEnemy2DownWall

CannotMoveEnemy2Down:   mov al,EnemyMissile2X
                        mov FoundObjectX,al
                        mov al,EnemyMissile2Y
                        mov FoundObjectY,al
                        add FoundObjectY,12
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Down,0
                        mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy2DownWall:    mov al,EnemyMissile2X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile2Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile2Dead,1
                        mov EnemyMissile2Down,0
                        ret

EnemyMissile2MoveDown   endp
;----------------------------------------------------------------------------
FireEnemyMissile3       proc

FireEnemyMissile3More:  cmp Enemy3Now,Right
                        jz FireEnemy3Right
                        cmp Enemy3Now,Left
                        jz FireEnemy3Left
                        cmp Enemy3Now,Up
                        jz FireEnemy3Up1
                        cmp Enemy3Now,Down
                        jz FireEnemy3Down1
                        ret

FireEnemy3Down1:       jmp FireEnemy3Down
FireEnemy3Up1:         jmp FireEnemy3up

FireEnemy3Right:
                        cmp EnemyTank3X,176
                        ja CannotFireEnemy32
                        mov al,EnemyTank3X
                        mov XPosition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        add XPosition,32
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy32
                        mov al,EnemyTank3X
                        mov EnemyMissile3X,al
                        mov al,EnemyTank3Y
                        mov EnemyMissile3Y,al
                        add EnemyMissile3X,16
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        mov EnemyMissile3Right,1
                        ret

CannotFireEnemy32:      ret

FireEnemy3Left:         cmp EnemyTank3X,16
                        jb CannotFireEnemy32
                        mov al,EnemyTank3X
                        mov XPosition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        sub XPosition,17 ;*** 16
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy32
                        mov al,EnemyTank3X
                        mov EnemyMissile3X,al
                        mov al,EnemyTank3Y
                        mov EnemyMissile3Y,al
                        sub EnemyMissile3X,16
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        ;call EraseEnemyMissile
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        mov EnemyMissile3Left,1
                        ret

FireEnemy3Up:           cmp EnemyMissile3Y,12
                        jb CannotFireEnemy32
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        mov al,EnemyTank3X
                        mov XPosition,al
                        sub YPosition,12
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy33
                        mov al,EnemyTank3X
                        mov EnemyMissile3X,al
                        mov al,EnemyTank3Y
                        mov EnemyMissile3Y,al
                        sub EnemyMissile3Y,12
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        mov EnemyMissile3Up,1
                        ret

CannotFireEnemy33:      ret

FireEnemy3Down:         cmp EnemyMissile3Y,156
                        ja CannotFireEnemy3
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        mov al,EnemyTank3X
                        mov XPosition,al
                        add YPosition,24
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy3
                        mov al,EnemyTank3X
                        mov EnemyMissile3X,al
                        mov al,EnemyTank3Y
                        mov EnemyMissile3Y,al
                        add EnemyMissile3Y,12
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        mov EnemyMissile3Down,1

CannotFireEnemy3:       ret

FireEnemyMissile3       endp
;-----------------------------------------------------------------------------
MoveEnemyMissile3       proc
                        cmp EnemyMissile3Right,1
                        jz StillMoveEnemyMissile3Right
                        cmp EnemyMissile3Left,1
                        jz StillMoveEnemyMissile3Left
                        cmp EnemyMissile3Up,1
                        jz StillMoveEnemyMissile3Up
                        cmp EnemyMissile3Down,1
                        jz StillMoveEnemyMissile3Down
                        ret

StillMoveEnemyMissile3Right: call EnemyMissile3MoveRight
                             ret

StillMoveEnemyMissile3Left: call EnemyMissile3MoveLeft
                            ret

StillMoveEnemyMissile3Up: call EnemyMissile3MoveUp
                          ret

StillMoveEnemyMissile3Down: call EnemyMissile3MoveDown
                            ret


MoveEnemyMissile3       endp
;------------------------------------------------------------------------------
EnemyMissile3MoveRight  proc

                        cmp EnemyMissile3X,190
                        ja ReachEnemy31RightWall
                        mov al,EnemyMissile3X
                        mov XPosition,al
                        add XPosition,16     ;*** 17
                        mov al,EnemyMissile3Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy3Right
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile3X,1
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        ret

ReachEnemy31RightWall:  jmp ReachEnemy3RightWall

CannotMoveEnemy3Right:  mov al,EnemyMissile3X
                        mov FoundObjectX,al
                        add FoundObjectX,16
                        mov al,EnemyMissile3Y
                        mov FoundObjectY,al
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Right,0
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Right,0
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy3RightWall:   mov EnemyMissile3Dead,1
                        mov EnemyMissile3Right,0
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        ret

EnemyMissile3MoveRight  endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile3MoveLeft   proc
                        cmp EnemyMissile3X,2
                        jb ReachEnemy31LeftWall
                        mov al,EnemyMissile3X
                        mov XPosition,al
                        sub XPosition,1   ;*** 2
                        mov al,EnemyMissile3Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy3Left
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile3X,1
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        ret

ReachEnemy31LeftWall:   jmp ReachEnemy3LeftWall

CannotMoveEnemy3Left:   mov al,EnemyMissile3X
                        mov FoundObjectX,al
                        sub FoundObjectX,16
                        mov al,EnemyMissile3Y
                        mov FoundObjectY,al
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Left,0
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy3LeftWall:    mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Left,0
                        ret

EnemyMissile3MoveLeft   endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
EnemyMissile3MoveUp     proc
                        cmp EnemyMissile3Y,2
                        jz ReachEnemy31UpWall
                        mov al,EnemyMissile3Y
                        mov YPosition,al
                        sub YPosition,1 ;*** 2
                        mov al,EnemyMissile3X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy3Up
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile3Y,1
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        ret

ReachEnemy31UpWall:     jmp ReachEnemy3UpWall

CannotMoveEnemy3Up:     mov al,EnemyMissile3X
                        mov FoundObjectX,al
                        mov al,EnemyMissile3Y
                        mov FoundObjectY,al
                        sub FoundObjectY,12
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Up,0
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy3UpWall:      mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Up,0
                        ret

EnemyMissile3MoveUp     endp
;----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile3MoveDown   proc
                        cmp EnemyMissile3Y,168
                        ja ReachEnemy31DownWall
                        mov al,EnemyMissile3Y
                        mov YPosition,al
                        add YPosition,12 ;*** 13
                        mov al,EnemyMissile3X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy3Down    ;Have Blocks
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile3Y,1
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile3Dead,0
                        ret

ReachEnemy31DownWall:   jmp ReachEnemy3DownWall

CannotMoveEnemy3Down:   mov al,EnemyMissile3X
                        mov FoundObjectX,al
                        mov al,EnemyMissile3Y
                        mov FoundObjectY,al
                        add FoundObjectY,12
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Down,0
                        mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy3DownWall:    mov al,EnemyMissile3X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile3Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile3Dead,1
                        mov EnemyMissile3Down,0
                        ret

EnemyMissile3MoveDown   endp
;-----------------------------------------------------------------------------
FireEnemyMissile4       proc

FireEnemyMissile4More:  cmp Enemy4Now,Right
                        jz FireEnemy4Right
                        cmp Enemy4Now,Left
                        jz FireEnemy4Left
                        cmp Enemy4Now,Up
                        jz FireEnemy4Up1
                        cmp Enemy4Now,Down
                        jz FireEnemy4Down1
                        ret

FireEnemy4Down1:       jmp FireEnemy4Down
FireEnemy4Up1:         jmp FireEnemy4up

FireEnemy4Right:
                        cmp EnemyTank4X,176
                        ja CannotFireEnemy42
                        mov al,EnemyTank4X
                        mov XPosition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        add XPosition,32
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy42
                        mov al,EnemyTank4X
                        mov EnemyMissile4X,al
                        mov al,EnemyTank4Y
                        mov EnemyMissile4Y,al
                        add EnemyMissile4X,16
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        mov EnemyMissile4Right,1
                        ret

CannotFireEnemy42:      ret

FireEnemy4Left:         cmp EnemyTank4X,16
                        jb CannotFireEnemy42
                        mov al,EnemyTank4X
                        mov XPosition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        sub XPosition,17     ;*** 16
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy42
                        mov al,EnemyTank4X
                        mov EnemyMissile4X,al
                        mov al,EnemyTank4Y
                        mov EnemyMissile4Y,al
                        sub EnemyMissile4X,16
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        ;call EraseEnemyMissile
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        mov EnemyMissile4Left,1
                        ret

FireEnemy4Up:           cmp EnemyMissile4Y,12
                        jb CannotFireEnemy42
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        mov al,EnemyTank4X
                        mov XPosition,al
                        sub YPosition,12
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy43
                        mov al,EnemyTank4X
                        mov EnemyMissile4X,al
                        mov al,EnemyTank4Y
                        mov EnemyMissile4Y,al
                        sub EnemyMissile4Y,12
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        mov EnemyMissile4Up,1
                        ret

CannotFireEnemy43:      ret

FireEnemy4Down:         cmp EnemyMissile4Y,156
                        ja CannotFireEnemy4
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        mov al,EnemyTank4X
                        mov XPosition,al
                        add YPosition,24
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy4
                        mov al,EnemyTank4X
                        mov EnemyMissile4X,al
                        mov al,EnemyTank4Y
                        mov EnemyMissile4Y,al
                        add EnemyMissile4Y,12
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        mov EnemyMissile4Down,1

CannotFireEnemy4:       ret

FireEnemyMissile4       endp
;-----------------------------------------------------------------------------
MoveEnemyMissile4       proc
                        cmp EnemyMissile4Right,1
                        jz StillMoveEnemyMissile4Right
                        cmp EnemyMissile4Left,1
                        jz StillMoveEnemyMissile4Left
                        cmp EnemyMissile4Up,1
                        jz StillMoveEnemyMissile4Up
                        cmp EnemyMissile4Down,1
                        jz StillMoveEnemyMissile4Down
                        ret

StillMoveEnemyMissile4Right: call EnemyMissile4MoveRight
                             ret

StillMoveEnemyMissile4Left: call EnemyMissile4MoveLeft
                            ret

StillMoveEnemyMissile4Up: call EnemyMissile4MoveUp
                          ret

StillMoveEnemyMissile4Down: call EnemyMissile4MoveDown
                            ret


MoveEnemyMissile4       endp
;------------------------------------------------------------------------------
EnemyMissile4MoveRight  proc

                        cmp EnemyMissile4X,190
                        ja ReachEnemy41RightWall
                        mov al,EnemyMissile4X
                        mov XPosition,al
                        add XPosition,16     ;*** 17
                        mov al,EnemyMissile4Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy4Right
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile4X,1
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        ret

ReachEnemy41RightWall:  jmp ReachEnemy4RightWall

CannotMoveEnemy4Right:  mov al,EnemyMissile4X
                        mov FoundObjectX,al
                        add FoundObjectX,16
                        mov al,EnemyMissile4Y
                        mov FoundObjectY,al
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Right,0
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Right,0
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy4RightWall:   mov EnemyMissile4Dead,1
                        mov EnemyMissile4Right,0
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        ret

EnemyMissile4MoveRight  endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile4MoveLeft   proc
                        cmp EnemyMissile4X,2
                        jb ReachEnemy41LeftWall
                        mov al,EnemyMissile4X
                        mov XPosition,al
                        sub XPosition,1   ;*** 2
                        mov al,EnemyMissile4Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy4Left
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile4X,1
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        ret

ReachEnemy41LeftWall:   jmp ReachEnemy4LeftWall

CannotMoveEnemy4Left:   mov al,EnemyMissile4X
                        mov FoundObjectX,al
                        sub FoundObjectX,16
                        mov al,EnemyMissile4Y
                        mov FoundObjectY,al
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Left,0
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy4LeftWall:    mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Left,0
                        ret

EnemyMissile4MoveLeft   endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
EnemyMissile4MoveUp     proc
                        cmp EnemyMissile4Y,2
                        jz ReachEnemy41UpWall
                        mov al,EnemyMissile4Y
                        mov YPosition,al
                        sub YPosition,1 ;*** 2
                        mov al,EnemyMissile4X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy4Up
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile4Y,1
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        ret

ReachEnemy41UpWall:     jmp ReachEnemy4UpWall

CannotMoveEnemy4Up:     mov al,EnemyMissile4X
                        mov FoundObjectX,al
                        mov al,EnemyMissile4Y
                        mov FoundObjectY,al
                        sub FoundObjectY,12
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Up,0
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy4UpWall:      mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Up,0
                        ret

EnemyMissile4MoveUp     endp
;----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile4MoveDown   proc
                        cmp EnemyMissile4Y,168
                        ja ReachEnemy41DownWall
                        mov al,EnemyMissile4Y
                        mov YPosition,al
                        add YPosition,12 ;*** 13
                        mov al,EnemyMissile4X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy4Down    ;Have Blocks
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile4Y,1
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile4Dead,0
                        ret

ReachEnemy41DownWall:   jmp ReachEnemy4DownWall

CannotMoveEnemy4Down:   mov al,EnemyMissile4X
                        mov FoundObjectX,al
                        mov al,EnemyMissile4Y
                        mov FoundObjectY,al
                        add FoundObjectY,12
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Down,0
                        mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy4DownWall:    mov al,EnemyMissile4X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile4Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile4Dead,1
                        mov EnemyMissile4Down,0
                        ret

EnemyMissile4MoveDown   endp
;-----------------------------------------------------------------------------
FireEnemyMissile5       proc

FireEnemyMissile5More:  cmp Enemy5Now,Right
                        jz FireEnemy5Right
                        cmp Enemy5Now,Left
                        jz FireEnemy5Left
                        cmp Enemy5Now,Up
                        jz FireEnemy5Up1
                        cmp Enemy5Now,Down
                        jz FireEnemy5Down1
                        ret

FireEnemy5Down1:       jmp FireEnemy5Down
FireEnemy5Up1:         jmp FireEnemy5up

FireEnemy5Right:
                        cmp EnemyTank5X,176
                        ja CannotFireEnemy52
                        mov al,EnemyTank5X
                        mov XPosition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        add XPosition,32
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy52
                        mov al,EnemyTank5X
                        mov EnemyMissile5X,al
                        mov al,EnemyTank5Y
                        mov EnemyMissile5Y,al
                        add EnemyMissile5X,16
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        mov EnemyMissile5Right,1
                        ret

CannotFireEnemy52:      ret

FireEnemy5Left:         cmp EnemyTank5X,16
                        jb CannotFireEnemy52
                        mov al,EnemyTank5X
                        mov XPosition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        sub XPosition,17 ;*** 16
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy52
                        mov al,EnemyTank5X
                        mov EnemyMissile5X,al
                        mov al,EnemyTank5Y
                        mov EnemyMissile5Y,al
                        sub EnemyMissile5X,16
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        mov EnemyMissile5Left,1
                        ret

FireEnemy5Up:           cmp EnemyMissile5Y,12
                        jb CannotFireEnemy52
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        mov al,EnemyTank5X
                        mov XPosition,al
                        sub YPosition,12
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy53
                        mov al,EnemyTank5X
                        mov EnemyMissile5X,al
                        mov al,EnemyTank5Y
                        mov EnemyMissile5Y,al
                        sub EnemyMissile5Y,12
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        mov EnemyMissile5Up,1
                        ret

CannotFireEnemy53:      ret

FireEnemy5Down:         cmp EnemyMissile5Y,156
                        ja CannotFireEnemy5
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        mov al,EnemyTank5X
                        mov XPosition,al
                        add YPosition,24
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFireEnemy5
                        mov al,EnemyTank5X
                        mov EnemyMissile5X,al
                        mov al,EnemyTank5Y
                        mov EnemyMissile5Y,al
                        add EnemyMissile5Y,12
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        mov EnemyMissile5Down,1

CannotFireEnemy5:       ret

FireEnemyMissile5       endp
;-----------------------------------------------------------------------------
MoveEnemyMissile5       proc
                        cmp EnemyMissile5Right,1
                        jz StillMoveEnemyMissile5Right
                        cmp EnemyMissile5Left,1
                        jz StillMoveEnemyMissile5Left
                        cmp EnemyMissile5Up,1
                        jz StillMoveEnemyMissile5Up
                        cmp EnemyMissile5Down,1
                        jz StillMoveEnemyMissile5Down
                        ret

StillMoveEnemyMissile5Right: call EnemyMissile5MoveRight
                             ret

StillMoveEnemyMissile5Left: call EnemyMissile5MoveLeft
                            ret

StillMoveEnemyMissile5Up: call EnemyMissile5MoveUp
                          ret

StillMoveEnemyMissile5Down: call EnemyMissile5MoveDown
                            ret

MoveEnemyMissile5       endp
;------------------------------------------------------------------------------
EnemyMissile5MoveRight  proc

                        cmp EnemyMissile5X,190
                        ja ReachEnemy51RightWall
                        mov al,EnemyMissile5X
                        mov XPosition,al
                        add XPosition,16     ;*** 17
                        mov al,EnemyMissile5Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy5Right
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile5X,1
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        ret

ReachEnemy51RightWall:  jmp ReachEnemy5RightWall

CannotMoveEnemy5Right:  mov al,EnemyMissile5X
                        mov FoundObjectX,al
                        add FoundObjectX,16
                        mov al,EnemyMissile5Y
                        mov FoundObjectY,al
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Right,0
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Right,0
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy5RightWall:   mov EnemyMissile5Dead,1
                        mov EnemyMissile5Right,0
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        ret

EnemyMissile5MoveRight  endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile5MoveLeft   proc
                        cmp EnemyMissile5X,2
                        jb ReachEnemy51LeftWall
                        mov al,EnemyMissile5X
                        mov XPosition,al
                        sub XPosition,1   ;*** 2
                        mov al,EnemyMissile5Y
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy5Left
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile5X,1
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        ret

ReachEnemy51LeftWall:   jmp ReachEnemy5LeftWall

CannotMoveEnemy5Left:   mov al,EnemyMissile5X
                        mov FoundObjectX,al
                        sub FoundObjectX,16
                        mov al,EnemyMissile5Y
                        mov FoundObjectY,al
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Left,0
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy5LeftWall:    mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Left,0
                        ret

EnemyMissile5MoveLeft   endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
EnemyMissile5MoveUp     proc
                        cmp EnemyMissile5Y,2
                        jz ReachEnemy51UpWall
                        mov al,EnemyMissile5Y
                        mov YPosition,al
                        sub YPosition,1 ;*** 2
                        mov al,EnemyMissile5X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy5Up
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        sub EnemyMissile5Y,1
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        ret

ReachEnemy51UpWall:     jmp ReachEnemy5UpWall

CannotMoveEnemy5Up:     mov al,EnemyMissile5X
                        mov FoundObjectX,al
                        mov al,EnemyMissile5Y
                        mov FoundObjectY,al
                        sub FoundObjectY,12
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Up,0
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy5UpWall:      mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Up,0
                        ret

EnemyMissile5MoveUp     endp
;----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EnemyMissile5MoveDown   proc
                        cmp EnemyMissile5Y,168
                        ja ReachEnemy51DownWall
                        mov al,EnemyMissile5Y
                        mov YPosition,al
                        add YPosition,12 ;*** 13
                        mov al,EnemyMissile5X
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotMoveEnemy5Down    ;Have Blocks
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        add EnemyMissile5Y,1
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call WriteEnemyMissile
                        mov EnemyMissile5Dead,0
                        ret

ReachEnemy51DownWall:   jmp ReachEnemy5DownWall

CannotMoveEnemy5Down:   mov al,EnemyMissile5X
                        mov FoundObjectX,al
                        mov al,EnemyMissile5Y
                        mov FoundObjectY,al
                        add FoundObjectY,12
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Down,0
                        mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call CheckMyTankLife

                        call EraseEnemyMissile
                        ret

ReachEnemy5DownWall:    mov al,EnemyMissile5X
                        mov EnemyMissileX,al
                        mov al,EnemyMissile5Y
                        mov EnemyMissileY,al
                        call EraseEnemyMissile
                        mov EnemyMissile5Dead,1
                        mov EnemyMissile5Down,0
                        ret

EnemyMissile5MoveDown   endp
;------------------------------------------------------------------------------
CheckMyMissile          proc
                        cmp FireToggle,1
                        jz CheckFireAll
                        ret

CheckFireAll:           cmp MyMissileDead,1
                        jz CanFireMore
                        jmp CannotFire

CanFireMore:            lea si,MyMissile
                        cmp MyTankNow,MyTankNowRight
                        jz FireRight
                        cmp MyTankNow,MyTankNowLeft
                        jz FireLeft
                        cmp MyTankNow,MyTankNowUp
                        jz FireUp1
                        cmp MyTankNow,MyTankNowDown
                        jz FireDown1
                        ret

FireDown1:              jmp FireDown
FireUp1:                jmp Fireup

FireRight:              mov al,MyTankx
                        mov MyMissileX,al
                        mov al,MyTankY
                        mov MyMissileY,al
                        add MyMissileX,16
                        cmp MyMissileX,192
                        ja CannotFire1
                        mov al,MyMissileX
                        mov XPosition,al
                        mov al,MyMissileY
                        mov YPosition,al
                        add XPosition,15
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFire1
                        ;call EraseMyMissile
                        call WriteMyMissile
                        mov MyMissileDead,0
                        mov MyMissileRight,1
                        ret

CannotFire1:            ret

FireLeft:               mov al,MyTankX
                        mov MyMissileX,al
                        mov al,MyTankY
                        mov MyMissileY,al
                        cmp MyMissileX,16
                        jb CannotFire1
                        sub MyMissileX,16
                        mov al,MyMissileX
                        mov XPosition,al
                        mov al,MyMissileY
                        mov YPosition,al
                        call CheckXPath
                        cmp MyMissilePathOk,0
                        jz CannotFire1
                        call EraseMyMissile
                        call WriteMyMissile
                        mov MyMissileDead,0
                        mov MyMissileLeft,1
                        ret

FireUp:                 mov al,MyTankX
                        mov MyMissileX,al
                        mov al,MyTankY
                        mov MyMissileY,al
                        cmp MyMissileY,12
                        jb CannotFire1
                        sub MyMissileY,12
                        mov al,MyMissileY
                        mov YPosition,al
                        mov al,MyMissileX
                        mov XPosition,al
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFire

                        call EraseMyMissile
                        call WriteMyMissile
                        mov MyMissileDead,0
                        mov MyMissileUp,1
                        ret

FireDown:               mov al,MyTankX
                        mov MyMissileX,al
                        mov al,MyTankY
                        mov MyMissileY,al
                        cmp MyMissileY,156
                        ja CannotFire
                        add MyMissileY,12
                        mov al,MyMissileY
                        mov YPosition,al
                        mov al,MyMissileX
                        mov XPosition,al
                        add YPosition,11
                        call CheckYPath
                        cmp MyMissilePathOk,0
                        jz CannotFire
                        sub YPosition,12
                        call EraseMyMissile
                        call WriteMyMissile
                        mov MyMissileDead,0
                        mov MyMissileDown,1

CannotFire:             ret

CheckMyMissile          endp
;-----------------------------------------------------------------------------
MovingMissile           proc
                        cmp MyMissileRight,1
                        jz StillMoveMyMissileRight
                        cmp MyMissileLeft,1
                        jz StillMoveMyMissileLeft
                        cmp MyMissileUp,1
                        jz StillMoveMyMissileUp
                        cmp MyMissileDown,1
                        jz StillMoveMyMissileDown
                        ret

StillMoveMyMissileRight:call MissileMoveRight
                        ret

StillMoveMyMissileLeft: call MissileMoveLeft
                        ret

StillMoveMyMissileUp:   call MissileMoveUp
                        ret

StillMoveMyMissileDown: call MissileMoveDown
                        ret

MovingMissile           endp
;-------------------------------------------------------------------------------
CheckEnemyTanks         proc

CheckToTalEnymiesNow:   cmp EnemyTankNumberNow,ToTalEnemyTank
                        jz NoEnemyLeft


CheckEnemyOnScreen:     cmp EnemyTankNumber,EnemyPerTime
                        jnz MakeMoreEnemyTank
                        jmp NoMoreEnemyTank

MakeMoreEnemyTank:      call CheckEnemyTankNumber


NoMoreEnemyTank:        ret

NoEnemyLeft:            cmp EnemyTank1Dead,1
                        jnz NomoreEnemyTank
                        cmp EnemyTank2Dead,1
                        jnz NoMoreEnemyTank
                        cmp EnemyTank3Dead,1
                        jnz NoMoreEnemyTank
                        cmp EnemyTank4Dead,1
                        jnz NoMoreEnemyTank
                        cmp EnemyTank5Dead,1
                        jnz NoMoreEnemyTank
                        mov PassStage1,1
                        ret


CheckEnemyTanks         endp
;------------------------------------------------------------------------------
CheckEnemyTankNumber    proc
                        cmp EnemyTank1Dead,1
                        jnz EnemyTank1Notdie
                        cmp EnemyMissile1Dead,1
                        jnz EnemyTank1Notdie
                        jz  MakeEnemyTank1

EnemyTank1NotDie:       cmp EnemyTank2Dead,1
                        jnz EnemyTank2Notdie
                        cmp EnemyMissile2Dead,1
                        jnz EnemyTank2Notdie                        
                        jz MakeEnemyTank21

EnemyTank2NotDie:       cmp EnemyTank3Dead,1
                        jnz EnemyTank3Notdie
                        cmp EnemyMissile3Dead,1
                        jnz EnemyTank3Notdie
                        jz MakeEnemyTank31

EnemyTank3NotDie:       cmp EnemyTank4Dead,1
                        jnz EnemyTank4Notdie
                        cmp EnemyMissile4Dead,1
                        jnz EnemyTank4Notdie
                        jz MakeEnemyTank41

EnemyTank4NotDie:       cmp EnemyTank5Dead,1
                        jnz EnemyTank5Notdie
                        cmp EnemyMissile5Dead,1
                        jnz EnemyTank5Notdie
                        jz MakeEnemyTank51
                        ret

EnemyTank5NotDie:       ret

MakeEnemyTank31:        jmp MakeEnemyTank3
MakeEnemyTank41:        jmp MakeEnemyTank4
MakeEnemyTank51:        jmp MakeEnemyTank5
MakeEnemyTank21:        jmp MakeEnemyTank2

MakeEnemyTank1:         call MakeEnemyTankLevel
                        ;cmp EnemyTankMade,1
                        ;jnz NoMakeEnemyMore
                        add EnemyTankNumberNow,1
                        add EnemyTankNumber,1
                        mov al,EnemyTankX
                        mov EnemyTank1X,al
                        mov al,EnemyTankY
                        mov EnemyTank1Y,al
                        mov ax,EnemyTankUp
                        mov EnemyTank1Up,ax
                        mov ax,EnemyTankDown
                        mov EnemyTank1Down,ax
                        mov ax,EnemyTankRight
                        mov EnemyTank1Right,ax
                        mov ax,EnemyTankLeft
                        mov EnemyTank1Left,ax
                        mov al,EnemyLife
                        mov EnemyTank1Life,al
                        mov Enemy1Now,Down
                        mov al,EnemyTankLevel
                        mov EnemyTank1Level,al
                        mov EnemyTank1Dead,0
                        mov Enemy1ScoreChange,0
                        ret

NoMakeEnemyMore:        ret

MakeEnemyTank2:         call MakeEnemyTankLevel
                        ;cmp EnemyTankMade,1
                        ;jz  NoMakeEnemyMore
                        add EnemyTankNumberNow,1
                        add EnemyTankNumber,1
                        mov al,EnemyTankX
                        mov EnemyTank2X,al
                        mov al,EnemyTankY
                        mov EnemyTank2Y,al
                        mov ax,EnemyTankUp
                        mov EnemyTank2Up,ax
                        mov ax,EnemyTankDown
                        mov EnemyTank2Down,ax
                        mov ax,EnemyTankRight
                        mov EnemyTank2Right,ax
                        mov ax,EnemyTankLeft
                        mov EnemyTank2Left,ax
                        mov al,EnemyLife
                        mov EnemyTank2Life,al
                        mov Enemy2Now,Down
                        mov al,EnemyTankLevel
                        mov EnemyTank2Level,al
                        mov EnemyTank2Dead,0
                        mov Enemy2ScoreChange,0
                        ret

MakeEnemyTank3:         call MakeEnemyTankLevel
                        ;cmp EnemyTankMade,1
                        ;jnz NoMakeEnemyMore
                        add EnemyTankNumberNow,1
                        add EnemyTankNumber,1
                        mov al,EnemyTankX
                        mov EnemyTank3X,al
                        mov al,EnemyTankY
                        mov EnemyTank3Y,al
                        mov ax,EnemyTankUp
                        mov EnemyTank3Up,ax
                        mov ax,EnemyTankDown
                        mov EnemyTank3Down,ax
                        mov ax,EnemyTankRight
                        mov EnemyTank3Right,ax
                        mov ax,EnemyTankLeft
                        mov EnemyTank3Left,ax
                        mov al,EnemyLife
                        mov EnemyTank3Life,al
                        mov Enemy3Now,Down
                        mov al,EnemyTankLevel
                        mov EnemyTank3Level,al
                        mov EnemyTank3Dead,0
                        mov Enemy3ScoreChange,0
                        ret

NoMakeEnemyMore1:       ret

MakeEnemyTank4:         call MakeEnemyTankLevel
                        ;cmp EnemyTankMade,1
                        ;jnz NoMakeEnemyMore1
                        add EnemyTankNumberNow,1
                        add EnemyTankNumber,1
                        mov al,EnemyTankX
                        mov EnemyTank4X,al
                        mov al,EnemyTankY
                        mov EnemyTank4Y,al
                        mov ax,EnemyTankUp
                        mov EnemyTank4Up,ax
                        mov ax,EnemyTankDown
                        mov EnemyTank4Down,ax
                        mov ax,EnemyTankRight
                        mov EnemyTank4Right,ax
                        mov ax,EnemyTankLeft
                        mov EnemyTank4Left,ax
                        mov al,EnemyLife
                        mov EnemyTank4Life,al
                        mov Enemy4Now,Down
                        mov al,EnemyTankLevel
                        mov EnemyTank4Level,al
                        mov EnemyTank4Dead,0
                        mov Enemy4ScoreChange,0
                        ret

MakeEnemyTank5:         call MakeEnemyTankLevel
                        ;cmp EnemyTankMade,1
                        ;jnz NoMakeEnemyMore1
                        add EnemyTankNumberNow,1
                        add EnemyTankNumber,1
                        mov al,EnemyTankX
                        mov EnemyTank5X,al
                        mov al,EnemyTankY
                        mov EnemyTank5Y,al
                        mov ax,EnemyTankUp
                        mov EnemyTank5Up,ax
                        mov ax,EnemyTankDown
                        mov EnemyTank5Down,ax
                        mov ax,EnemyTankRight
                        mov EnemyTank5Right,ax
                        mov ax,EnemyTankLeft
                        mov EnemyTank5Left,ax
                        mov al,EnemyLife
                        mov EnemyTank5Life,al
                        mov Enemy5Now,Down
                        mov al,EnemyTankLevel
                        mov EnemyTank5Level,al
                        mov EnemyTank5Dead,0
                        mov Enemy5ScoreChange,0
                        ret

CheckEnemyTankNumber    endp
;-----------------------------------------------------------------------------
MakeEnemyTankLevel      proc
                        call random
                        cmp RandomNumber,0
                        jz MakeEnemyLevel1
                        cmp RandomNumber,1
                        jz MakeEnemyLevel2
                        cmp RandomNumber,3
                        jb MakeEnemyLevel31
                        jmp MakeEnemyLevel4

MakeEnemyLevel31:       jmp MakeEnemyLevel3

MakeEnemyLevel1:        lea si,EnemyTankLevel1Down
                        call Where2PutEnemy
                        cmp EnemyTankMade,0
                        jz NoEnemyMade
                        mov EnemyLife,EnemyLifeLevel1
                        lea si,EnemyTankLevel1Up
                        mov EnemyTankUp,si
                        lea si,EnemyTankLevel1Down
                        mov EnemyTankDown,si
                        lea si,EnemyTankLevel1Right
                        mov EnemyTankRight,si
                        lea si,EnemyTankLevel1Left
                        mov EnemyTankLeft,si
                        mov EnemyTankMade,0
                        mov EnemyTankLevel,Level1
                        ret

NoEnemyMade:            ret

MakeEnemyLevel2:        
                        lea si,EnemyTankLevel2Down
                        call Where2PutEnemy
                        cmp EnemyTankMade,0
                        jz NoEnemyMade
                        mov EnemyLife,EnemyLifeLevel2
                        lea si,EnemyTankLevel2Up
                        mov EnemyTankUp,si
                        lea si,EnemyTankLevel2Down
                        mov EnemyTankDown,si
                        lea si,EnemyTankLevel2Right
                        mov EnemyTankRight,si
                        lea si,EnemyTankLevel2Left
                        mov EnemyTankLeft,si
                        mov EnemyTankMade,0
                        mov EnemyTankLevel,Level2
                        ret

MakeEnemyLevel3:       
                        lea si,EnemyTankLevel3Down
                        call Where2PutEnemy
                        cmp EnemyTankMade,0
                        jz NoEnemyMade
                        mov EnemyLife,EnemyLifeLevel3
                        lea si,EnemyTankLevel3Up
                        mov EnemyTankUp,si
                        lea si,EnemyTankLevel3Down
                        mov EnemyTankDown,si
                        lea si,EnemyTankLevel3Right
                        mov EnemyTankRight,si
                        lea si,EnemyTankLevel3Left
                        mov EnemyTankLeft,si
                        mov EnemyTankMade,0
                        mov EnemyTankLevel,Level3
                        ret

NoEnemyMade1:           ret

MakeEnemyLevel4:        
                        lea si,BossUp
                        call Where2PutEnemy
                        cmp EnemyTankMade,0
                        jz NoEnemyMade1
                        mov EnemyLife,EnemyLifeLevel4
                        lea si,BossUp
                        mov EnemyTankUp,si
                        lea si,BossDown
                        mov EnemyTankDown,si
                        lea si,BossRight
                        mov EnemyTankRight,si
                        lea si,BossLeft
                        mov EnemyTankLeft,si
                        mov EnemyTankMade,0
                        mov EnemyTankLevel,Level4
                        ret

MakeEnemyTankLevel      endp
;-----------------------------------------------------------------------------
Where2PutEnemy          proc
                        call random
                        cmp RandomNumber,1
                        jb PutEnemyTankLeft
                        cmp RandomNumber,3
                        jb PutEnemyTankMiddle1
                        jmp PutEnemyTankRight

PutEnemyTankMiddle1:    jmp PutEnemyTankMiddle

PutEnemyTankLeft:       mov EnemyStartPosition,Left
                        mov XPosition,0
                        mov YPosition,0
                        call CheckXPath
                        cmp ObJectPathOk,1
                        jnz PutEnemyTankMiddle
                        ;mov XPosition,0
                        ;mov YPosition,0
                        ;call CheckYPath
                        ;cmp ObjectPathOk,1
                        ;jnz PutEnemyTankMiddle
                        ;mov XPosition,0
                        ;mov YPosition,12
                        ;call CheckYPath
                        ;cmp ObjectPathOk,1
                        ;jnz PutEnemyTankMiddle
                        ;mov XPosition,16
                        ;mov YPosition,0
                        ;call CheckXPath
                        ;cmp ObjectPathOk,1
                        ;jnz PutEnemyTankMiddle
                        mov XPosition,0
                        mov YPosition,0
                        mov EnemyTankX,0
                        mov EnemyTankY,0
                        call WriteObject
                        mov EnemyTankMade,1
                        ret

CannotPutEnemy1:        mov EnemyTankMade,0
                        ret

PutEnemyTankLeft1:      jmp PutEnemyTankLeft 

PutEnemyTankMiddle:     mov EnemyStartPosition,Middle
                        mov XPosition,96
                        mov YPosition,0
                        call CheckXPath
                        cmp ObjectPathOk,1
                        jnz PutEnemyTankRight
                        ;mov XPosition,96
                        ;mov YPosition,0
                        ;call CheckYPath
                        ;cmp ObjectPathOk,1
                        ;jnz PutEnemyTankLeft1
                        ;mov XPosition,96
                        ;mov YPosition,12
                        ;call CheckYPath
                        ;cmp ObjectPathOk,1
                        ;jnz PutEnemyTankLeft1
                        ;Mov XPosition,112   
                        ;mov YPosition,0
                        ;call CheckXPath
                        ;cmp ObjectPathOk,1
                        ;jnz PutEnemyTankLeft1
                        mov XPosition,96
                        mov YPosition,0
                        mov EnemyTankX,96
                        mov EnemyTankY,0
                        call WriteObject
                        mov EnemyTankMade,1
                        ret


PutEnemyTankRight:      mov EnemyStartPosition,Right
                        mov XPosition,192
                        mov YPosition,0
                        call CheckXPath
                        cmp ObjectPathOk,1
                        jnz NoSpaceLeft
                        ;mov XPosition,192
                        ;mov YPosition,0
                        ;call CheckYPath
                        ;cmp ObjectPathOk,1
                        ;jnz NoSpaceLeft
                        ;mov XPosition,208
                        ;mov YPosition,0
                        ;call CheckXPath
                        ;cmp ObjectPathOk,1
                        ;jnz NoSpaceLeft
                        ;mov XPosition,192
                        ;mov Yposition,12
                        ;call CheckYPath
                        ;cmp ObjectPathOk,1
                        ;jnz NoSpaceleft
                        mov EnemyTankX,192
                        mov EnemyTankY,0
                        mov XPosition,192
                        mov YPosition,0
                        call WriteObject
                        mov EnemyTankMade,1
                        ret

NospaceLeft:            mov EnemyTankMade,0
                        ret

CannotPutEnemy:         mov EnemyTankMade,0
                        ret

Where2PutEnemy          endp
;-----------------------------------------------------------------------------
MoveEnemyTank           proc
                        cmp EnemyTank1Dead,1
                        jz CheckEnemyTank2Dead
                        call EnemyTank1MoveMent

CheckEnemyTank2Dead:    cmp EnemyTank2Dead,1
                        jz CheckEnemyTank3Dead
                        call EnemyTank2MoveMent

CheckEnemyTank3Dead:    cmp EnemyTank3Dead,1
                        jz CheckEnemyTank4Dead
                        call EnemyTank3MoveMent

CheckEnemyTank4Dead:    cmp EnemyTank4Dead,1
                        jz CheckEnemyTank5Dead
                        call EnemyTank4MoveMent

CheckEnemyTank5Dead:    cmp EnemyTank5Dead,1
                        jz NoEnemyTankMoveMent
                        call EnemyTank5MoveMent

NoEnemyTankMoveMent:    ret

MoveEnemyTank           endp
;--------------------------------------------------------------------------------
EnemyTank1MoveMent      proc
                        cmp EnemyTank1Count,0
                        jz EnemyTank1RandomNew9
                        dec EnemyTank1Count
                        cmp EnemyTank1OldDirect,Left
                        jz TryMoveEnemyTank1Left
                        cmp EnemyTank1OldDirect,Right
                        jz TryMoveEnemyTank1Right1
                        cmp EnemyTank1OldDirect,Up
                        jz TryMoveEnemyTank1Up1
                        cmp EnemyTank1OldDirect,Down
                        jz TryMoveEnemyTank1Down1
                        mov EnemyTank1Count,0
                        ret

TryMoveEnemyTank1Right1:jmp TryMoveEnemyTank1Right
TryMoveEnemyTank1Up1:   jmp TryMoveEnemyTank1Up
TryMoveEnemyTank1Down1: jmp TryMoveEnemyTank1Down

EnemyTank1RandomNew9:   mov EnemyTank1Count,0
                        mov EnemyTank1OldDirect,0
                        call Random
                        cmp RandomNumber,0
                        jz TryMoveEnemyTank1UP1
                        cmp RandomNumber,1
                        jz TryMoveEnemyTank1Right1
                        cmp RanDomNumber,2
                        jz TryMoveEnemyTank1Left
                        cmp RanDomNumber,3
                        ja TryMoveEnemyTank1Down1
                        mov EnemyTank1Count,0
                        ret

EnemyTank1RanDomNew:    mov EnemyTank1Count,0
                        ret

TryMoveEnemyTank1Left:  cmp EnemyTank1X,0
                        jz EnemyTank1RandomNew
                        mov al,EnemyTank1X
                        mov XPosition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        sub XPosition,1
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz EnemyTank1RandomNew
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank1Left
                        sub EnemyTank1X,1
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy1Now,Left           
                        mov EnemyTank1OldDirect,Left
                        cmp EnemyTank1Count,0
                        jz UpDateDirect1
                        ret

UpDateDirect1:          mov EnemyTank1Count,DirectCount
                        ret

TryRandomNewPath11:     jmp EnemyTank1RandomNew

TryMoveEnemyTank1Right: cmp EnemyTank1X,192
                        jz TryRandomNewPath1
                        mov al,EnemyTank1X
                        mov XPosition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        add XPosition,16
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath11
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank1Right
                        add EnemyTank1X,1
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy1Now,Right           
                        mov EnemyTank1OldDirect,Right
                        cmp EnemyTank1Count,0
                        jz UpdateDirect1
                        ret

TryRandomNewPath1:      jmp EnemyTank1RandomNew

TryMoveEnemyTank1Up:    cmp EnemyTank1Y,0
                        jz TryRandomNewPath1
                        mov al,EnemyTank1X
                        mov XPosition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        sub YPosition,1
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath1
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank1Up
                        sub EnemyTank1Y,1
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy1Now,Up            
                        mov EnemyTank1OldDirect,up
                        cmp EnemyTank1Count,0
                        jz UpdateDirect12
                        ret

UpdateDirect12:         jmp UpdateDirect1

TryMoveEnemyTank1Down:  cmp EnemyTank1Y,168
                        jz TryRanDomNewPath12
                        mov al,EnemyTank1X
                        mov XPosition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        add YPosition,12
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath12
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank1Down
                        add EnemyTank1Y,1
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy1Now,Down           
                        mov EnemyTank1OldDirect,Down
                        cmp EnemyTank1Count,0
                        jz UpdateDirect12
                        ret

TryRanDomNewPath12:     jmp EnemyTank1RandomNew

EnemyTank1MoveMent      endp
;-----------------------------------------------------------------------------
EnemyTank2MoveMent      proc
                        cmp EnemyTank2Count,0
                        jz EnemyTank2RandomNew9
                        dec EnemyTank2Count
                        cmp EnemyTank2OldDirect,Left
                        jz TryMoveEnemyTank2Left
                        cmp EnemyTank2OldDirect,Right
                        jz TryMoveEnemyTank2Right1
                        cmp EnemyTank2OldDirect,Up
                        jz TryMoveEnemyTank2Up1
                        cmp EnemyTank2OldDirect,Down
                        jz TryMoveEnemyTank2Down1
                        mov EnemyTank2Count,0
                        ret

TryMoveEnemyTank2Right1:jmp TryMoveEnemyTank2Right
TryMoveEnemyTank2Up1:   jmp TryMoveEnemyTank2Up
TryMoveEnemyTank2Down1: jmp TryMoveEnemyTank2Down

EnemyTank2RandomNew9:   mov EnemyTank2Count,0
                        mov EnemyTank2OldDirect,0
                        call Random
                        cmp RandomNumber,0
                        jz TryMoveEnemyTank2UP1
                        cmp RandomNumber,1
                        jz TryMoveEnemyTank2Right1
                        cmp RanDomNumber,2
                        jz TryMoveEnemyTank2Left
                        cmp RanDomNumber,3
                        ja TryMoveEnemyTank2Down1
                        mov EnemyTank2Count,0
                        ret

EnemyTank2RandomNew:    mov EnemyTank2Count,0
                        ret

TryMoveEnemyTank2Left:  cmp EnemyTank2X,0
                        jz EnemyTank2RandomNew
                        mov al,EnemyTank2X
                        mov XPosition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        sub XPosition,1
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz EnemyTank2RandomNew
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank2Left
                        sub EnemyTank2X,1
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy2Now,Left
                        mov EnemyTank2OldDirect,Left
                        cmp EnemyTank2Count,0
                        jz UpDateDirect2
                        ret

UpDateDirect2:          mov EnemyTank2Count,DirectCount
                        ret

TryRandomNewPath21:     jmp EnemyTank2RandomNew

TryMoveEnemyTank2Right: cmp EnemyTank2X,192
                        jz TryRandomNewPath2
                        mov al,EnemyTank2X
                        mov XPosition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        add XPosition,16
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath21
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank2Right
                        add EnemyTank2X,1
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy2Now,Right
                        mov EnemyTank2OldDirect,Right
                        cmp EnemyTank2Count,0
                        jz UpdateDirect2
                        ret

TryRandomNewPath2:      jmp EnemyTank2RandomNew



TryMoveEnemyTank2Up:    cmp EnemyTank2Y,0
                        jz TryRandomNewPath2
                        mov al,EnemyTank2X
                        mov XPosition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        sub YPosition,1
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath2
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank2Up
                        sub EnemyTank2Y,1
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy2Now,Up
                        mov EnemyTank2OldDirect,up
                        cmp EnemyTank2Count,0
                        jz UpdateDirect22
                        ret

UpdateDirect22:         jmp UpdateDirect2

TryMoveEnemyTank2Down:  cmp EnemyTank2Y,168
                        jz TryRanDomNewPath22
                        mov al,EnemyTank2X
                        mov XPosition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al
                        add YPosition,12
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath22
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank2Down
                        add EnemyTank2Y,1
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy2Now,Down
                        mov EnemyTank2OldDirect,Down
                        cmp EnemyTank2Count,0
                        jz UpdateDirect22
                        ret

TryRanDomNewPath22:     jmp EnemyTank2RandomNew

EnemyTank2MoveMent      endp
;-----------------------------------------------------------------------------
EnemyTank3MoveMent      proc
                        cmp EnemyTank3Count,0
                        jz EnemyTank3RandomNew9
                        dec EnemyTank3Count
                        cmp EnemyTank3OldDirect,Left
                        jz TryMoveEnemyTank3Left
                        cmp EnemyTank3OldDirect,Right
                        jz TryMoveEnemyTank3Right1
                        cmp EnemyTank3OldDirect,Up
                        jz TryMoveEnemyTank3Up1
                        cmp EnemyTank3OldDirect,Down
                        jz TryMoveEnemyTank3Down1
                        mov EnemyTank3Count,0
                        ret

TryMoveEnemyTank3Right1:jmp TryMoveEnemyTank3Right
TryMoveEnemyTank3Up1:   jmp TryMoveEnemyTank3Up
TryMoveEnemyTank3Down1: jmp TryMoveEnemyTank3Down

EnemyTank3RandomNew9:   mov EnemyTank3Count,0
                        mov EnemyTank3OldDirect,0
                        call Random
                        cmp RandomNumber,0
                        jz TryMoveEnemyTank3UP1
                        cmp RandomNumber,1
                        jz TryMoveEnemyTank3Right1
                        cmp RanDomNumber,2
                        jz TryMoveEnemyTank3Left
                        cmp RanDomNumber,3
                        ja TryMoveEnemyTank3Down1
                        mov EnemyTank3Count,0
                        ret

EnemyTank3RandomNew:    mov EnemyTank3Count,0
                        ret

TryMoveEnemyTank3Left:  cmp EnemyTank3X,0
                        jz EnemyTank3RandomNew
                        mov al,EnemyTank3X
                        mov XPosition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        sub XPosition,1
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz EnemyTank3RandomNew
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank3Left
                        sub EnemyTank3X,1
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy3Now,Left
                        mov EnemyTank3OldDirect,Left
                        cmp EnemyTank3Count,0
                        jz UpDateDirect3
                        ret

UpDateDirect3:          mov EnemyTank3Count,DirectCount
                        ret

TryRandomNewPath31:     jmp EnemyTank3RandomNew

TryMoveEnemyTank3Right: cmp EnemyTank3X,192
                        jz TryRandomNewPath3
                        mov al,EnemyTank3X
                        mov XPosition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        add XPosition,16
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath31
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank3Right
                        add EnemyTank3X,1
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy1Now,Right
                        mov EnemyTank3OldDirect,Right
                        cmp EnemyTank3Count,0
                        jz UpdateDirect3
                        ret

TryRandomNewPath3:      jmp EnemyTank3RandomNew



TryMoveEnemyTank3Up:    cmp EnemyTank3Y,0
                        jz TryRandomNewPath3
                        mov al,EnemyTank3X
                        mov XPosition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        sub YPosition,1
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath3
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank3Up
                        sub EnemyTank3Y,1
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy3Now,Up
                        mov EnemyTank3OldDirect,up
                        cmp EnemyTank3Count,0
                        jz UpdateDirect32
                        ret

UpdateDirect32:         jmp UpdateDirect3

TryMoveEnemyTank3Down:  cmp EnemyTank3Y,168
                        jz TryRanDomNewPath32
                        mov al,EnemyTank3X
                        mov XPosition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al
                        add YPosition,12
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath32
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank3Down
                        add EnemyTank3Y,1
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy3Now,Down
                        mov EnemyTank3OldDirect,Down
                        cmp EnemyTank3Count,0
                        jz UpdateDirect32
                        ret

TryRanDomNewPath32:     jmp EnemyTank3RandomNew

EnemyTank3MoveMent      endp
;-----------------------------------------------------------------------------
EnemyTank4MoveMent      proc
                        cmp EnemyTank4Count,0
                        jz EnemyTank4RandomNew9
                        dec EnemyTank4Count
                        cmp EnemyTank4OldDirect,Left
                        jz TryMoveEnemyTank4Left
                        cmp EnemyTank4OldDirect,Right
                        jz TryMoveEnemyTank4Right1
                        cmp EnemyTank4OldDirect,Up
                        jz TryMoveEnemyTank4Up1
                        cmp EnemyTank4OldDirect,Down
                        jz TryMoveEnemyTank4Down1
                        mov EnemyTank4Count,0
                        ret

EnemyTank4RandomNew:    mov EnemyTank4Count,0
                        ret

TryMoveEnemyTank4Right1:jmp TryMoveEnemyTank4Right
TryMoveEnemyTank4Up1:   jmp TryMoveEnemyTank4Up
TryMoveEnemyTank4Down1: jmp TryMoveEnemyTank4Down

EnemyTank4RandomNew9:   mov EnemyTank4Count,0
                        mov EnemyTank4OldDirect,0
                        call Random
                        cmp RandomNumber,0
                        jz TryMoveEnemyTank4UP1
                        cmp RandomNumber,1
                        jz TryMoveEnemyTank4Right1
                        cmp RanDomNumber,2
                        jz TryMoveEnemyTank4Left
                        cmp RanDomNumber,3
                        ja TryMoveEnemyTank4Down1
                        mov EnemyTank4Count,0
                        ret

TryMoveEnemyTank4Left:  cmp EnemyTank4X,0
                        jz EnemyTank4RandomNew
                        mov al,EnemyTank4X
                        mov XPosition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        sub XPosition,1
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz EnemyTank4RandomNew
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank4Left
                        sub EnemyTank4X,1
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy4Now,Left
                        mov EnemyTank4OldDirect,Left
                        cmp EnemyTank4Count,0
                        jz UpDateDirect4
                        ret

UpDateDirect4:          mov EnemyTank4Count,DirectCount
                        ret

TryRandomNewPath41:     jmp EnemyTank4RandomNew

TryMoveEnemyTank4Right: cmp EnemyTank4X,192
                        jz TryRandomNewPath4
                        mov al,EnemyTank4X
                        mov XPosition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        add XPosition,16
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath41
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank4Right
                        add EnemyTank4X,1
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy4Now,Right
                        mov EnemyTank4OldDirect,Right
                        cmp EnemyTank4Count,0
                        jz UpdateDirect4
                        ret

TryRandomNewPath4:      jmp EnemyTank4RandomNew



TryMoveEnemyTank4Up:    cmp EnemyTank4Y,0
                        jz TryRandomNewPath4
                        mov al,EnemyTank4X
                        mov XPosition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        sub YPosition,1
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath4
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank4Up
                        sub EnemyTank4Y,1
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy4Now,Up
                        mov EnemyTank4OldDirect,up
                        cmp EnemyTank4Count,0
                        jz UpdateDirect42
                        ret

UpdateDirect42:         jmp UpdateDirect4

TryMoveEnemyTank4Down:  cmp EnemyTank4Y,168
                        jz TryRanDomNewPath42
                        mov al,EnemyTank4X
                        mov XPosition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        add YPosition,12
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath42
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank4Down
                        add EnemyTank4Y,1
                        mov al,EnemyTank4X
                        mov EnemyTankX,al
                        mov al,EnemyTank4Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy4Now,Down
                        mov EnemyTank4OldDirect,Down
                        cmp EnemyTank4Count,0
                        jz UpdateDirect42
                        ret

TryRanDomNewPath42:     jmp EnemyTank4RandomNew

EnemyTank4MoveMent      endp
;-----------------------------------------------------------------------------
EnemyTank5MoveMent      proc
                        cmp EnemyTank5Count,0
                        jz EnemyTank5RandomNew9
                        dec EnemyTank5Count
                        cmp EnemyTank5OldDirect,Left
                        jz TryMoveEnemyTank5Left
                        cmp EnemyTank5OldDirect,Right
                        jz TryMoveEnemyTank5Right1
                        cmp EnemyTank5OldDirect,Up
                        jz TryMoveEnemyTank5Up1
                        cmp EnemyTank5OldDirect,Down
                        jz TryMoveEnemyTank5Down1
                        mov EnemyTank5Count,0
                        ret

EnemyTank5RandomNew:    mov EnemyTank5Count,0
                        ret

TryMoveEnemyTank5Right1:jmp TryMoveEnemyTank5Right
TryMoveEnemyTank5Up1:   jmp TryMoveEnemyTank5Up
TryMoveEnemyTank5Down1: jmp TryMoveEnemyTank5Down

EnemyTank5RandomNew9:   mov EnemyTank5Count,0
                        mov EnemyTank5OldDirect,0
                        call Random
                        cmp RandomNumber,0
                        jz TryMoveEnemyTank5UP1
                        cmp RandomNumber,1
                        jz TryMoveEnemyTank5Right1
                        cmp RanDomNumber,2
                        jz TryMoveEnemyTank5Left
                        cmp RanDomNumber,3
                        ja TryMoveEnemyTank5Down1
                        mov EnemyTank5Count,0
                        ret

TryMoveEnemyTank5Left:  cmp EnemyTank5X,0
                        jz EnemyTank5RandomNew
                        mov al,EnemyTank5X
                        mov XPosition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        sub XPosition,1
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz EnemyTank5RandomNew
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank5Left
                        sub EnemyTank5X,1
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy5Now,Left
                        mov EnemyTank5OldDirect,Left
                        cmp EnemyTank5Count,0
                        jz UpDateDirect5
                        ret

UpDateDirect5:          mov EnemyTank5Count,DirectCount
                        ret

TryRandomNewPath51:     jmp EnemyTank5RandomNew

TryMoveEnemyTank5Right: cmp EnemyTank5X,192
                        jz TryRandomNewPath5
                        mov al,EnemyTank5X
                        mov XPosition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        add XPosition,16
                        call CheckXPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath51
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank5Right
                        add EnemyTank5X,1
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy5Now,Right
                        mov EnemyTank5OldDirect,Right
                        cmp EnemyTank5Count,0
                        jz UpdateDirect5
                        ret

TryRandomNewPath5:      jmp EnemyTank5RandomNew

TryMoveEnemyTank5Up:    cmp EnemyTank5Y,0
                        jz TryRandomNewPath5
                        mov al,EnemyTank5X
                        mov XPosition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        sub YPosition,1
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath5
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank5Up
                        sub EnemyTank5Y,1
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy5Now,Up
                        mov EnemyTank5OldDirect,up
                        cmp EnemyTank5Count,0
                        jz UpdateDirect52
                        ret

UpdateDirect52:         jmp UpdateDirect5

TryMoveEnemyTank5Down:  cmp EnemyTank5Y,168
                        jz TryRanDomNewPath52
                        mov al,EnemyTank5X
                        mov XPosition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        add YPosition,12
                        call CheckYPath
                        cmp EnemyTankPathOk,1
                        jnz TryRandomNewPath52
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov si,EnemyTank5Down
                        add EnemyTank5Y,1
                        mov al,EnemyTank5X
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y
                        mov EnemyTankY,al
                        call WriteEnemyTank
                        mov Enemy5Now,Down
                        mov EnemyTank5OldDirect,Down
                        cmp EnemyTank5Count,0
                        jz UpdateDirect52
                        ret

TryRanDomNewPath52:     jmp EnemyTank5RandomNew

EnemyTank5MoveMent      endp
;-----------------------------------------------------------------------------
;------------------------------------------------------------------------------

;-----------------------------------------------------------------------------
MissileMoveRight        proc
                        cmp MyMissileX,190
                        ja ReachRightWall
                        mov al,MyMissileX
                        mov XPosition,al
                        add XPosition,17
                        mov al,MyMissileY
                        mov YPosition,al
                        call CheckXPath
                        call EraseMyMissile
                        cmp MyMissilePathOk,0
                        jz CannotMoveRight
                        add MyMissileX,2
                        call WriteMyMissile
                        mov MyMissileDead,0
                        ret

CannotMoveRight:        mov al,MyMissileX
                        mov FoundObjectX,al
                        add FoundObjectX,17
                        mov al,MyMissileY
                        mov FoundObjectY,al
                        call CheckEnemyTankDie
                        mov MyMissileDead,1
                        mov MyMissileRight,0
                        ret

ReachRightWall:         mov MyMissileDead,1
                        mov MyMissileRight,0
                        call EraseMyMissile
                        ret

MissileMoveRight        endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
MissileMoveLeft         proc
                        cmp MyMissileX,2
                        jb ReachLeftWall
                        mov al,MyMissileX
                        mov XPosition,al
                        sub XPosition,2
                        mov al,MyMissileY
                        mov YPosition,al
                        mov al,MyMissileX
                        call CheckXPath
                        call EraseMyMissile
                        cmp MyMissilePathOk,0
                        jz CannotMoveLeft
                        sub MyMissileX,2
                        call WriteMyMissile
                        mov MyMissileDead,0
                        ret

CannotMoveLeft:         mov al,MyMissileX
                        mov FoundObjectX,al
                        sub FoundObjectX,2
                        mov al,MyMissileY
                        mov FoundObjectY,al
                        mov MyMissileDead,1
                        mov MyMissileLeft,0
                        call CheckEnemyTankDie
                        ret

ReachLeftWall:          call EraseMyMissile
                        mov MyMissileDead,1
                        mov MyMissileLeft,0
                        ret

MissileMoveLeft         endp
;-----------------------------------------------------------------------------

;----------------------------------------------------------------------------
MissileMoveUp           proc
                        cmp MyMissileY,2
                        jz ReachUpWall
                        mov al,MyMissileY
                        mov YPosition,al
                        sub YPosition,2
                        mov al,MyMissileX
                        mov XPosition,al
                        call CheckYPath
                        call EraseMyMissile
                        cmp MyMissilePathOk,0
                        jz CannotMoveUp
                        sub MyMissileY,2
                        call WriteMyMissile
                        mov MyMissileDead,0
                        ret

CannotMoveUp:           mov al,MyMissileX
                        mov FoundObjectX,al
                        mov al,MyMissileY
                        mov FoundObjectY,al
                        sub FoundObjectY,2
                        mov MyMissileDead,1
                        mov MyMissileUp,0
                        call CheckEnemyTankDie
                        ret

ReachUpWall:            call EraseMyMissile
                        mov MyMissileDead,1
                        mov MyMissileUp,0
                        ret

MissileMoveUp           endp
;----------------------------------------------------------------------------
;----------------------------------------------------------------------------
MissileMoveDown         proc
                        cmp MyMissileY,168
                        ja ReachDownWall
                        mov al,MyMissileY
                        mov YPosition,al
                        add YPosition,13
                        mov al,MyMissileX
                        mov XPosition,al
                        call CheckYPath
                        call EraseMyMissile
                        cmp MyMissilePathOk,0
                        jz CannotMoveDown      ;Have Blocks
                        add MyMissileY,2
                        call WriteMyMissile
                        mov MyMissileDead,0
                        ret

CannotMoveDown:         mov al,MyMissileX
                        mov FoundObjectX,al
                        mov al,MyMissileY
                        mov FoundObjectY,al
                        add FoundObjectY,13
                        mov MyMissileDead,1
                        mov MyMissileDown,0
                        call CheckEnemyTankDie
                        ret

ReachDownWall:          call EraseMyMissile
                        mov MyMissileDead,1
                        mov MyMissileDown,0
                        ret

MissileMoveDown         endp
;-----------------------------------------------------------------------------


;------------------------------------------------------------------------------
InstallNewInt9          proc
                        mov ah,35h
                        mov al,15h
                        int 21h
                        mov word ptr OldInt9Address,bx
                        mov word ptr OldInt9Address[2],es
                        mov ah,25h
                        mov al,15h
                        mov dx,offset NewInt9Handler
                        int 21h

                        ret

InstallNewInt9          endp
;-------------------------------------------------------------------------------
RemoveNewInt9           proc
                        mov ax,word ptr OldInt9Address[2]
                        mov ds,ax
                        mov ah,25h
                        mov al,15h
                        mov dx,word ptr OldInt9Address
                        int 21h

                        ret
RemoveNewInt9           endp
;------------------------------------------------------------------------------
NewInt9Handler          proc
                        cmp ah,4fh
                        jnz NotIntercept1
                        test al,80h
                        jnz NoKeyPress
                        mov KeyPress,1
                        jmp NokeyPress

NotIntercept1:          jmp NotIntercept

NoKeyPress:             cmp al,4bh
                        jnz NoLeftOn
                        mov LeftToggle,1

NoLeftOn:               cmp al,0cbh
                        jnz NoLeftOff
                        mov LeftToggle,0

NoLeftOff:              cmp al,4dh
                        jnz NoRightOn
                        mov RightToggle,1

NoRightOn:              cmp al,0cdh
                        jnz NoRightOff
                        mov RightToggle,0

NoRightOff:             cmp al,48h
                        jnz NoUpOn
                        mov UpToggle,1

NoUpOn:                 cmp al,0c8h
                        jnz NoUpOff
                        mov UpToggle,0

NoUpOff:                cmp al,50h
                        jnz NoDownOn
                        mov DownToggle,1

NoDownOn:               cmp al,0d0h
                        jnz NoDownOff
                        mov DownToggle,0

NoDownOff:              cmp al,39h
                        jnz NoFireOn
                        mov FireToggle,1

NoFireOn:               cmp al,0b9h
                        jnz NoFireOff
                        mov FireToggle,0

NoFireOff:              cmp al,01h
                        jnz NoEscOn
                        mov ExitToggle,1

NoEscOn:                cmp al,1fh
                        jnz NotIntercept
                        mov SoundToggle,1

NotIntercept:           mov StoreAX,ax
                        mov ax,40:[01ch]
                        mov 40:[01ah],ax
                        mov ax,StoreAX
                        clc

                        iret

NewInt9Handler          endp
;------------------------------------------------------------------------------
Random                  proc

                        push ax
                        push cx
                        push dx
                        mov ah,0
                        int 1ah
                        mov ax,dx
                        ror ax,1
                        cmp RandomNumber,0FEH
                        jz Changetoa
                        add al,RandomNumber
                        mov cx,5
                        xor dx,dx
                        div cx
                        mov RandomNumber,dl

                        pop dx
                        pop cx
                        pop ax

                        ret

Changetoa:              mov RandomNumber,0
                        ret

Random                  endp
;-----------------------------------------------------------------------------
MakeMap                 proc
                        mov ObjectCount,196
                        mov ax,cs
                        mov es,ax
                        lea di,VideoBuffer1
                        mov ObjectColumnCount,13
                        mov ObjectRowCount,15


LoadNextObject:         lodsb
                        mov Object,al
                        dec ObjectCount
                        cmp ObjectCount,0
                        jz MakeMapDone
                        push si
                        mov OldDI,di
                        call CheckObject
                        call DisplayObject
                        pop si
                        dec ObjectColumnCount
                        cmp ObjectColumnCount,0
                        jz DisPlayNextRow
                        mov di,OldDI
                        add di,16
                        jmp LoadNextObject

DisPlayNextRow:         add di,2304
                        dec ObjectRowCount
                        mov ObJectColumnCount,13
                        cmp ObjectRowCount,0
                        jnz LoadNextObject

MakeMapDone:            ret

MakeMap                 endp
;------------------------------------------------------------------------------


;------------------------------------------------------------------------------
CheckObject             proc
                        cld
                        cmp Object,'c'
                        jz WriteConcrete
                        cmp Object,'b'
                        jz WriteBlock
                        cmp Object,'w'
                        jz WriteWater
                        cmp Object,' '
                        jz WriteSpace
                        cmp Object,'a'
                        jz WriteAngle
                        cmp Object,'t'
                        jz WriteMytankUp
                        mov ah,0
                        mov al,3
                        int 10h
                        mov ah,9
                        lea dx,MapErrorMsg
                        int 21h
                        jmp exit

WriteConcrete:          lea si,Concrete
                        ret

WriteBlock:             lea si,Block
                        ret

WriteWater:             lea si,Water
                        ret

WriteAngle:             lea si,Angle
                        ret

WriteSpace:             lea si,Space
                        ret

WriteMyTankUp:         lea si,MytankUp
                        ret

CheckObject             endp
;------------------------------------------------------------------------------
; Input :  DI Point to Destination Video memory or Video Buffer
;       :  SI Point to Source picture <12x16>
;       :  VideoMode - 1.> UseVideoMem , 2.> UseVideoBuffer
DisPlayObject           proc
                        ;push si
                        push di
                        push cx
                        push dx
                        push ax
                        cmp VideoMode,UseVideoMem
                        jz UseSegmentVideoMem

UseSegmentVideoBuffer:  mov ax,cs
                        mov es,ax
                        jmp UseSegmentOk

UseSegmentVideoMem:     mov ax,0a000h
                        mov es,ax

UseSegMentOk:           mov cx,16     ;Column counter
                        mov dl,12     ; Row Counter

DisPlayNextColumn:      movsb
                        dec cx
                        cmp cx,0
                        jnz DisplayNextColumn
                        add di,VideoMode
                        dec dl
                        mov cx,16
                        cmp dl,0
                        jnz DisPlayNextColumn
                        pop ax
                        pop dx
                        pop cx
                        pop di
                        ;pop si
                        ret

DisPlayObject           endp
;------------------------------------------------------------------------------
VideoBuff12Mem          proc
                        push ax
                        push si
                        push di
                        push cx
                        push dx
                        lea si,VideoBuffer1
                        mov ax,0a000h
                        mov es,ax
                        mov di,3210
                        mov cl,208
                        mov dl,180
                        cld

StoNextColumn:          movsb
                        dec cl
                        cmp cl,0
                        jnz StoNextColumn
                        add di,112
                        dec dl
                        mov cl,208
                        cmp dl,0
                        jnz StoNextColumn
                        pop dx
                        pop cx
                        pop di
                        pop si
                        pop ax
                        ret

VideoBuff12Mem          endp
;------------------------------------------------------------------------------
VideoMem2Buff1          proc
                        push ax
                        push si
                        push di
                        push dx
                        push cx
                        mov ax,0a000h
                        mov ds,ax
                        mov si,3210
                        mov ax,cs
                        mov es,ax
                        lea di,VideoBuffer1
                        mov cl,208
                        mov dl,180
                        cld

ReadNextColumn:         movsb
                        dec cl
                        cmp cl,0
                        jnz ReadNextColumn
                        add si,112
                        dec dl
                        mov cl,208
                        cmp dl,0
                        jnz ReadNextColumn
                        pop cx
                        pop dx
                        pop di
                        pop si
                        pop ax
                        ret

VideoMem2Buff1          endp
;-------------------------------------------------------------------------------
ClearVideoBuffer1       proc
                        mov ax,cs
                        mov es,ax
                        cld
                        lea di,VideoBuffer1
                        mov cx,37440
                        xor ax,ax
                        repnz stosb
                        ret
ClearVideoBuffer1       endp
;-----------------------------------------------------------------------------
; Input :               Xposition  , Yposition
;                       TestObject
;
; Output:               Write Object to Position at Video Buffer
;

WriteObject             proc
                        push ax
                        push cx
                        push dx
                        push di
                        mov ax,cs
                        mov es,ax
                        lea di,VideoBuffer1
                        mov ax,208
                        mul Yposition
                        xor dx,dx
                        mov dl,Xposition
                        add ax,dx
                        add di,ax
                        cmp TestObject,1
                        jnz NotTestObject

NowTestObject:          mov al,[di]
                        cmp al,0
                        jnz HaveObject
                        jmp NotHaveObject

NotTestObject:          mov VideoMode,UseVideoBuffer
                        call DisPlayObject

EndWriteObject:         pop di
                        pop dx
                        pop cx
                        pop ax
                        ret

NotHaveObject:          mov ObjectFoundPosition,di
                        mov HadObject,0
                        jmp EndWriteObject



HaveObject:             mov HadObject,1
                        jmp EndWriteObject

WriteObject             endp
;------------------------------------------------------------------------------
; Input :               Xposition , Yposition
; Output :              Clear Object on RealPosition

EraseObject             proc
                        mov TestObject,0
                        lea si,space
                        call WriteObject
                        ret

EraseObject             endp
;-----------------------------------------------------------------------------
WriteMyTank             proc
                        mov al,MyTankX
                        mov Xposition,al
                        mov al,MyTankY
                        mov Yposition,al
                        mov TestObject,0
                        call WriteObject
                        ret

WriteMyTank             endp
;----------------------------------------------------------------------------
WriteEnemyTank          proc
                        mov al,EnemyTankX
                        mov XPosition,al
                        mov al,EnemyTankY
                        mov YPosition,al
                        mov TestObject,0
                        call WriteObject
                        ret

WriteEnemyTank          endp
;----------------------------------------------------------------------------
WriteMyMissile          proc
                        lea si,MyMissile
                        mov al,MyMissileX
                        mov XPosition,al
                        mov al,MyMissileY
                        mov YPosition,al
                        mov TestObject,0
                        call WriteObject
                        ret

WriteMyMissile          endp
;------------------------------------------------------------------------------
;----------------------------------------------------------------------------
WriteEnemyMissile       proc
                        lea si,EnemyMissile
                        mov al,EnemyMissileX
                        mov XPosition,al
                        mov al,EnemyMissileY
                        mov YPosition,al
                        mov TestObject,0
                        call WriteObject
                        ret

WriteEnemyMissile          endp
;------------------------------------------------------------------------------
EraseMytank             proc
                        mov al,MyTankX
                        mov Xposition,al
                        mov al,MyTankY
                        mov Yposition,al
                        call EraseObject
                        ret

EraseMytank             endp
;----------------------------------------------------------------------------
;------------------------------------------------------------------------------
EraseEnemytank          proc
                        mov al,EnemyTankX
                        mov Xposition,al
                        mov al,EnemyTankY
                        mov Yposition,al
                        call EraseObject
                        ret

EraseEnemytank             endp
;----------------------------------------------------------------------------
EraseMyMissile          proc
                        mov al,MyMissileX
                        mov XPosition,al
                        mov al,MyMissileY
                        mov YPosition,al
                        call EraseObject
                        ret

EraseMyMissile          endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------
EraseEnemyMissile       proc
                        mov al,EnemyMissileX
                        mov XPosition,al
                        mov al,EnemyMissileY
                        mov YPosition,al
                        call EraseObject
                        ret

EraseEnemyMissile          endp
;-----------------------------------------------------------------------------
CheckMyTankMove         proc
                        cmp RightToggle,1
                        jnz MyTankNoMoveRight

MyTankMoveRight:        cmp MyTankX,192
                        jz NotMoveRightButDisplay
                        mov al,MyTankX
                        mov XPosition,al
                        add XPosition,16
                        mov al,MyTankY
                        mov YPosition,al
                        call CheckXPath
                        call EraseMyTank
                        cmp MyTankPathOk,0
                        jz NotMoveRightButDisplay

                        add MyTankX,1

NotMoveRightButDisplay: lea si,MyTankRight
                        call WriteMyTank
                        mov MyTankNow,MyTankNowRight
                        ret


MyTankNoMoveRight:      cmp LeftToggle,1
                        jnz MyTankNoMoveLeft

MyTankMoveLeft:         cmp MyTankX,0
                        jz NotMoveLeftButDisplay
                        mov al,MyTankX
                        mov XPosition,al
                        sub XPosition,1
                        mov al,MyTankY
                        mov YPosition,al
                        call CheckXPath
                        call EraseMyTank
                        cmp MyTankPathOk,0
                        jz NotMoveLeftButDisplay

                        sub MyTankX,1

NotMoveLeftButDisplay:  lea si,MyTankLeft
                        call WriteMyTank
                        mov MyTankNow,MyTankNowLeft
                        ret

NoMoreMove1:            ret

MyTankNoMoveLeft:       cmp UpToggle,1
                        jnz MyTankNoMoveUp

MyTankMoveUp:           cmp MyTankY,0
                        jz NotMoveUpButDisplay
                        mov al,MyTankY
                        mov YPosition,al
                        sub YPosition,1
                        mov al,MyTankX
                        mov XPosition,al
                        call CheckYPath
                        call EraseMyTank
                        cmp MyTankPathOk,0
                        jz NotMoveUpButDisplay

                        sub MyTankY,1

NotMoveUpButDisplay:    lea si,MyTankUp
                        call WriteMyTank
                        mov MyTankNow,MyTankNowUp
                        ret

MyTankNoMoveUp:         cmp DownToggle,1
                        jnz NoMoreMove

MyTankMoveDown:         cmp MyTankY,168
                        jz NotMoveDownButDisplay
                        mov al,MyTankY
                        mov YPosition,al
                        add YPosition,12
                        mov al,MyTankX
                        mov XPosition,al
                        call CheckYPath
                        call EraseMyTank
                        cmp MyTankPathOk,0
                        jz NotMoveDownButDisplay

                        add MyTankY,1

NotMoveDownButDisplay:  lea si,MyTankDown
                        call WriteMyTank
                        mov MyTankNow,MyTankNowDown

NoMoreMove:             ret

CheckMyTankMove         endp
;-----------------------------------------------------------------------------
CheckXPath              proc
                        push cx
                        mov TestObject,1
                        mov cx,12

StillCheckXPath:        call WriteObject
                        cmp HadObject,1
                        jz XPathNotOk
                        add YPosition,1
                        loop StillCheckXPath
                        mov MyTankPathOk,1
                        mov MyMissilePathOk,1
                        mov EnemyTankPathOk,1
                        mov ObjectPathOk,1
                        mov TestObject,0
                        pop cx
                        ret

XPathNotOk:             mov MyTankPathOk,0
                        mov EnemyTankPathOk,0
                        mov MyMissilePathOk,0
                        mov ObjectPathOk,0
                        mov TestObject,0
                        pop cx
                        ret

CheckXPath          endp
;------------------------------------------------------------------------------
;------------------------------------------------------------------------------
CheckYPath              proc
                        push cx
                        mov cx,16
                        mov TestObject,1

StillCheckYPath:        call WriteObject
                        cmp HadObject,1
                        jz YPathNotOk
                        add XPosition,1
                        loop StillCheckYPath
                        mov MyTankPathOk,1
                        mov MyMissilePathOk,1
                        mov ObjectPathOk,1
                        mov EnemyTankPathOk,1
                        mov TestObject,0
                        pop cx
                        ret

YPathNotOk:             mov MyTankPathOk,0
                        mov MyMissilePathOk,0
                        mov EnemyTankPathOk,0
                        mov ObjectPathOk,0
                        mov TestObject,0
                        pop cx
                        ret

CheckYPath             endp
;-----------------------------------------------------------------------------
CalObject               proc

                        mov al,FireX
                        mov ah,FireY
                        mov dl,EnemyX
                        mov dh,EnemyY

CheckX:                 cmp al,dl
                        jae A
                        jb B

CompareResultX:         cmp Result,16
                        jbe CheckY
                        ja ObjectNotOk

CheckY:                 cmp ah,dh
                        jae C
                        jb D

CompareResultY:         cmp Result,12
                        jbe ObjectOk
                        ja ObjectNotOk

a:                      sub al,dl
                        mov Result,al
                        jmp CompareResultX

b:                      sub dl,al
                        mov Result,dl
                        jmp CompareResultX

c:                      sub ah,dh
                        mov Result,ah
                        jmp CompareResultY

d:                      sub dh,ah
                        mov Result,dh
                        jmp CompareResultY

ObJectOk:               mov ObjectFound,1
                        ret

ObjectNotOk:            mov ObjectFound,0
                        ret

CalObject               endp
;-----------------------------------------------------------------------------
CheckEnemyTankDie       proc
                        call CheckEnemy1Die
                        call CheckEnemy2Die
                        call CheckEnemy3Die
                        call CheckEnemy4Die
                        call CheckEnemy5Die
                        ret

CheckEnemyTankDie       endp
;-----------------------------------------------------------------------------
;----------------------------------------------------------------------------------
DelayDiablo             proc
                        mov ah,0
                        int 1ah
                        add dl,1
                        mov PauseCounter,dl

NotReachTime:           mov ah,0
                        int 1ah
                        cmp dl,PauseCounter
                        jnz NotReachTime
                        ret

DelayDiablo             endp
;--------------------------------------------------------------------------------
DelayDiablo2            proc
                        mov cx,0FFFFH
                        mov bl,2

LoopDec1:               dec cx
                        cmp cx,0
                        jnz LoopDec1
                        mov cx,0FFFFh
                        dec bl
                        cmp bl,0
                        jnz LoopDec1
                        ret
DelayDiablo2            endp
;----------------------------------------------------------------------------
DelayDiablo3            proc
                        mov ah,0
                        int 1ah
                        inc dh
                        mov PauseCounter,dh
StillNotReachDelayTime: mov ah,0
                        int 1ah
                        cmp PauseCounter,dh
                        jnz StillNotReachDelayTime
                        ret

DelayDiablo3            endp
;-----------------------------------------------------------------------------------
MakeDiabloTank          proc
                        mov DiabloCount,330
                        mov ax,0a000h
                        mov es,ax
                        mov ax,cs
                        mov ds,ax
                        mov ObjectColumnCount,21
                        mov ObjectRowCount,17
                        mov di,1280

LoadNextDiablo:         lodsb
                        mov Object,al
                        dec DiabloCount
                        cmp DiabloCount,0
                        jz MakeDiabloDone
                        push si
                        mov OldDI,di
                        call CheckObject
                        mov VideoMode,UseVideoMem
                        call DelayDiablo2
                        call DisplayObject
                        pop si
                        dec ObjectColumnCount
                        cmp ObjectColumnCount,0
                        jz DiabloNextRow
                        mov di,OldDI
                        add di,16
                        jmp LoadNextDiablo

DiabloNextRow:          add di,3536
                        dec ObjectRowCount
                        mov ObJectColumnCount,20
                        cmp ObjectRowCount,0
                        jnz LoadNextDiablo

MakeDiabloDone:         ret



MakeDiabloTank          endp



;-----------------------------------------------------------------------------

CheckEnemy1Die          proc
                        cmp EnemyTank1Dead,1
                        jz NotCheck1
                        cmp EnemyTank1Life,0
                        jz Enemy1Die
                        mov al,EnemyTank1X
                        mov EnemyX,al
                        mov al,EnemyTank1Y
                        mov EnemyY,al
                        mov al,FoundObjectX
                        mov FireX,al
                        mov al,FoundObjectY
                        mov FireY,al
                        call CalObject
                        cmp ObjectFound,1
                        jz ReduceEnemy1Life

NotCheck1:              ret

ReduceEnemy1Life:       dec EnemyTank1Life
                        cmp EnemyTank1Life,0
                        jz Enemy1Die
                        ret

Enemy1Die:              mov al,EnemyTank1Level
                        mov EnemyTankLevel,al
                        call EnemyCheckScore
                        mov Enemy1ScoreChange,1
                        mov al,EnemyTank1X
                        mov EnemyTankX,al
                        mov al,EnemyTank1Y
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        mov EnemyTank1Dead,1
                        dec EnemyTankNumber
                        mov al,EnemyTank1X
                        mov XPOsition,al
                        mov al,EnemyTank1Y
                        mov YPosition,al
                        call EnemyBomb
                        ret

CheckEnemy1Die          endp
;----------------------------------------------------------------------------
;-----------------------------------------------------------------------------
CheckEnemy2Die          proc
                        cmp EnemyTank2Dead,1
                        jz NotCheck2
                        cmp EnemyTank2Life,0
                        jz Enemy1Die
                        mov al,EnemyTank2X
                        mov EnemyX,al
                        mov al,EnemyTank2Y
                        mov EnemyY,al
                        mov al,FoundObjectX
                        mov FireX,al
                        mov al,FoundObjectY
                        mov FireY,al
                        call CalObject
                        cmp ObjectFound,1
                        jz ReduceEnemy2Life
                        ret

NotCheck2:              ret

ReduceEnemy2Life:       dec EnemyTank2Life
                        cmp EnemyTank2Life,0
                        jz Enemy2Die
                        ret

Enemy2Die:              mov al,EnemyTank2Level
                        mov EnemyTankLevel,al
                        call EnemyCheckScore
                        mov Enemy2ScoreChange,1
                        mov al,EnemyTank2X
                        mov EnemyTankX,al
                        mov al,EnemyTank2Y                      
                        mov EnemyTankY,al
                        call EraseEnemyTank
                        dec EnemyTankNumber
                        mov EnemyTank2Dead,1
                        mov al,EnemyTank2X
                        mov XPOsition,al
                        mov al,EnemyTank2Y
                        mov YPosition,al

                        call EnemyBomb
                        ret

CheckEnemy2Die          endp
;----------------------------------------------------------------------------
;-----------------------------------------------------------------------------
CheckEnemy3Die          proc
                        cmp EnemyTank3Dead,1
                        jz NotCheck3
                        cmp EnemyTank3Life,0
                        jz Enemy3Die
                        mov al,EnemyTank3X
                        mov EnemyX,al
                        mov al,EnemyTank3Y
                        mov EnemyY,al
                        mov al,FoundObjectX
                        mov FireX,al
                        mov al,FoundObjectY
                        mov FireY,al
                        call CalObject
                        cmp ObjectFound,1
                        jz ReduceEnemy3Life
                        ret

NotCheck3:              ret

ReduceEnemy3Life:       dec EnemyTank3Life
                        cmp EnemyTank3Life,0
                        jz Enemy3Die
                        ret

Enemy3Die:              mov al,EnemyTank3Level
                        mov EnemyTankLevel,al
                        call EnemyCheckScore
                        mov Enemy3ScoreChange,1
                        mov al,EnemyTank3X
                        mov EnemyTankX,al
                        mov al,EnemyTank3Y                     
                        mov EnemyTankY,al
                        mov EnemyTank3Dead,1
                        call EraseEnemyTank
                        dec EnemyTankNumber
                        mov al,EnemyTank3X
                        mov XPOsition,al
                        mov al,EnemyTank3Y
                        mov YPosition,al

                        call EnemyBomb
                        ret

CheckEnemy3Die          endp
;----------------------------------------------------------------------------
;-----------------------------------------------------------------------------
CheckEnemy4Die          proc
                        cmp EnemyTank4Dead,1
                        jz NotCheck4
                        cmp EnemyTank4Life,0
                        jz Enemy4Die
                        mov al,EnemyTank4X
                        mov EnemyX,al
                        mov al,EnemyTank4Y
                        mov EnemyY,al
                        mov al,FoundObjectX
                        mov FireX,al
                        mov al,FoundObjectY
                        mov FireY,al
                        call CalObject
                        cmp ObjectFound,1
                        jz ReduceEnemy4Life
                        ret

NotCheck4:              ret

ReduceEnemy4Life:       dec EnemyTank4Life
                        cmp EnemyTank4Life,0
                        jz Enemy4Die
                        ret

Enemy4Die:              mov al,EnemyTank4Level
                        mov EnemyTankLevel,al                        
                        call EnemyCheckScore
                        mov Enemy4ScoreChange,1
                        mov EnemyTankY,al
                        mov EnemyTank4Dead,1
                        call EraseEnemyTank
                        dec EnemyTankNumber
                        mov al,EnemyTank4X
                        mov XPOsition,al
                        mov al,EnemyTank4Y
                        mov YPosition,al
                        call EnemyBomb
                        ret

CheckEnemy4Die          endp
;----------------------------------------------------------------------------
;-----------------------------------------------------------------------------
CheckEnemy5Die          proc
                        cmp EnemyTank5Dead,1
                        jz NotCheck5
                        cmp EnemyTank5Life,0
                        jz Enemy5Die
                        mov al,EnemyTank5X
                        mov EnemyX,al
                        mov al,EnemyTank5Y
                        mov EnemyY,al
                        mov al,FoundObjectX
                        mov FireX,al
                        mov al,FoundObjectY
                        mov FireY,al
                        call CalObject
                        cmp ObjectFound,1
                        jz ReduceEnemy5Life
                        ret

NotCheck5:              ret

ReduceEnemy5Life:       dec EnemyTank5Life
                        cmp EnemyTank5Life,0
                        jz Enemy5Die
                        ret

Enemy5Die:              mov al,EnemyTank5Level
                        mov EnemyTankLevel,al
                        call EnemyCheckScore
                        mov Enemy5ScoreChange,1
                        mov al,EnemyTank5X                      
                        mov EnemyTankX,al
                        mov al,EnemyTank5Y                     
                        mov EnemyTankY,al
                        mov EnemyTank5Dead,1
                        call EraseEnemyTank
                        mov al,EnemyTank5X
                        mov XPOsition,al
                        mov al,EnemyTank5Y
                        mov YPosition,al
                        call EnemyBomb
                        dec EnemyTankNumber
                        ret

CheckEnemy5Die          endp
;----------------------------------------------------------------------------

EnemyCheckScore         proc
                        cmp EnemyTankLevel,Level1
                        jz AddScoreLevel1
                        cmp EnemyTankLevel,Level2
                        jz AddScoreLevel2
                        cmp EnemyTankLevel,Level3
                        jz AddScoreLevel3
                        cmp EnemyTankLevel,Level4
                        jz AddScoreLevel4
                        ret

AddScoreLevel1:         add ScoreNow,50
                        ret

AddScoreLevel2:         add ScoreNow,100
                        ret

AddScoreLevel3:         add ScoreNow,150
                        ret

AddScoreLevel4:         add ScoreNow,200
                        ret

EnemyCheckScore         endp
;----------------------------------------------------------------------------
UpDateNewScore          proc                        
                        mov ah,2
                        mov bh,0
                        mov dh,22
                        mov dl,32
                        int 10h
                        mov ax,ScoreNow
                        xor dx,dx
                        mov cx,4
                        mov bx,10

loopx:                  div bx
                        push dx
                        xor dx,dx
                        loop loopx
                        mov cx,4

loop1:                  pop ax
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        loop loop1
                        ret

UpDateNewScore          endp
;-----------------------------------------------------------------------------
EnemyBomb               proc
                        call Random
                        cmp RandomNumber,2
                        jbe BlockBomb
                        cmp RandomNumber,3
                        jz ConCreteBomb
                        cmp RandomNumber,4
                        jz WaterBomb

BlockBomb:              lea si,Block
                        call WriteObject
                        ret

ConCreteBomb:           lea si,ConCrete
                        call WriteObject
                        ret

WaterBomb:              lea si,Water
                        call WriteObject
                        ret

EnemyBomb               endp
;---------------------------------------------------------------------------
UpdateEnemyLife1        proc
                        mov ah,2
                        mov dl,35
                        mov dh,11
                        int 10h
                        mov al,EnemyTank1Life
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        mov ah,2
                        mov dl,35
                        mov dh,12
                        int 10h
                        mov al,EnemyTank2Life
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        mov ah,2
                        mov dl,35
                        mov dh,13
                        int 10h
                        mov al,EnemyTank3Life
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        mov ah,2
                        mov dl,35
                        mov dh,14
                        int 10h
                        mov al,EnemyTank4Life
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        mov ah,2
                        mov dl,35
                        mov dh,15
                        int 10h
                        mov al,EnemyTank5Life
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        ret
UpdateEnemyLife1        endp
;---------------------------------------------------------------------------
CheckMyTankLife         proc
                        mov al,MytankX
                        mov EnemyX,al
                        mov al,MytankY
                        mov EnemyY,al
                        mov al,EnemyMissileX
                        mov FireX,al
                        mov al,EnemyMissileY
                        mov FireY,al
                        call CalObject
                        cmp ObjectFound,1
                        jz ReduceMyLife
                        ret

ReduceMyLife:           dec MyTankLife
                        cmp MyTankLife,0
                        jz MyTankDie
                        ret

MyTankDie:              mov GameOver,1
                        ret


CheckMyTankLife         endp
;---------------------------------------------------------------------------
CheckAngleDead          proc
                        mov XPosition,104
                        mov YPosition,174
                        mov TestObject,1
                        call WriteObject
                        cmp HadObject,1
                        jnz AngleDead
                        ret

AngleDead:              mov GameOver,1                        
                        ret

CheckAngleDead          endp
;---------------------------------------------------------------------------
UpdateHighScore         proc
                        mov ax,HighScore
                        cmp ax,ScoreNow
                        jb UpdateNewHighScore
                        call DelayDiablo3
                        call RemoveNewInt9
                        mov ah,0
                        mov al,3
                        int 10h
                        ret

UpdateNewHighScore:     
                        call DelayDiablo3
                        call RemoveNewInt9
                        mov ah,0
                        mov al,3
                        int 10h
                        mov ah,2
                        mov bh,0
                        mov dl,20
                        mov dh,11
                        int 10h

                        mov ax,cs
                        mov es,ax
                        mov ds,ax
                        lea dx,YourScoreMsg
                        mov ah,9
                        int 21h

                        mov ah,2
                        mov bh,0
                        mov dl,34
                        mov dh,11
                        int 10h

                        mov ax,ScoreNow
                        xor dx,dx
                        mov cx,4
                        mov bx,10

loopx4:                 div bx
                        push dx
                        xor dx,dx
                        loop loopX4
                        mov cx,4

loop4:                  pop ax
                        add al,30H
                        mov dl,al
                        mov ah,2
                        int 21h
                        loop loop4

                        mov ah,2
                        mov bh,0
                        mov dl,5
                        mov dh,13
                        int 10h
                        lea dx,NameMsg
                        mov ah,9
                        int 21h
                        mov cx,8
                        lea di,YourName
                        cld

GetNewChar:             mov ah,1
                        int 21h
                        cmp al,0dh
                        jz FinishGetName
                        stosb
                        loop GetNewChar

FinishGetName:          mov cx,8
                        cld
                        lea si,YourName
                        lea di,ScoreBuffer
                        repnz movsb
                        cld
                        lea di,ScoreBuffer
                        add di,8
                        mov ax,ScoreNow
                        xor dx,dx
                        mov cx,4
                        mov bx,10

loopx5:                 div bx
                        push dx
                        xor dx,dx
                        loop loopX5
                        mov cx,4

loop5:                  pop ax
                        add al,30H
                        stosb
                        loop loop5
                        mov ah,41h
                        lea dx,FileName
                        int 21h
                        mov ah,3eh
                        mov bx,FileHandle
                        int 21h
                        mov ah,3ch
                        mov cx,0
                        lea dx,FileName
                        int 21h
                        mov ax,FileHandle
                        mov ah,40h
                        mov cx,12
                        mov bx,FileHandle
                        lea dx,ScoreBuffer
                        int 21h
                        jc WriteError
                        mov ah,3eh
                        mov bx,FileHandle
                        int 21h
                        ret

WriteError:             cmp al,6
                        jz FileHandleError
                        lea dx,AccessDenie
                        mov ah,9
                        int 21h
                        ret

FileHandleError:        lea dx,HandleError
                        mov ah,9
                        int 21h
                        ret


UpdateHighScore         endp
;----------------------------------------------------------------------------

VideoBuffer1                    db 0

end begin

