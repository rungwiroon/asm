PUT_MAK	PROC
START_PUT_MAK :
	XOR	BX,BX
	MOV	COUNT,0
	
CHECK_64_ELEMENT :

	CMP	[TABLE+BX],0
	JE	CALL_VERIFY
	
	INC	BX

	CMP	BX,63
	JLE	CHECK_64_ELEMENT
	JMP	END_GAME 


CALL_VERIFY :

	MOV	CHECK_POINT,0
	CMP	SET_PLAY,1
	JE	WHITE_TURN
	JNE     BLACK_TURN

WHITE_TURN :	

	CALL	VERIFY_TABLE		;if white pass then SET_PLAY = 2

	CMP	SET_PLAY,2		;in case white cann't put
	JE	BLACK_TURN

	PIC_LOCATE	257,152,PIC_BLACK_TURN0
	PIC_LOCATE	5,152,PIC_WHITE_TURN1
	JMP	PUT_START

BLACK_TURN :

	CALL	VERIFY_TABLE		;if black pass then SET_PLAY = 2
	CMP	SET_PLAY,1		;in case black cann't put
	JE	WHITE_TURN

	PIC_LOCATE	5,152,PIC_WHITE_TURN0
	PIC_LOCATE	257,152,PIC_BLACK_TURN1

PUT_START :

	SHOW_MOUSE		
	WAITCLICK		;return X_MICKY,Y_MICKY
	HIDE_MOUSE		

	CALL	CHECK_ESC_NEW	;check for click ESC or click NEW, in chk_m_table.asm 
			

	CALL	FIND_ROW	;in chkmouse.asm --> return ROW <--

	CMP	ROW,9
	JE	PUT_START

	CALL	FIND_COL	;in chkmouse.asm --> return COL <--

	CMP	COL,9
	JE	PUT_START

	MOVM	TEMP_ROW,ROW		;\
	MOVM	TEMP_COL,COL		; \
	CALL	TO_POS			;  \
	XOR	BX,BX			;   ]-> check for click 'blank' table?
	MOV	BL,POSITION		;  /    if yes, then SET_COUNT1 
	CMP	[TABLE+BX],0		; /	   no, must click again
	JNE	PUT_START		;/

	JMP	SET_COUNT1
;/////////////////////////////////////////////////////////////
;/////////////////////////////////////////////////////////////
;/////////////////////////////////////////////////////////////

SET_COUNT1 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,ROW
	MOVM	TEMP_COL,COL

	MOVM	TEMP_ROW2,ROW
	MOVM	TEMP_COL2,COL

COUNT_SHELL1 :

	INC	TEMP_COL

	CMP	TEMP_COL,8
	JNLE	SET_COUNT2

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT2

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP1
	INC	COUNT
	JMP	COUNT_SHELL1

SET_NEW_TEMP1 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT2

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL

CHECK_COUNT1 :

	CMP	COUNT,0
	JNG	SET_COUNT2

	INC	TEMP_COL
	
	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT1

;//////////////////////////////////////////////////////////////////
SET_COUNT2 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL2 :

	DEC	TEMP_COL

	CMP	TEMP_COL,1
	JNGE	SET_COUNT3

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT3

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP2
	INC	COUNT
	JMP	COUNT_SHELL2

SET_NEW_TEMP2 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT3

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL

CHECK_COUNT2 :

	CMP	COUNT,0
	JNG	SET_COUNT3

	DEC	TEMP_COL			 

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT2
;////////////////////////////////////////////////////////////////////////////
SET_COUNT3 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL3 :

	INC	TEMP_ROW

	CMP	TEMP_ROW,8
	JNLE	SET_COUNT4

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT4

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP3
	INC	COUNT
	JMP	COUNT_SHELL3

SET_NEW_TEMP3 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT4

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL
CHECK_COUNT3 :

	CMP	COUNT,0
	JNG	SET_COUNT4

	INC	TEMP_ROW

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT3
;//////////////////////////////////////////////////////////////////
SET_COUNT4 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL4 :

	DEC	TEMP_ROW

	CMP	TEMP_ROW,1
	JNGE	SET_COUNT5

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT5

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP4
	INC	COUNT
	JMP	COUNT_SHELL4

SET_NEW_TEMP4 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT5

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL
CHECK_COUNT4 :

	CMP	COUNT,0
	JNG	SET_COUNT5

	DEC	TEMP_ROW			 

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT4

;//////////////////////////////////////////////////////////////////
SET_COUNT5 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL5 :

	INC	TEMP_ROW
	DEC	TEMP_COL

	CMP	TEMP_ROW,8
	JNLE	SET_COUNT6

	CMP	TEMP_COL,1
	JNGE	SET_COUNT6

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT6

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP5
	INC	COUNT
	JMP	COUNT_SHELL5

SET_NEW_TEMP5 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT6

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL
CHECK_COUNT5 :

	CMP	COUNT,0
	JNG	SET_COUNT6

	INC	TEMP_ROW
	DEC	TEMP_COL			 

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT5

;//////////////////////////////////////////////////////////////////
SET_COUNT6 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL6 :

	DEC	TEMP_ROW
	INC	TEMP_COL

	CMP	TEMP_ROW,1
	JNGE	SET_COUNT7

	CMP	TEMP_COL,8
	JNLE	SET_COUNT7

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT7

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP6
	INC	COUNT
	JMP	COUNT_SHELL6

SET_NEW_TEMP6 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT7

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL

CHECK_COUNT6 :

	CMP	COUNT,0
	JNG	SET_COUNT7

	DEC	TEMP_ROW
	INC	TEMP_COL			 

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT6

;//////////////////////////////////////////////////////////////////
SET_COUNT7 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL7 :

	INC	TEMP_ROW
	INC	TEMP_COL

	CMP	TEMP_ROW,8
	JNLE	SET_COUNT8

	CMP	TEMP_COL,8
	JNLE	SET_COUNT8

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	SET_COUNT8

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP7
	INC	COUNT
	JMP	COUNT_SHELL7

SET_NEW_TEMP7 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	SET_COUNT8

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL
CHECK_COUNT7 :

	CMP	COUNT,0
	JNG	SET_COUNT8

	INC	TEMP_ROW
	INC	TEMP_COL			 

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT7

;//////////////////////////////////////////////////////////////////
SET_COUNT8 :

	MOV	COUNT,0
	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

COUNT_SHELL8 :

	DEC	TEMP_ROW
	DEC	TEMP_COL

	CMP	TEMP_ROW,1
	JNGE	END_TURN

	CMP	TEMP_COL,1
	JNGE	END_TURN

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION

	CMP	[TABLE+BX],0
	JE	END_TURN

	MOV	AL,SET_PLAY
	CMP	[TABLE+BX],AL
	JE	SET_NEW_TEMP8
	INC	COUNT
	JMP	COUNT_SHELL8

SET_NEW_TEMP8 :

	MOVM	TEMP_ROW,TEMP_ROW2
	MOVM	TEMP_COL,TEMP_COL2

	CMP	COUNT,0
	JNG	END_TURN

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR FISRT STEP ==> CURRENT POSITION FOR YOU INSERT
	CALL	PUT_PIC_SHELL

CHECK_COUNT8 :

	CMP	COUNT,0
	JNG	END_TURN

	DEC	TEMP_ROW
	DEC	TEMP_COL			 

	CALL	TO_POS
	XOR	BX,BX
	MOV	BL,POSITION
	MOVM	[TABLE+BX],SET_PLAY		;FOR NEXT STEP 
	CALL	PUT_PIC_SHELL

	DEC	COUNT
	MOV	CHECK_POINT,1
	JMP	CHECK_COUNT8

END_TURN :

	CMP	CHECK_POINT,0
	JE	START_PUT_MAK			;in case don't change set_play

	CALL	_SCORE		;is in score.asm
	CHANGE_SET_PLAY
	JMP	START_PUT_MAK		;change turn
	RET

PUT_MAK	ENDP